(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _isBrowser = require('./tools/is-browser');

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isWin = (0, _isBrowser2.default)();
var supportSearchParams = isWin && 'URLSearchParams' in window;
var supportArrayBuffer = isWin && 'ArrayBuffer' in window;

var AjaxJsonError = function (_Error) {
	_inherits(AjaxJsonError, _Error);

	function AjaxJsonError(message, name, code) {
		_classCallCheck(this, AjaxJsonError);

		var _this = _possibleConstructorReturn(this, (AjaxJsonError.__proto__ || Object.getPrototypeOf(AjaxJsonError)).call(this, message));

		_this.name = name;
		_this.code = code;
		return _this;
	}

	return AjaxJsonError;
}(Error);

if (supportArrayBuffer) {
	var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

	var isArrayBufferView = ArrayBuffer.isView || function (obj) {
		return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
	};
}

function makeQueryValue(name, value, isArray) {
	if (value === null || value === undefined) {
		value = '';
	} else if (typeof value === 'boolean') {
		value = value ? '1' : '0';
	}

	if (isArray) {
		name += '[]';
	} else {
		name = encodeURIComponent(name);
		if (Array.isArray(value)) {
			name = value.map(function (val) {
				return makeQueryValue(name, val, true);
			}).join('&');
		} else if (value) {
			name += '=' + encodeURIComponent(String(value));
		}
	}

	return name;
}

function makeQuery(data) {
	return Object.keys(data).map(function (name) {
		return makeQueryValue(name, data[name], false);
	}).join('&');
}

function makeForm(data) {
	var value = void 0;
	var form = new FormData();
	var json = [];

	Object.keys(data).forEach(function (name) {

		value = data[name];
		if (value === null || value === undefined) {
			value = '';
		} else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
			// array too
			// TODO add file
			json.push(name);
			value = JSON.stringify(value);
		} else if (typeof value === 'boolean') {
			value = value ? '1' : '0';
		} else {
			value = String(value);
		}

		form.append(name, value);
	});

	if (json.length) {
		form.append('__json', json);
	}

	return form;
}

function normalizeName(name) {
	if (typeof name !== 'string') {
		name = String(name);
	}
	if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
		throw new AjaxJsonError('Invalid character in header field name', 'argument', 200);
	}
	return name.toLowerCase();
}

function normalizeValue(value) {
	if (typeof value !== 'string') {
		value = String(value);
	}
	return value;
}

// Build a destructive iterator for the value list
function iteratorFor(items) {
	return {
		next: function next() {
			var value = items.shift();
			return { done: value === undefined, value: value };
		}
	};
}

function Headers(headers) {
	this.map = {};

	if (headers instanceof Headers) {
		headers.forEach(function (value, name) {
			this.append(name, value);
		}, this);
	} else if (headers) {
		Object.getOwnPropertyNames(headers).forEach(function (name) {
			this.append(name, headers[name]);
		}, this);
	}
}

Headers.prototype.append = function (name, value) {
	name = normalizeName(name);
	value = normalizeValue(value);
	var oldValue = this.map[name];
	this.map[name] = oldValue ? oldValue + ',' + value : value;
};

Headers.prototype['delete'] = function (name) {
	delete this.map[normalizeName(name)];
};

Headers.prototype.get = function (name) {
	name = normalizeName(name);
	return this.has(name) ? this.map[name] : null;
};

Headers.prototype.has = function (name) {
	return this.map.hasOwnProperty(normalizeName(name));
};

Headers.prototype.set = function (name, value) {
	this.map[normalizeName(name)] = normalizeValue(value);
};

Headers.prototype.forEach = function (callback, thisArg) {
	for (var name in this.map) {
		if (this.map.hasOwnProperty(name)) {
			callback.call(thisArg, this.map[name], name, this);
		}
	}
};

Headers.prototype.keys = function () {
	var items = [];
	this.forEach(function (value, name) {
		items.push(name);
	});
	return iteratorFor(items);
};

Headers.prototype.values = function () {
	var items = [];
	this.forEach(function (value) {
		items.push(value);
	});
	return iteratorFor(items);
};

Headers.prototype.entries = function () {
	var items = [];
	this.forEach(function (value, name) {
		items.push([name, value]);
	});
	return iteratorFor(items);
};

function consumed(body) {
	if (body.bodyUsed) {
		return Promise.reject(new AjaxJsonError('Already read', 'argument', 201));
	}
	body.bodyUsed = true;
}

function readArrayBufferAsText(buf) {
	var view = new Uint8Array(buf);
	var chars = new Array(view.length);

	for (var i = 0; i < view.length; i++) {
		chars[i] = String.fromCharCode(view[i]);
	}
	return chars.join('');
}

function bufferClone(buf) {
	if (buf.slice) {
		return buf.slice(0);
	} else {
		var view = new Uint8Array(buf.byteLength);
		view.set(new Uint8Array(buf));
		return view.buffer;
	}
}

function Body() {
	this.bodyUsed = false;

	this._initBody = function (body) {
		this._bodyInit = body;
		if (!body) {
			this._bodyText = '';
		} else if (typeof body === 'string') {
			this._bodyText = body;
		} else if (supportSearchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
			this._bodyText = body.toString();
		} else if (supportArrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
			this._bodyArrayBuffer = bufferClone(body);
		} else if (FormData.prototype.isPrototypeOf(body)) {
			this._bodyFormData = body;
		} else {
			throw new Error('unsupported BodyInit type');
		}

		if (!this.headers.get('content-type')) {
			if (typeof body === 'string') {
				this.headers.set('content-type', 'text/plain;charset=UTF-8');
			} else if (supportSearchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
				this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
			}
		}
	};

	this.text = function () {
		var rejected = consumed(this);
		if (rejected) {
			return rejected;
		}

		if (this._bodyArrayBuffer) {
			return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
		} else {
			return Promise.resolve(this._bodyText);
		}
	};

	this.json = function () {
		return this.text().then(JSON.parse);
	};

	return this;
}

// HTTP methods whose capitalization should be normalized
var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

function normalizeMethod(method) {
	var upcased = method.toUpperCase();
	return methods.indexOf(upcased) > -1 ? upcased : method;
}

function Request(input, options) {
	options = options || {};
	var body = options.body;

	if (input instanceof Request) {
		if (input.bodyUsed) {
			throw new AjaxJsonError('Already read', 'argument', 201);
		}
		this.url = input.url;
		this.credentials = input.credentials;
		if (!options.headers) {
			this.headers = new Headers(input.headers);
		}
		this.method = input.method;
		this.mode = input.mode;
		if (!body && input._bodyInit != null) {
			body = input._bodyInit;
			input.bodyUsed = true;
		}
	} else {
		this.url = String(input);
	}

	this.credentials = options.credentials || this.credentials || 'omit';
	if (options.headers || !this.headers) {
		this.headers = new Headers(options.headers);
	}
	this.method = normalizeMethod(options.method || this.method || 'GET');
	this.mode = options.mode || this.mode || null;
	this.referrer = null;
	this.timeout = null;

	if (typeof input.timeout == "number" && input.timeout > 0) {
		this.timeout = input.timeout;
	}

	if (body) {
		var object = (typeof body === 'undefined' ? 'undefined' : _typeof(body)) === "object";
		if (object && this.method === 'GET') {
			this.url += (~this.url.indexOf('?') ? '&' : '?') + makeQuery(body);
			body = null;
		} else if (this.method === 'GET' || this.method === 'HEAD') {
			throw new AjaxJsonError('Body not allowed for GET or HEAD requests', 'argument', 200);
		} else if (this.method === 'POST' && object) {
			body = makeForm(body);
		}
	}

	this._initBody(body);
}

Request.prototype.clone = function () {
	return new Request(this, { body: this._bodyInit });
};

function parseHeaders(rawHeaders) {
	var headers = new Headers();
	rawHeaders.split(/\r?\n/).forEach(function (line) {
		var parts = line.split(':');
		var key = parts.shift().trim();
		if (key) {
			var value = parts.join(':').trim();
			headers.append(key, value);
		}
	});
	return headers;
}

Body.call(Request.prototype);

function Response(bodyInit, options) {
	if (!options) {
		options = {};
	}

	this.type = 'default';
	this.status = 'status' in options ? options.status : 200;
	this.ok = this.status >= 200 && this.status < 300;
	this.statusText = 'statusText' in options ? options.statusText : 'OK';
	this.headers = new Headers(options.headers);
	this.url = options.url || '';
	this._initBody(bodyInit);
}

Body.call(Response.prototype);

Response.prototype.clone = function () {
	return new Response(this._bodyInit, {
		status: this.status,
		statusText: this.statusText,
		headers: new Headers(this.headers),
		url: this.url
	});
};

Response.error = function () {
	var response = new Response(null, { status: 0, statusText: '' });
	response.type = 'error';
	return response;
};

var redirectStatuses = [301, 302, 303, 307, 308];

Response.redirect = function (url, status) {
	if (redirectStatuses.indexOf(status) === -1) {
		throw new RangeError('Invalid status code');
	}

	return new Response(null, { status: status, headers: { location: url } });
};

var queryStatus = 'complete';
var xhr = void 0;
var error = void 0;

var TriggerOnUrl = function TriggerOnUrl(url) {
	return String(url);
};
var TriggerOnComplete = function TriggerOnComplete(json) {
	return json;
};

var AjaxJson = {
	set onUrl(trigger) {
		if (typeof trigger === "function") TriggerOnUrl = trigger;
	},
	set onComplete(trigger) {
		if (typeof trigger === "function") TriggerOnComplete = trigger;
	},

	get onUrl() {
		return TriggerOnUrl;
	},
	get onComplete() {
		return TriggerOnComplete;
	},

	abort: function abort() {
		if (queryStatus === 'progress') {
			queryStatus = 'abort';
			xhr.abort();
			xhr = error = null;
		}
		return this;
	},


	get completed() {
		return queryStatus !== 'progress';
	},

	get status() {
		return queryStatus;
	},

	query: function query(input, init) {
		input = TriggerOnUrl(input);

		if (queryStatus === 'progress') {
			var e = error || function (e) {
				throw e;
			};
			this.abort();
			e(new AjaxJsonError('User aborted', 'abort', 3));
		}

		var request = new Request(input, init);
		xhr = new XMLHttpRequest();
		queryStatus = 'open';

		return new Promise(function (_resolve, _reject) {

			var reject = function reject(error) {
				if (queryStatus === 'progress') queryStatus = 'failure';
				_reject(error);
			};

			var resolve = function resolve(result) {
				queryStatus = 'success';
				try {
					result = TriggerOnComplete(result);
				} catch (err) {
					return _reject(err);
				}
				_resolve(result);
			};

			xhr.onload = function () {

				var options = {
					status: xhr.status,
					statusText: xhr.statusText,
					headers: parseHeaders(xhr.getAllResponseHeaders() || '')
				};

				options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
				var body = 'response' in xhr ? xhr.response : xhr.responseText;

				new Response(body, options).json().then(resolve).catch(function () {
					reject(new AjaxJsonError('Unknown server answer [invalid JSON]', 'json', 100));
				});
			};

			xhr.onerror = function () {
				reject(new AjaxJsonError('Network request failed', 'network', 1));
			};

			xhr.ontimeout = function () {
				reject(new AjaxJsonError('Network request failed', 'timeout', 2));
			};

			xhr.open(request.method, request.url, true);

			if (request.credentials === 'include') {
				xhr.withCredentials = true;
			}

			if (request.timeout > 0) {
				xhr.timeout = request.timeout;
			}

			request.headers.forEach(function (value, name) {
				xhr.setRequestHeader(name, value);
			});

			queryStatus = 'progress';
			error = reject;
			xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
		});
	}
};

exports.default = AjaxJson;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFqYXgtanNvbi5qcyJdLCJuYW1lcyI6WyJpc1dpbiIsInN1cHBvcnRTZWFyY2hQYXJhbXMiLCJ3aW5kb3ciLCJzdXBwb3J0QXJyYXlCdWZmZXIiLCJBamF4SnNvbkVycm9yIiwibWVzc2FnZSIsIm5hbWUiLCJjb2RlIiwiRXJyb3IiLCJ2aWV3Q2xhc3NlcyIsImlzQXJyYXlCdWZmZXJWaWV3IiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJvYmoiLCJpbmRleE9mIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwibWFrZVF1ZXJ5VmFsdWUiLCJ2YWx1ZSIsImlzQXJyYXkiLCJ1bmRlZmluZWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJBcnJheSIsIm1hcCIsInZhbCIsImpvaW4iLCJTdHJpbmciLCJtYWtlUXVlcnkiLCJkYXRhIiwia2V5cyIsIm1ha2VGb3JtIiwiZm9ybSIsIkZvcm1EYXRhIiwianNvbiIsImZvckVhY2giLCJwdXNoIiwiSlNPTiIsInN0cmluZ2lmeSIsImFwcGVuZCIsImxlbmd0aCIsIm5vcm1hbGl6ZU5hbWUiLCJ0ZXN0IiwidG9Mb3dlckNhc2UiLCJub3JtYWxpemVWYWx1ZSIsIml0ZXJhdG9yRm9yIiwiaXRlbXMiLCJuZXh0Iiwic2hpZnQiLCJkb25lIiwiSGVhZGVycyIsImhlYWRlcnMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwib2xkVmFsdWUiLCJnZXQiLCJoYXMiLCJoYXNPd25Qcm9wZXJ0eSIsInNldCIsImNhbGxiYWNrIiwidGhpc0FyZyIsInZhbHVlcyIsImVudHJpZXMiLCJjb25zdW1lZCIsImJvZHkiLCJib2R5VXNlZCIsIlByb21pc2UiLCJyZWplY3QiLCJyZWFkQXJyYXlCdWZmZXJBc1RleHQiLCJidWYiLCJ2aWV3IiwiVWludDhBcnJheSIsImNoYXJzIiwiaSIsImZyb21DaGFyQ29kZSIsImJ1ZmZlckNsb25lIiwic2xpY2UiLCJieXRlTGVuZ3RoIiwiYnVmZmVyIiwiQm9keSIsIl9pbml0Qm9keSIsIl9ib2R5SW5pdCIsIl9ib2R5VGV4dCIsIlVSTFNlYXJjaFBhcmFtcyIsImlzUHJvdG90eXBlT2YiLCJfYm9keUFycmF5QnVmZmVyIiwiX2JvZHlGb3JtRGF0YSIsInRleHQiLCJyZWplY3RlZCIsInJlc29sdmUiLCJ0aGVuIiwicGFyc2UiLCJtZXRob2RzIiwibm9ybWFsaXplTWV0aG9kIiwibWV0aG9kIiwidXBjYXNlZCIsInRvVXBwZXJDYXNlIiwiUmVxdWVzdCIsImlucHV0Iiwib3B0aW9ucyIsInVybCIsImNyZWRlbnRpYWxzIiwibW9kZSIsInJlZmVycmVyIiwidGltZW91dCIsIm9iamVjdCIsImNsb25lIiwicGFyc2VIZWFkZXJzIiwicmF3SGVhZGVycyIsInNwbGl0IiwibGluZSIsInBhcnRzIiwia2V5IiwidHJpbSIsIlJlc3BvbnNlIiwiYm9keUluaXQiLCJ0eXBlIiwic3RhdHVzIiwib2siLCJzdGF0dXNUZXh0IiwiZXJyb3IiLCJyZXNwb25zZSIsInJlZGlyZWN0U3RhdHVzZXMiLCJyZWRpcmVjdCIsIlJhbmdlRXJyb3IiLCJsb2NhdGlvbiIsInF1ZXJ5U3RhdHVzIiwieGhyIiwiVHJpZ2dlck9uVXJsIiwiVHJpZ2dlck9uQ29tcGxldGUiLCJBamF4SnNvbiIsIm9uVXJsIiwidHJpZ2dlciIsIm9uQ29tcGxldGUiLCJhYm9ydCIsImNvbXBsZXRlZCIsInF1ZXJ5IiwiaW5pdCIsImUiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJfcmVzb2x2ZSIsIl9yZWplY3QiLCJyZXN1bHQiLCJlcnIiLCJvbmxvYWQiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZVVSTCIsInJlc3BvbnNlVGV4dCIsImNhdGNoIiwib25lcnJvciIsIm9udGltZW91dCIsIm9wZW4iLCJ3aXRoQ3JlZGVudGlhbHMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsUUFBUSwwQkFBZDtBQUNBLElBQU1DLHNCQUFzQkQsU0FBUyxxQkFBcUJFLE1BQTFEO0FBQ0EsSUFBTUMscUJBQXNCSCxTQUFTLGlCQUFpQkUsTUFBdEQ7O0lBRU1FLGE7OztBQUVMLHdCQUFZQyxPQUFaLEVBQXFCQyxJQUFyQixFQUEyQkMsSUFBM0IsRUFBaUM7QUFBQTs7QUFBQSw0SEFDMUJGLE9BRDBCOztBQUVoQyxRQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxRQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFIZ0M7QUFJaEM7OztFQU4wQkMsSzs7QUFTNUIsSUFBSUwsa0JBQUosRUFBd0I7QUFDdkIsS0FBTU0sY0FBYyxDQUNuQixvQkFEbUIsRUFFbkIscUJBRm1CLEVBR25CLDRCQUhtQixFQUluQixxQkFKbUIsRUFLbkIsc0JBTG1CLEVBTW5CLHFCQU5tQixFQU9uQixzQkFQbUIsRUFRbkIsdUJBUm1CLEVBU25CLHVCQVRtQixDQUFwQjs7QUFZQSxLQUFJQyxvQkFBb0JDLFlBQVlDLE1BQVosSUFBc0IsVUFBU0MsR0FBVCxFQUFjO0FBQUUsU0FBT0EsT0FBT0osWUFBWUssT0FBWixDQUFvQkMsT0FBT0MsU0FBUCxDQUFpQkMsUUFBakIsQ0FBMEJDLElBQTFCLENBQStCTCxHQUEvQixDQUFwQixJQUEyRCxDQUFDLENBQTFFO0FBQTZFLEVBQTNJO0FBQ0E7O0FBRUQsU0FBU00sY0FBVCxDQUF3QmIsSUFBeEIsRUFBOEJjLEtBQTlCLEVBQXFDQyxPQUFyQyxFQUNBO0FBQ0MsS0FBSUQsVUFBVSxJQUFWLElBQWtCQSxVQUFVRSxTQUFoQyxFQUE0QztBQUMzQ0YsVUFBUSxFQUFSO0FBQ0EsRUFGRCxNQUdLLElBQUksT0FBT0EsS0FBUCxLQUFpQixTQUFyQixFQUFpQztBQUNyQ0EsVUFBUUEsUUFBUSxHQUFSLEdBQWMsR0FBdEI7QUFDQTs7QUFFRCxLQUFJQyxPQUFKLEVBQWM7QUFDYmYsVUFBUSxJQUFSO0FBQ0EsRUFGRCxNQUdLO0FBQ0pBLFNBQU9pQixtQkFBbUJqQixJQUFuQixDQUFQO0FBQ0EsTUFBSWtCLE1BQU1ILE9BQU4sQ0FBY0QsS0FBZCxDQUFKLEVBQTJCO0FBQzFCZCxVQUFPYyxNQUFNSyxHQUFOLENBQVU7QUFBQSxXQUFPTixlQUFlYixJQUFmLEVBQXFCb0IsR0FBckIsRUFBMEIsSUFBMUIsQ0FBUDtBQUFBLElBQVYsRUFBa0RDLElBQWxELENBQXVELEdBQXZELENBQVA7QUFDQSxHQUZELE1BR0ssSUFBSVAsS0FBSixFQUFZO0FBQ2hCZCxXQUFRLE1BQU1pQixtQkFBbUJLLE9BQU9SLEtBQVAsQ0FBbkIsQ0FBZDtBQUNBO0FBQ0Q7O0FBRUQsUUFBT2QsSUFBUDtBQUNBOztBQUVELFNBQVN1QixTQUFULENBQW9CQyxJQUFwQixFQUNBO0FBQ0MsUUFBT2YsT0FBT2dCLElBQVAsQ0FBWUQsSUFBWixFQUFrQkwsR0FBbEIsQ0FBc0I7QUFBQSxTQUFRTixlQUFlYixJQUFmLEVBQXFCd0IsS0FBS3hCLElBQUwsQ0FBckIsRUFBaUMsS0FBakMsQ0FBUjtBQUFBLEVBQXRCLEVBQXVFcUIsSUFBdkUsQ0FBNEUsR0FBNUUsQ0FBUDtBQUNBOztBQUVELFNBQVNLLFFBQVQsQ0FBbUJGLElBQW5CLEVBQ0E7QUFDQyxLQUFJVixjQUFKO0FBQ0EsS0FBSWEsT0FBTyxJQUFJQyxRQUFKLEVBQVg7QUFDQSxLQUFJQyxPQUFPLEVBQVg7O0FBRUFwQixRQUFPZ0IsSUFBUCxDQUFZRCxJQUFaLEVBQWtCTSxPQUFsQixDQUEwQixVQUFDOUIsSUFBRCxFQUFVOztBQUVuQ2MsVUFBUVUsS0FBS3hCLElBQUwsQ0FBUjtBQUNBLE1BQUljLFVBQVUsSUFBVixJQUFrQkEsVUFBVUUsU0FBaEMsRUFBNEM7QUFDM0NGLFdBQVEsRUFBUjtBQUNBLEdBRkQsTUFHSyxJQUFJLFFBQU9BLEtBQVAseUNBQU9BLEtBQVAsT0FBaUIsUUFBckIsRUFBZ0M7QUFBRTtBQUN0QztBQUNBZSxRQUFLRSxJQUFMLENBQVUvQixJQUFWO0FBQ0FjLFdBQVFrQixLQUFLQyxTQUFMLENBQWVuQixLQUFmLENBQVI7QUFDQSxHQUpJLE1BS0EsSUFBSSxPQUFPQSxLQUFQLEtBQWlCLFNBQXJCLEVBQWlDO0FBQ3JDQSxXQUFRQSxRQUFRLEdBQVIsR0FBYyxHQUF0QjtBQUNBLEdBRkksTUFHQTtBQUNKQSxXQUFRUSxPQUFRUixLQUFSLENBQVI7QUFDQTs7QUFFRGEsT0FBS08sTUFBTCxDQUFZbEMsSUFBWixFQUFrQmMsS0FBbEI7QUFDQSxFQW5CRDs7QUFxQkEsS0FBSWUsS0FBS00sTUFBVCxFQUFrQjtBQUNqQlIsT0FBS08sTUFBTCxDQUFZLFFBQVosRUFBc0JMLElBQXRCO0FBQ0E7O0FBRUQsUUFBT0YsSUFBUDtBQUNBOztBQUVELFNBQVNTLGFBQVQsQ0FBdUJwQyxJQUF2QixFQUE2QjtBQUM1QixLQUFJLE9BQU9BLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDN0JBLFNBQU9zQixPQUFPdEIsSUFBUCxDQUFQO0FBQ0E7QUFDRCxLQUFJLDZCQUE2QnFDLElBQTdCLENBQWtDckMsSUFBbEMsQ0FBSixFQUE2QztBQUM1QyxRQUFNLElBQUlGLGFBQUosQ0FBa0Isd0NBQWxCLEVBQTRELFVBQTVELEVBQXdFLEdBQXhFLENBQU47QUFDQTtBQUNELFFBQU9FLEtBQUtzQyxXQUFMLEVBQVA7QUFDQTs7QUFFRCxTQUFTQyxjQUFULENBQXdCekIsS0FBeEIsRUFBK0I7QUFDOUIsS0FBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzlCQSxVQUFRUSxPQUFPUixLQUFQLENBQVI7QUFDQTtBQUNELFFBQU9BLEtBQVA7QUFDQTs7QUFFRDtBQUNBLFNBQVMwQixXQUFULENBQXFCQyxLQUFyQixFQUE0QjtBQUMzQixRQUFPO0FBQ05DLFFBQU0sZ0JBQVc7QUFDaEIsT0FBSTVCLFFBQVEyQixNQUFNRSxLQUFOLEVBQVo7QUFDQSxVQUFPLEVBQUNDLE1BQU05QixVQUFVRSxTQUFqQixFQUE0QkYsT0FBT0EsS0FBbkMsRUFBUDtBQUNBO0FBSkssRUFBUDtBQU1BOztBQUVELFNBQVMrQixPQUFULENBQWlCQyxPQUFqQixFQUEwQjtBQUN6QixNQUFLM0IsR0FBTCxHQUFXLEVBQVg7O0FBRUEsS0FBSTJCLG1CQUFtQkQsT0FBdkIsRUFBZ0M7QUFDL0JDLFVBQVFoQixPQUFSLENBQWdCLFVBQVNoQixLQUFULEVBQWdCZCxJQUFoQixFQUFzQjtBQUNyQyxRQUFLa0MsTUFBTCxDQUFZbEMsSUFBWixFQUFrQmMsS0FBbEI7QUFDQSxHQUZELEVBRUcsSUFGSDtBQUlBLEVBTEQsTUFLTyxJQUFJZ0MsT0FBSixFQUFhO0FBQ25CckMsU0FBT3NDLG1CQUFQLENBQTJCRCxPQUEzQixFQUFvQ2hCLE9BQXBDLENBQTRDLFVBQVM5QixJQUFULEVBQWU7QUFDMUQsUUFBS2tDLE1BQUwsQ0FBWWxDLElBQVosRUFBa0I4QyxRQUFROUMsSUFBUixDQUFsQjtBQUNBLEdBRkQsRUFFRyxJQUZIO0FBR0E7QUFDRDs7QUFFRDZDLFFBQVFuQyxTQUFSLENBQWtCd0IsTUFBbEIsR0FBMkIsVUFBU2xDLElBQVQsRUFBZWMsS0FBZixFQUFzQjtBQUNoRGQsUUFBT29DLGNBQWNwQyxJQUFkLENBQVA7QUFDQWMsU0FBUXlCLGVBQWV6QixLQUFmLENBQVI7QUFDQSxLQUFJa0MsV0FBVyxLQUFLN0IsR0FBTCxDQUFTbkIsSUFBVCxDQUFmO0FBQ0EsTUFBS21CLEdBQUwsQ0FBU25CLElBQVQsSUFBaUJnRCxXQUFXQSxXQUFTLEdBQVQsR0FBYWxDLEtBQXhCLEdBQWdDQSxLQUFqRDtBQUNBLENBTEQ7O0FBT0ErQixRQUFRbkMsU0FBUixDQUFrQixRQUFsQixJQUE4QixVQUFTVixJQUFULEVBQWU7QUFDNUMsUUFBTyxLQUFLbUIsR0FBTCxDQUFTaUIsY0FBY3BDLElBQWQsQ0FBVCxDQUFQO0FBQ0EsQ0FGRDs7QUFJQTZDLFFBQVFuQyxTQUFSLENBQWtCdUMsR0FBbEIsR0FBd0IsVUFBU2pELElBQVQsRUFBZTtBQUN0Q0EsUUFBT29DLGNBQWNwQyxJQUFkLENBQVA7QUFDQSxRQUFPLEtBQUtrRCxHQUFMLENBQVNsRCxJQUFULElBQWlCLEtBQUttQixHQUFMLENBQVNuQixJQUFULENBQWpCLEdBQWtDLElBQXpDO0FBQ0EsQ0FIRDs7QUFLQTZDLFFBQVFuQyxTQUFSLENBQWtCd0MsR0FBbEIsR0FBd0IsVUFBU2xELElBQVQsRUFBZTtBQUN0QyxRQUFPLEtBQUttQixHQUFMLENBQVNnQyxjQUFULENBQXdCZixjQUFjcEMsSUFBZCxDQUF4QixDQUFQO0FBQ0EsQ0FGRDs7QUFJQTZDLFFBQVFuQyxTQUFSLENBQWtCMEMsR0FBbEIsR0FBd0IsVUFBU3BELElBQVQsRUFBZWMsS0FBZixFQUFzQjtBQUM3QyxNQUFLSyxHQUFMLENBQVNpQixjQUFjcEMsSUFBZCxDQUFULElBQWdDdUMsZUFBZXpCLEtBQWYsQ0FBaEM7QUFDQSxDQUZEOztBQUlBK0IsUUFBUW5DLFNBQVIsQ0FBa0JvQixPQUFsQixHQUE0QixVQUFTdUIsUUFBVCxFQUFtQkMsT0FBbkIsRUFBNEI7QUFDdkQsTUFBSyxJQUFJdEQsSUFBVCxJQUFpQixLQUFLbUIsR0FBdEIsRUFBMkI7QUFDMUIsTUFBSSxLQUFLQSxHQUFMLENBQVNnQyxjQUFULENBQXdCbkQsSUFBeEIsQ0FBSixFQUFtQztBQUNsQ3FELFlBQVN6QyxJQUFULENBQWMwQyxPQUFkLEVBQXVCLEtBQUtuQyxHQUFMLENBQVNuQixJQUFULENBQXZCLEVBQXVDQSxJQUF2QyxFQUE2QyxJQUE3QztBQUNBO0FBQ0Q7QUFDRCxDQU5EOztBQVFBNkMsUUFBUW5DLFNBQVIsQ0FBa0JlLElBQWxCLEdBQXlCLFlBQVc7QUFDbkMsS0FBSWdCLFFBQVEsRUFBWjtBQUNBLE1BQUtYLE9BQUwsQ0FBYSxVQUFTaEIsS0FBVCxFQUFnQmQsSUFBaEIsRUFBc0I7QUFBRXlDLFFBQU1WLElBQU4sQ0FBVy9CLElBQVg7QUFBa0IsRUFBdkQ7QUFDQSxRQUFPd0MsWUFBWUMsS0FBWixDQUFQO0FBQ0EsQ0FKRDs7QUFNQUksUUFBUW5DLFNBQVIsQ0FBa0I2QyxNQUFsQixHQUEyQixZQUFXO0FBQ3JDLEtBQUlkLFFBQVEsRUFBWjtBQUNBLE1BQUtYLE9BQUwsQ0FBYSxVQUFTaEIsS0FBVCxFQUFnQjtBQUFFMkIsUUFBTVYsSUFBTixDQUFXakIsS0FBWDtBQUFtQixFQUFsRDtBQUNBLFFBQU8wQixZQUFZQyxLQUFaLENBQVA7QUFDQSxDQUpEOztBQU1BSSxRQUFRbkMsU0FBUixDQUFrQjhDLE9BQWxCLEdBQTRCLFlBQVc7QUFDdEMsS0FBSWYsUUFBUSxFQUFaO0FBQ0EsTUFBS1gsT0FBTCxDQUFhLFVBQVNoQixLQUFULEVBQWdCZCxJQUFoQixFQUFzQjtBQUFFeUMsUUFBTVYsSUFBTixDQUFXLENBQUMvQixJQUFELEVBQU9jLEtBQVAsQ0FBWDtBQUEyQixFQUFoRTtBQUNBLFFBQU8wQixZQUFZQyxLQUFaLENBQVA7QUFDQSxDQUpEOztBQU1BLFNBQVNnQixRQUFULENBQWtCQyxJQUFsQixFQUF3QjtBQUN2QixLQUFJQSxLQUFLQyxRQUFULEVBQW1CO0FBQ2xCLFNBQU9DLFFBQVFDLE1BQVIsQ0FBZSxJQUFJL0QsYUFBSixDQUFrQixjQUFsQixFQUFrQyxVQUFsQyxFQUE4QyxHQUE5QyxDQUFmLENBQVA7QUFDQTtBQUNENEQsTUFBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNBOztBQUVELFNBQVNHLHFCQUFULENBQStCQyxHQUEvQixFQUFvQztBQUNuQyxLQUFJQyxPQUFPLElBQUlDLFVBQUosQ0FBZUYsR0FBZixDQUFYO0FBQ0EsS0FBSUcsUUFBUSxJQUFJaEQsS0FBSixDQUFVOEMsS0FBSzdCLE1BQWYsQ0FBWjs7QUFFQSxNQUFLLElBQUlnQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlILEtBQUs3QixNQUF6QixFQUFpQ2dDLEdBQWpDLEVBQXNDO0FBQ3JDRCxRQUFNQyxDQUFOLElBQVc3QyxPQUFPOEMsWUFBUCxDQUFvQkosS0FBS0csQ0FBTCxDQUFwQixDQUFYO0FBQ0E7QUFDRCxRQUFPRCxNQUFNN0MsSUFBTixDQUFXLEVBQVgsQ0FBUDtBQUNBOztBQUVELFNBQVNnRCxXQUFULENBQXFCTixHQUFyQixFQUEwQjtBQUN6QixLQUFJQSxJQUFJTyxLQUFSLEVBQWU7QUFDZCxTQUFPUCxJQUFJTyxLQUFKLENBQVUsQ0FBVixDQUFQO0FBQ0EsRUFGRCxNQUVPO0FBQ04sTUFBSU4sT0FBTyxJQUFJQyxVQUFKLENBQWVGLElBQUlRLFVBQW5CLENBQVg7QUFDQVAsT0FBS1osR0FBTCxDQUFTLElBQUlhLFVBQUosQ0FBZUYsR0FBZixDQUFUO0FBQ0EsU0FBT0MsS0FBS1EsTUFBWjtBQUNBO0FBQ0Q7O0FBRUQsU0FBU0MsSUFBVCxHQUFnQjtBQUNmLE1BQUtkLFFBQUwsR0FBZ0IsS0FBaEI7O0FBRUEsTUFBS2UsU0FBTCxHQUFpQixVQUFTaEIsSUFBVCxFQUFlO0FBQy9CLE9BQUtpQixTQUFMLEdBQWlCakIsSUFBakI7QUFDQSxNQUFJLENBQUNBLElBQUwsRUFBVztBQUNWLFFBQUtrQixTQUFMLEdBQWlCLEVBQWpCO0FBQ0EsR0FGRCxNQUVPLElBQUksT0FBT2xCLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDcEMsUUFBS2tCLFNBQUwsR0FBaUJsQixJQUFqQjtBQUNBLEdBRk0sTUFFQSxJQUFJL0QsdUJBQXVCa0YsZ0JBQWdCbkUsU0FBaEIsQ0FBMEJvRSxhQUExQixDQUF3Q3BCLElBQXhDLENBQTNCLEVBQTBFO0FBQ2hGLFFBQUtrQixTQUFMLEdBQWlCbEIsS0FBSy9DLFFBQUwsRUFBakI7QUFDQSxHQUZNLE1BRUEsSUFBSWQsdUJBQXVCUSxZQUFZSyxTQUFaLENBQXNCb0UsYUFBdEIsQ0FBb0NwQixJQUFwQyxLQUE2Q3RELGtCQUFrQnNELElBQWxCLENBQXBFLENBQUosRUFBa0c7QUFDeEcsUUFBS3FCLGdCQUFMLEdBQXdCVixZQUFZWCxJQUFaLENBQXhCO0FBQ0EsR0FGTSxNQUVBLElBQUc5QixTQUFTbEIsU0FBVCxDQUFtQm9FLGFBQW5CLENBQWlDcEIsSUFBakMsQ0FBSCxFQUEyQztBQUNqRCxRQUFLc0IsYUFBTCxHQUFxQnRCLElBQXJCO0FBQ0EsR0FGTSxNQUVBO0FBQ04sU0FBTSxJQUFJeEQsS0FBSixDQUFVLDJCQUFWLENBQU47QUFDQTs7QUFFRCxNQUFJLENBQUMsS0FBSzRDLE9BQUwsQ0FBYUcsR0FBYixDQUFpQixjQUFqQixDQUFMLEVBQXVDO0FBQ3RDLE9BQUksT0FBT1MsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUM3QixTQUFLWixPQUFMLENBQWFNLEdBQWIsQ0FBaUIsY0FBakIsRUFBaUMsMEJBQWpDO0FBQ0EsSUFGRCxNQUVPLElBQUl6RCx1QkFBdUJrRixnQkFBZ0JuRSxTQUFoQixDQUEwQm9FLGFBQTFCLENBQXdDcEIsSUFBeEMsQ0FBM0IsRUFBMEU7QUFDaEYsU0FBS1osT0FBTCxDQUFhTSxHQUFiLENBQWlCLGNBQWpCLEVBQWlDLGlEQUFqQztBQUNBO0FBQ0Q7QUFDRCxFQXZCRDs7QUF5QkEsTUFBSzZCLElBQUwsR0FBWSxZQUFXO0FBQ3RCLE1BQUlDLFdBQVd6QixTQUFTLElBQVQsQ0FBZjtBQUNBLE1BQUl5QixRQUFKLEVBQWM7QUFDYixVQUFPQSxRQUFQO0FBQ0E7O0FBRUQsTUFBSSxLQUFLSCxnQkFBVCxFQUEyQjtBQUMxQixVQUFPbkIsUUFBUXVCLE9BQVIsQ0FBZ0JyQixzQkFBc0IsS0FBS2lCLGdCQUEzQixDQUFoQixDQUFQO0FBQ0EsR0FGRCxNQUVPO0FBQ04sVUFBT25CLFFBQVF1QixPQUFSLENBQWdCLEtBQUtQLFNBQXJCLENBQVA7QUFDQTtBQUNELEVBWEQ7O0FBYUEsTUFBSy9DLElBQUwsR0FBWSxZQUFXO0FBQ3RCLFNBQU8sS0FBS29ELElBQUwsR0FBWUcsSUFBWixDQUFpQnBELEtBQUtxRCxLQUF0QixDQUFQO0FBQ0EsRUFGRDs7QUFJQSxRQUFPLElBQVA7QUFDQTs7QUFFRDtBQUNBLElBQU1DLFVBQVUsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixNQUFsQixFQUEwQixTQUExQixFQUFxQyxNQUFyQyxFQUE2QyxLQUE3QyxDQUFoQjs7QUFFQSxTQUFTQyxlQUFULENBQXlCQyxNQUF6QixFQUNBO0FBQ0MsS0FBSUMsVUFBVUQsT0FBT0UsV0FBUCxFQUFkO0FBQ0EsUUFBUUosUUFBUTlFLE9BQVIsQ0FBZ0JpRixPQUFoQixJQUEyQixDQUFDLENBQTdCLEdBQWtDQSxPQUFsQyxHQUE0Q0QsTUFBbkQ7QUFDQTs7QUFFRCxTQUFTRyxPQUFULENBQWlCQyxLQUFqQixFQUF3QkMsT0FBeEIsRUFDQTtBQUNDQSxXQUFVQSxXQUFXLEVBQXJCO0FBQ0EsS0FBSW5DLE9BQU9tQyxRQUFRbkMsSUFBbkI7O0FBRUEsS0FBSWtDLGlCQUFpQkQsT0FBckIsRUFBOEI7QUFDN0IsTUFBSUMsTUFBTWpDLFFBQVYsRUFBb0I7QUFDbkIsU0FBTSxJQUFJN0QsYUFBSixDQUFrQixjQUFsQixFQUFrQyxVQUFsQyxFQUE4QyxHQUE5QyxDQUFOO0FBQ0E7QUFDRCxPQUFLZ0csR0FBTCxHQUFXRixNQUFNRSxHQUFqQjtBQUNBLE9BQUtDLFdBQUwsR0FBbUJILE1BQU1HLFdBQXpCO0FBQ0EsTUFBSSxDQUFDRixRQUFRL0MsT0FBYixFQUFzQjtBQUNyQixRQUFLQSxPQUFMLEdBQWUsSUFBSUQsT0FBSixDQUFZK0MsTUFBTTlDLE9BQWxCLENBQWY7QUFDQTtBQUNELE9BQUswQyxNQUFMLEdBQWNJLE1BQU1KLE1BQXBCO0FBQ0EsT0FBS1EsSUFBTCxHQUFZSixNQUFNSSxJQUFsQjtBQUNBLE1BQUksQ0FBQ3RDLElBQUQsSUFBU2tDLE1BQU1qQixTQUFOLElBQW1CLElBQWhDLEVBQXNDO0FBQ3JDakIsVUFBT2tDLE1BQU1qQixTQUFiO0FBQ0FpQixTQUFNakMsUUFBTixHQUFpQixJQUFqQjtBQUNBO0FBQ0QsRUFmRCxNQWVPO0FBQ04sT0FBS21DLEdBQUwsR0FBV3hFLE9BQU9zRSxLQUFQLENBQVg7QUFDQTs7QUFFRCxNQUFLRyxXQUFMLEdBQW1CRixRQUFRRSxXQUFSLElBQXVCLEtBQUtBLFdBQTVCLElBQTJDLE1BQTlEO0FBQ0EsS0FBSUYsUUFBUS9DLE9BQVIsSUFBbUIsQ0FBQyxLQUFLQSxPQUE3QixFQUFzQztBQUNyQyxPQUFLQSxPQUFMLEdBQWUsSUFBSUQsT0FBSixDQUFZZ0QsUUFBUS9DLE9BQXBCLENBQWY7QUFDQTtBQUNELE1BQUswQyxNQUFMLEdBQWNELGdCQUFnQk0sUUFBUUwsTUFBUixJQUFrQixLQUFLQSxNQUF2QixJQUFpQyxLQUFqRCxDQUFkO0FBQ0EsTUFBS1EsSUFBTCxHQUFZSCxRQUFRRyxJQUFSLElBQWdCLEtBQUtBLElBQXJCLElBQTZCLElBQXpDO0FBQ0EsTUFBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNBLE1BQUtDLE9BQUwsR0FBZSxJQUFmOztBQUVBLEtBQUksT0FBT04sTUFBTU0sT0FBYixJQUF3QixRQUF4QixJQUFvQ04sTUFBTU0sT0FBTixHQUFnQixDQUF4RCxFQUEyRDtBQUMxRCxPQUFLQSxPQUFMLEdBQWVOLE1BQU1NLE9BQXJCO0FBQ0E7O0FBRUQsS0FBSXhDLElBQUosRUFBVztBQUNWLE1BQUl5QyxTQUFTLFFBQU96QyxJQUFQLHlDQUFPQSxJQUFQLE9BQWdCLFFBQTdCO0FBQ0EsTUFBSXlDLFVBQVUsS0FBS1gsTUFBTCxLQUFnQixLQUE5QixFQUFzQztBQUNyQyxRQUFLTSxHQUFMLElBQVksQ0FBQyxDQUFDLEtBQUtBLEdBQUwsQ0FBU3RGLE9BQVQsQ0FBaUIsR0FBakIsQ0FBRCxHQUF5QixHQUF6QixHQUErQixHQUFoQyxJQUF1Q2UsVUFBVW1DLElBQVYsQ0FBbkQ7QUFDQUEsVUFBTyxJQUFQO0FBQ0EsR0FIRCxNQUlLLElBQUssS0FBSzhCLE1BQUwsS0FBZ0IsS0FBaEIsSUFBeUIsS0FBS0EsTUFBTCxLQUFnQixNQUE5QyxFQUF1RDtBQUMzRCxTQUFNLElBQUkxRixhQUFKLENBQWtCLDJDQUFsQixFQUErRCxVQUEvRCxFQUEyRSxHQUEzRSxDQUFOO0FBQ0EsR0FGSSxNQUdBLElBQUcsS0FBSzBGLE1BQUwsS0FBZ0IsTUFBaEIsSUFBMEJXLE1BQTdCLEVBQXNDO0FBQzFDekMsVUFBT2hDLFNBQVNnQyxJQUFULENBQVA7QUFDQTtBQUNEOztBQUVELE1BQUtnQixTQUFMLENBQWVoQixJQUFmO0FBQ0E7O0FBRURpQyxRQUFRakYsU0FBUixDQUFrQjBGLEtBQWxCLEdBQTBCLFlBQzFCO0FBQ0MsUUFBTyxJQUFJVCxPQUFKLENBQVksSUFBWixFQUFrQixFQUFFakMsTUFBTSxLQUFLaUIsU0FBYixFQUFsQixDQUFQO0FBQ0EsQ0FIRDs7QUFLQSxTQUFTMEIsWUFBVCxDQUFzQkMsVUFBdEIsRUFDQTtBQUNDLEtBQUl4RCxVQUFVLElBQUlELE9BQUosRUFBZDtBQUNBeUQsWUFBV0MsS0FBWCxDQUFpQixPQUFqQixFQUEwQnpFLE9BQTFCLENBQWtDLFVBQVMwRSxJQUFULEVBQWU7QUFDaEQsTUFBSUMsUUFBUUQsS0FBS0QsS0FBTCxDQUFXLEdBQVgsQ0FBWjtBQUNBLE1BQUlHLE1BQU1ELE1BQU05RCxLQUFOLEdBQWNnRSxJQUFkLEVBQVY7QUFDQSxNQUFJRCxHQUFKLEVBQVM7QUFDUixPQUFJNUYsUUFBUTJGLE1BQU1wRixJQUFOLENBQVcsR0FBWCxFQUFnQnNGLElBQWhCLEVBQVo7QUFDQTdELFdBQVFaLE1BQVIsQ0FBZXdFLEdBQWYsRUFBb0I1RixLQUFwQjtBQUNBO0FBQ0QsRUFQRDtBQVFBLFFBQU9nQyxPQUFQO0FBQ0E7O0FBRUQyQixLQUFLN0QsSUFBTCxDQUFVK0UsUUFBUWpGLFNBQWxCOztBQUVBLFNBQVNrRyxRQUFULENBQWtCQyxRQUFsQixFQUE0QmhCLE9BQTVCLEVBQ0E7QUFDQyxLQUFJLENBQUNBLE9BQUwsRUFBYztBQUNiQSxZQUFVLEVBQVY7QUFDQTs7QUFFRCxNQUFLaUIsSUFBTCxHQUFZLFNBQVo7QUFDQSxNQUFLQyxNQUFMLEdBQWMsWUFBWWxCLE9BQVosR0FBc0JBLFFBQVFrQixNQUE5QixHQUF1QyxHQUFyRDtBQUNBLE1BQUtDLEVBQUwsR0FBVSxLQUFLRCxNQUFMLElBQWUsR0FBZixJQUFzQixLQUFLQSxNQUFMLEdBQWMsR0FBOUM7QUFDQSxNQUFLRSxVQUFMLEdBQWtCLGdCQUFnQnBCLE9BQWhCLEdBQTBCQSxRQUFRb0IsVUFBbEMsR0FBK0MsSUFBakU7QUFDQSxNQUFLbkUsT0FBTCxHQUFlLElBQUlELE9BQUosQ0FBWWdELFFBQVEvQyxPQUFwQixDQUFmO0FBQ0EsTUFBS2dELEdBQUwsR0FBV0QsUUFBUUMsR0FBUixJQUFlLEVBQTFCO0FBQ0EsTUFBS3BCLFNBQUwsQ0FBZW1DLFFBQWY7QUFDQTs7QUFFRHBDLEtBQUs3RCxJQUFMLENBQVVnRyxTQUFTbEcsU0FBbkI7O0FBRUFrRyxTQUFTbEcsU0FBVCxDQUFtQjBGLEtBQW5CLEdBQTJCLFlBQzNCO0FBQ0MsUUFBTyxJQUFJUSxRQUFKLENBQWEsS0FBS2pDLFNBQWxCLEVBQTZCO0FBQ25Db0MsVUFBUSxLQUFLQSxNQURzQjtBQUVuQ0UsY0FBWSxLQUFLQSxVQUZrQjtBQUduQ25FLFdBQVMsSUFBSUQsT0FBSixDQUFZLEtBQUtDLE9BQWpCLENBSDBCO0FBSW5DZ0QsT0FBSyxLQUFLQTtBQUp5QixFQUE3QixDQUFQO0FBTUEsQ0FSRDs7QUFVQWMsU0FBU00sS0FBVCxHQUFpQixZQUNqQjtBQUNDLEtBQUlDLFdBQVcsSUFBSVAsUUFBSixDQUFhLElBQWIsRUFBbUIsRUFBQ0csUUFBUSxDQUFULEVBQVlFLFlBQVksRUFBeEIsRUFBbkIsQ0FBZjtBQUNBRSxVQUFTTCxJQUFULEdBQWdCLE9BQWhCO0FBQ0EsUUFBT0ssUUFBUDtBQUNBLENBTEQ7O0FBT0EsSUFBTUMsbUJBQW1CLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBQXpCOztBQUVBUixTQUFTUyxRQUFULEdBQW9CLFVBQVN2QixHQUFULEVBQWNpQixNQUFkLEVBQ3BCO0FBQ0MsS0FBSUssaUJBQWlCNUcsT0FBakIsQ0FBeUJ1RyxNQUF6QixNQUFxQyxDQUFDLENBQTFDLEVBQTZDO0FBQzVDLFFBQU0sSUFBSU8sVUFBSixDQUFlLHFCQUFmLENBQU47QUFDQTs7QUFFRCxRQUFPLElBQUlWLFFBQUosQ0FBYSxJQUFiLEVBQW1CLEVBQUNHLFFBQVFBLE1BQVQsRUFBaUJqRSxTQUFTLEVBQUN5RSxVQUFVekIsR0FBWCxFQUExQixFQUFuQixDQUFQO0FBQ0EsQ0FQRDs7QUFTQSxJQUFJMEIsY0FBYyxVQUFsQjtBQUNBLElBQUlDLFlBQUo7QUFDQSxJQUFJUCxjQUFKOztBQUVBLElBQUlRLGVBQWU7QUFBQSxRQUFPcEcsT0FBT3dFLEdBQVAsQ0FBUDtBQUFBLENBQW5CO0FBQ0EsSUFBSTZCLG9CQUFvQjtBQUFBLFFBQVE5RixJQUFSO0FBQUEsQ0FBeEI7O0FBRUEsSUFBTStGLFdBQ047QUFDQyxLQUFJQyxLQUFKLENBQVdDLE9BQVgsRUFBcUI7QUFBRSxNQUFJLE9BQU9BLE9BQVAsS0FBbUIsVUFBdkIsRUFBb0NKLGVBQWVJLE9BQWY7QUFBd0IsRUFEcEY7QUFFQyxLQUFJQyxVQUFKLENBQWdCRCxPQUFoQixFQUEwQjtBQUFFLE1BQUksT0FBT0EsT0FBUCxLQUFtQixVQUF2QixFQUFvQ0gsb0JBQW9CRyxPQUFwQjtBQUE2QixFQUY5Rjs7QUFJQyxLQUFJRCxLQUFKLEdBQVk7QUFBRSxTQUFPSCxZQUFQO0FBQXFCLEVBSnBDO0FBS0MsS0FBSUssVUFBSixHQUFpQjtBQUFFLFNBQU9KLGlCQUFQO0FBQTBCLEVBTDlDOztBQU9DSyxNQVBELG1CQVFDO0FBQ0MsTUFBSVIsZ0JBQWdCLFVBQXBCLEVBQWlDO0FBQ2hDQSxpQkFBYyxPQUFkO0FBQ0FDLE9BQUlPLEtBQUo7QUFDQVAsU0FBTVAsUUFBUSxJQUFkO0FBQ0E7QUFDRCxTQUFPLElBQVA7QUFDQSxFQWZGOzs7QUFpQkMsS0FBSWUsU0FBSixHQUNBO0FBQ0MsU0FBT1QsZ0JBQWdCLFVBQXZCO0FBQ0EsRUFwQkY7O0FBc0JDLEtBQUlULE1BQUosR0FDQTtBQUNDLFNBQU9TLFdBQVA7QUFDQSxFQXpCRjs7QUEyQkNVLE1BM0JELGlCQTJCT3RDLEtBM0JQLEVBMkJjdUMsSUEzQmQsRUE0QkM7QUFDQ3ZDLFVBQVE4QixhQUFhOUIsS0FBYixDQUFSOztBQUVBLE1BQUk0QixnQkFBZ0IsVUFBcEIsRUFBaUM7QUFDaEMsT0FBSVksSUFBSWxCLFNBQVMsVUFBVWtCLENBQVYsRUFBYTtBQUFFLFVBQU1BLENBQU47QUFBUyxJQUF6QztBQUNBLFFBQUtKLEtBQUw7QUFDQUksS0FBRyxJQUFJdEksYUFBSixDQUFrQixjQUFsQixFQUFrQyxPQUFsQyxFQUEyQyxDQUEzQyxDQUFIO0FBQ0E7O0FBRUQsTUFBSXVJLFVBQVUsSUFBSTFDLE9BQUosQ0FBWUMsS0FBWixFQUFtQnVDLElBQW5CLENBQWQ7QUFDQVYsUUFBTSxJQUFJYSxjQUFKLEVBQU47QUFDQWQsZ0JBQWMsTUFBZDs7QUFFQSxTQUFPLElBQUk1RCxPQUFKLENBQVksVUFBQzJFLFFBQUQsRUFBV0MsT0FBWCxFQUF1Qjs7QUFFekMsT0FBSTNFLFNBQVMsU0FBVEEsTUFBUyxRQUFTO0FBQ3JCLFFBQUkyRCxnQkFBZ0IsVUFBcEIsRUFBaUNBLGNBQWMsU0FBZDtBQUNqQ2dCLFlBQVF0QixLQUFSO0FBQ0EsSUFIRDs7QUFLQSxPQUFJL0IsVUFBVSxTQUFWQSxPQUFVLFNBQVU7QUFDdkJxQyxrQkFBYyxTQUFkO0FBQ0EsUUFBSTtBQUNIaUIsY0FBU2Qsa0JBQWtCYyxNQUFsQixDQUFUO0FBQ0EsS0FGRCxDQUdBLE9BQU1DLEdBQU4sRUFBVztBQUNWLFlBQU9GLFFBQVFFLEdBQVIsQ0FBUDtBQUNBO0FBQ0RILGFBQVNFLE1BQVQ7QUFDQSxJQVREOztBQVdBaEIsT0FBSWtCLE1BQUosR0FBYSxZQUFXOztBQUV2QixRQUFJOUMsVUFBVTtBQUNia0IsYUFBUVUsSUFBSVYsTUFEQztBQUViRSxpQkFBWVEsSUFBSVIsVUFGSDtBQUdibkUsY0FBU3VELGFBQWFvQixJQUFJbUIscUJBQUosTUFBK0IsRUFBNUM7QUFISSxLQUFkOztBQU1BL0MsWUFBUUMsR0FBUixHQUFjLGlCQUFpQjJCLEdBQWpCLEdBQXVCQSxJQUFJb0IsV0FBM0IsR0FBeUNoRCxRQUFRL0MsT0FBUixDQUFnQkcsR0FBaEIsQ0FBb0IsZUFBcEIsQ0FBdkQ7QUFDQSxRQUFJUyxPQUFPLGNBQWMrRCxHQUFkLEdBQW9CQSxJQUFJTixRQUF4QixHQUFtQ00sSUFBSXFCLFlBQWxEOztBQUVDLFFBQUlsQyxRQUFKLENBQWFsRCxJQUFiLEVBQW1CbUMsT0FBbkIsQ0FBRCxDQUNFaEUsSUFERixHQUVFdUQsSUFGRixDQUVPRCxPQUZQLEVBR0U0RCxLQUhGLENBR1EsWUFBTTtBQUNabEYsWUFBTyxJQUFJL0QsYUFBSixDQUFrQixzQ0FBbEIsRUFBMEQsTUFBMUQsRUFBa0UsR0FBbEUsQ0FBUDtBQUNBLEtBTEY7QUFNQSxJQWpCRDs7QUFtQkEySCxPQUFJdUIsT0FBSixHQUFjLFlBQVc7QUFDeEJuRixXQUFPLElBQUkvRCxhQUFKLENBQWtCLHdCQUFsQixFQUE0QyxTQUE1QyxFQUF1RCxDQUF2RCxDQUFQO0FBQ0EsSUFGRDs7QUFJQTJILE9BQUl3QixTQUFKLEdBQWdCLFlBQVc7QUFDMUJwRixXQUFPLElBQUkvRCxhQUFKLENBQWtCLHdCQUFsQixFQUE0QyxTQUE1QyxFQUF1RCxDQUF2RCxDQUFQO0FBQ0EsSUFGRDs7QUFJQTJILE9BQUl5QixJQUFKLENBQVNiLFFBQVE3QyxNQUFqQixFQUF5QjZDLFFBQVF2QyxHQUFqQyxFQUFzQyxJQUF0Qzs7QUFFQSxPQUFJdUMsUUFBUXRDLFdBQVIsS0FBd0IsU0FBNUIsRUFBdUM7QUFDdEMwQixRQUFJMEIsZUFBSixHQUFzQixJQUF0QjtBQUNBOztBQUVELE9BQUlkLFFBQVFuQyxPQUFSLEdBQWtCLENBQXRCLEVBQXlCO0FBQ3hCdUIsUUFBSXZCLE9BQUosR0FBY21DLFFBQVFuQyxPQUF0QjtBQUNBOztBQUVEbUMsV0FBUXZGLE9BQVIsQ0FBZ0JoQixPQUFoQixDQUF3QixVQUFDaEIsS0FBRCxFQUFRZCxJQUFSLEVBQWlCO0FBQ3hDeUgsUUFBSTJCLGdCQUFKLENBQXFCcEosSUFBckIsRUFBMkJjLEtBQTNCO0FBQ0EsSUFGRDs7QUFJQTBHLGlCQUFjLFVBQWQ7QUFDQU4sV0FBUXJELE1BQVI7QUFDQTRELE9BQUk0QixJQUFKLENBQVMsT0FBT2hCLFFBQVExRCxTQUFmLEtBQTZCLFdBQTdCLEdBQTJDLElBQTNDLEdBQWtEMEQsUUFBUTFELFNBQW5FO0FBQ0EsR0E5RE0sQ0FBUDtBQStEQTtBQXhHRixDQURBOztrQkE0R2VpRCxRIiwiZmlsZSI6ImFqYXgtanNvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJc0Jyb3dzZXIgZnJvbSBcIi4vdG9vbHMvaXMtYnJvd3NlclwiO1xyXG5cclxuY29uc3QgaXNXaW4gPSBJc0Jyb3dzZXIoKTtcclxuY29uc3Qgc3VwcG9ydFNlYXJjaFBhcmFtcyA9IGlzV2luICYmICdVUkxTZWFyY2hQYXJhbXMnIGluIHdpbmRvdztcclxuY29uc3Qgc3VwcG9ydEFycmF5QnVmZmVyICA9IGlzV2luICYmICdBcnJheUJ1ZmZlcicgaW4gd2luZG93O1xyXG5cclxuY2xhc3MgQWpheEpzb25FcnJvciBleHRlbmRzIEVycm9yXHJcbntcclxuXHRjb25zdHJ1Y3RvcihtZXNzYWdlLCBuYW1lLCBjb2RlKSB7XHJcblx0XHRzdXBlcihtZXNzYWdlKTtcclxuXHRcdHRoaXMubmFtZSA9IG5hbWU7XHJcblx0XHR0aGlzLmNvZGUgPSBjb2RlO1xyXG5cdH1cclxufVxyXG5cclxuaWYgKHN1cHBvcnRBcnJheUJ1ZmZlcikge1xyXG5cdGNvbnN0IHZpZXdDbGFzc2VzID0gW1xyXG5cdFx0J1tvYmplY3QgSW50OEFycmF5XScsXHJcblx0XHQnW29iamVjdCBVaW50OEFycmF5XScsXHJcblx0XHQnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxyXG5cdFx0J1tvYmplY3QgSW50MTZBcnJheV0nLFxyXG5cdFx0J1tvYmplY3QgVWludDE2QXJyYXldJyxcclxuXHRcdCdbb2JqZWN0IEludDMyQXJyYXldJyxcclxuXHRcdCdbb2JqZWN0IFVpbnQzMkFycmF5XScsXHJcblx0XHQnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcclxuXHRcdCdbb2JqZWN0IEZsb2F0NjRBcnJheV0nXHJcblx0XTtcclxuXHJcblx0dmFyIGlzQXJyYXlCdWZmZXJWaWV3ID0gQXJyYXlCdWZmZXIuaXNWaWV3IHx8IGZ1bmN0aW9uKG9iaikgeyByZXR1cm4gb2JqICYmIHZpZXdDbGFzc2VzLmluZGV4T2YoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikpID4gLTEgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYWtlUXVlcnlWYWx1ZShuYW1lLCB2YWx1ZSwgaXNBcnJheSlcclxue1xyXG5cdGlmKCB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0dmFsdWUgPSAnJ1xyXG5cdH1cclxuXHRlbHNlIGlmKCB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJyApIHtcclxuXHRcdHZhbHVlID0gdmFsdWUgPyAnMScgOiAnMCdcclxuXHR9XHJcblxyXG5cdGlmKCBpc0FycmF5ICkge1xyXG5cdFx0bmFtZSArPSAnW10nXHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0bmFtZSA9IGVuY29kZVVSSUNvbXBvbmVudChuYW1lKTtcclxuXHRcdGlmKCBBcnJheS5pc0FycmF5KHZhbHVlKSApIHtcclxuXHRcdFx0bmFtZSA9IHZhbHVlLm1hcCh2YWwgPT4gbWFrZVF1ZXJ5VmFsdWUobmFtZSwgdmFsLCB0cnVlKSkuam9pbignJicpXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKCB2YWx1ZSApIHtcclxuXHRcdFx0bmFtZSArPSAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHZhbHVlKSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBuYW1lXHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1ha2VRdWVyeSggZGF0YSApXHJcbntcclxuXHRyZXR1cm4gT2JqZWN0LmtleXMoZGF0YSkubWFwKG5hbWUgPT4gbWFrZVF1ZXJ5VmFsdWUobmFtZSwgZGF0YVtuYW1lXSwgZmFsc2UpKS5qb2luKCcmJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1ha2VGb3JtKCBkYXRhIClcclxue1xyXG5cdGxldCB2YWx1ZTtcclxuXHRsZXQgZm9ybSA9IG5ldyBGb3JtRGF0YSgpO1xyXG5cdGxldCBqc29uID0gW107XHJcblxyXG5cdE9iamVjdC5rZXlzKGRhdGEpLmZvckVhY2goKG5hbWUpID0+IHtcclxuXHJcblx0XHR2YWx1ZSA9IGRhdGFbbmFtZV07XHJcblx0XHRpZiggdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0dmFsdWUgPSAnJ1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiggdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyApIHsgLy8gYXJyYXkgdG9vXHJcblx0XHRcdC8vIFRPRE8gYWRkIGZpbGVcclxuXHRcdFx0anNvbi5wdXNoKG5hbWUpO1xyXG5cdFx0XHR2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYoIHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nICkge1xyXG5cdFx0XHR2YWx1ZSA9IHZhbHVlID8gJzEnIDogJzAnXHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0dmFsdWUgPSBTdHJpbmcoIHZhbHVlIClcclxuXHRcdH1cclxuXHJcblx0XHRmb3JtLmFwcGVuZChuYW1lLCB2YWx1ZSlcclxuXHR9KTtcclxuXHJcblx0aWYoIGpzb24ubGVuZ3RoICkge1xyXG5cdFx0Zm9ybS5hcHBlbmQoJ19fanNvbicsIGpzb24pXHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZm9ybTtcclxufVxyXG5cclxuZnVuY3Rpb24gbm9ybWFsaXplTmFtZShuYW1lKSB7XHJcblx0aWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykge1xyXG5cdFx0bmFtZSA9IFN0cmluZyhuYW1lKVxyXG5cdH1cclxuXHRpZiAoL1teYS16MC05XFwtIyQlJicqKy5cXF5fYHx+XS9pLnRlc3QobmFtZSkpIHtcclxuXHRcdHRocm93IG5ldyBBamF4SnNvbkVycm9yKCdJbnZhbGlkIGNoYXJhY3RlciBpbiBoZWFkZXIgZmllbGQgbmFtZScsICdhcmd1bWVudCcsIDIwMClcclxuXHR9XHJcblx0cmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKVxyXG59XHJcblxyXG5mdW5jdGlvbiBub3JtYWxpemVWYWx1ZSh2YWx1ZSkge1xyXG5cdGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XHJcblx0XHR2YWx1ZSA9IFN0cmluZyh2YWx1ZSlcclxuXHR9XHJcblx0cmV0dXJuIHZhbHVlXHJcbn1cclxuXHJcbi8vIEJ1aWxkIGEgZGVzdHJ1Y3RpdmUgaXRlcmF0b3IgZm9yIHRoZSB2YWx1ZSBsaXN0XHJcbmZ1bmN0aW9uIGl0ZXJhdG9yRm9yKGl0ZW1zKSB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG5leHQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgdmFsdWUgPSBpdGVtcy5zaGlmdCgpO1xyXG5cdFx0XHRyZXR1cm4ge2RvbmU6IHZhbHVlID09PSB1bmRlZmluZWQsIHZhbHVlOiB2YWx1ZX1cclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBIZWFkZXJzKGhlYWRlcnMpIHtcclxuXHR0aGlzLm1hcCA9IHt9O1xyXG5cclxuXHRpZiAoaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpIHtcclxuXHRcdGhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xyXG5cdFx0XHR0aGlzLmFwcGVuZChuYW1lLCB2YWx1ZSlcclxuXHRcdH0sIHRoaXMpXHJcblxyXG5cdH0gZWxzZSBpZiAoaGVhZGVycykge1xyXG5cdFx0T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoaGVhZGVycykuZm9yRWFjaChmdW5jdGlvbihuYW1lKSB7XHJcblx0XHRcdHRoaXMuYXBwZW5kKG5hbWUsIGhlYWRlcnNbbmFtZV0pXHJcblx0XHR9LCB0aGlzKVxyXG5cdH1cclxufVxyXG5cclxuSGVhZGVycy5wcm90b3R5cGUuYXBwZW5kID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcclxuXHRuYW1lID0gbm9ybWFsaXplTmFtZShuYW1lKTtcclxuXHR2YWx1ZSA9IG5vcm1hbGl6ZVZhbHVlKHZhbHVlKTtcclxuXHR2YXIgb2xkVmFsdWUgPSB0aGlzLm1hcFtuYW1lXTtcclxuXHR0aGlzLm1hcFtuYW1lXSA9IG9sZFZhbHVlID8gb2xkVmFsdWUrJywnK3ZhbHVlIDogdmFsdWVcclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlWydkZWxldGUnXSA9IGZ1bmN0aW9uKG5hbWUpIHtcclxuXHRkZWxldGUgdGhpcy5tYXBbbm9ybWFsaXplTmFtZShuYW1lKV1cclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKG5hbWUpIHtcclxuXHRuYW1lID0gbm9ybWFsaXplTmFtZShuYW1lKTtcclxuXHRyZXR1cm4gdGhpcy5oYXMobmFtZSkgPyB0aGlzLm1hcFtuYW1lXSA6IG51bGxcclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uKG5hbWUpIHtcclxuXHRyZXR1cm4gdGhpcy5tYXAuaGFzT3duUHJvcGVydHkobm9ybWFsaXplTmFtZShuYW1lKSlcclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XHJcblx0dGhpcy5tYXBbbm9ybWFsaXplTmFtZShuYW1lKV0gPSBub3JtYWxpemVWYWx1ZSh2YWx1ZSlcclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbihjYWxsYmFjaywgdGhpc0FyZykge1xyXG5cdGZvciAodmFyIG5hbWUgaW4gdGhpcy5tYXApIHtcclxuXHRcdGlmICh0aGlzLm1hcC5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xyXG5cdFx0XHRjYWxsYmFjay5jYWxsKHRoaXNBcmcsIHRoaXMubWFwW25hbWVdLCBuYW1lLCB0aGlzKVxyXG5cdFx0fVxyXG5cdH1cclxufTtcclxuXHJcbkhlYWRlcnMucHJvdG90eXBlLmtleXMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgaXRlbXMgPSBbXTtcclxuXHR0aGlzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHsgaXRlbXMucHVzaChuYW1lKSB9KTtcclxuXHRyZXR1cm4gaXRlcmF0b3JGb3IoaXRlbXMpXHJcbn07XHJcblxyXG5IZWFkZXJzLnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgaXRlbXMgPSBbXTtcclxuXHR0aGlzLmZvckVhY2goZnVuY3Rpb24odmFsdWUpIHsgaXRlbXMucHVzaCh2YWx1ZSkgfSk7XHJcblx0cmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxyXG59O1xyXG5cclxuSGVhZGVycy5wcm90b3R5cGUuZW50cmllcyA9IGZ1bmN0aW9uKCkge1xyXG5cdHZhciBpdGVtcyA9IFtdO1xyXG5cdHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkgeyBpdGVtcy5wdXNoKFtuYW1lLCB2YWx1ZV0pIH0pO1xyXG5cdHJldHVybiBpdGVyYXRvckZvcihpdGVtcylcclxufTtcclxuXHJcbmZ1bmN0aW9uIGNvbnN1bWVkKGJvZHkpIHtcclxuXHRpZiAoYm9keS5ib2R5VXNlZCkge1xyXG5cdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBBamF4SnNvbkVycm9yKCdBbHJlYWR5IHJlYWQnLCAnYXJndW1lbnQnLCAyMDEpKVxyXG5cdH1cclxuXHRib2R5LmJvZHlVc2VkID0gdHJ1ZVxyXG59XHJcblxyXG5mdW5jdGlvbiByZWFkQXJyYXlCdWZmZXJBc1RleHQoYnVmKSB7XHJcblx0dmFyIHZpZXcgPSBuZXcgVWludDhBcnJheShidWYpO1xyXG5cdHZhciBjaGFycyA9IG5ldyBBcnJheSh2aWV3Lmxlbmd0aCk7XHJcblxyXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgdmlldy5sZW5ndGg7IGkrKykge1xyXG5cdFx0Y2hhcnNbaV0gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHZpZXdbaV0pXHJcblx0fVxyXG5cdHJldHVybiBjaGFycy5qb2luKCcnKVxyXG59XHJcblxyXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWYpIHtcclxuXHRpZiAoYnVmLnNsaWNlKSB7XHJcblx0XHRyZXR1cm4gYnVmLnNsaWNlKDApXHJcblx0fSBlbHNlIHtcclxuXHRcdHZhciB2aWV3ID0gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ5dGVMZW5ndGgpO1xyXG5cdFx0dmlldy5zZXQobmV3IFVpbnQ4QXJyYXkoYnVmKSk7XHJcblx0XHRyZXR1cm4gdmlldy5idWZmZXJcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEJvZHkoKSB7XHJcblx0dGhpcy5ib2R5VXNlZCA9IGZhbHNlO1xyXG5cclxuXHR0aGlzLl9pbml0Qm9keSA9IGZ1bmN0aW9uKGJvZHkpIHtcclxuXHRcdHRoaXMuX2JvZHlJbml0ID0gYm9keTtcclxuXHRcdGlmICghYm9keSkge1xyXG5cdFx0XHR0aGlzLl9ib2R5VGV4dCA9ICcnXHJcblx0XHR9IGVsc2UgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xyXG5cdFx0XHR0aGlzLl9ib2R5VGV4dCA9IGJvZHlcclxuXHRcdH0gZWxzZSBpZiAoc3VwcG9ydFNlYXJjaFBhcmFtcyAmJiBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcclxuXHRcdFx0dGhpcy5fYm9keVRleHQgPSBib2R5LnRvU3RyaW5nKClcclxuXHRcdH0gZWxzZSBpZiAoc3VwcG9ydEFycmF5QnVmZmVyICYmIChBcnJheUJ1ZmZlci5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSB8fCBpc0FycmF5QnVmZmVyVmlldyhib2R5KSkpIHtcclxuXHRcdFx0dGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keSlcclxuXHRcdH0gZWxzZSBpZihGb3JtRGF0YS5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSkge1xyXG5cdFx0XHR0aGlzLl9ib2R5Rm9ybURhdGEgPSBib2R5XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ3Vuc3VwcG9ydGVkIEJvZHlJbml0IHR5cGUnKVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICghdGhpcy5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJykpIHtcclxuXHRcdFx0aWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xyXG5cdFx0XHRcdHRoaXMuaGVhZGVycy5zZXQoJ2NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnKVxyXG5cdFx0XHR9IGVsc2UgaWYgKHN1cHBvcnRTZWFyY2hQYXJhbXMgJiYgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpKSB7XHJcblx0XHRcdFx0dGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JylcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHRoaXMudGV4dCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIHJlamVjdGVkID0gY29uc3VtZWQodGhpcyk7XHJcblx0XHRpZiAocmVqZWN0ZWQpIHtcclxuXHRcdFx0cmV0dXJuIHJlamVjdGVkXHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcikge1xyXG5cdFx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlYWRBcnJheUJ1ZmZlckFzVGV4dCh0aGlzLl9ib2R5QXJyYXlCdWZmZXIpKVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9ib2R5VGV4dClcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHR0aGlzLmpzb24gPSBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB0aGlzLnRleHQoKS50aGVuKEpTT04ucGFyc2UpXHJcblx0fTtcclxuXHJcblx0cmV0dXJuIHRoaXNcclxufVxyXG5cclxuLy8gSFRUUCBtZXRob2RzIHdob3NlIGNhcGl0YWxpemF0aW9uIHNob3VsZCBiZSBub3JtYWxpemVkXHJcbmNvbnN0IG1ldGhvZHMgPSBbJ0RFTEVURScsICdHRVQnLCAnSEVBRCcsICdPUFRJT05TJywgJ1BPU1QnLCAnUFVUJ107XHJcblxyXG5mdW5jdGlvbiBub3JtYWxpemVNZXRob2QobWV0aG9kKVxyXG57XHJcblx0dmFyIHVwY2FzZWQgPSBtZXRob2QudG9VcHBlckNhc2UoKTtcclxuXHRyZXR1cm4gKG1ldGhvZHMuaW5kZXhPZih1cGNhc2VkKSA+IC0xKSA/IHVwY2FzZWQgOiBtZXRob2RcclxufVxyXG5cclxuZnVuY3Rpb24gUmVxdWVzdChpbnB1dCwgb3B0aW9ucylcclxue1xyXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG5cdHZhciBib2R5ID0gb3B0aW9ucy5ib2R5O1xyXG5cclxuXHRpZiAoaW5wdXQgaW5zdGFuY2VvZiBSZXF1ZXN0KSB7XHJcblx0XHRpZiAoaW5wdXQuYm9keVVzZWQpIHtcclxuXHRcdFx0dGhyb3cgbmV3IEFqYXhKc29uRXJyb3IoJ0FscmVhZHkgcmVhZCcsICdhcmd1bWVudCcsIDIwMSlcclxuXHRcdH1cclxuXHRcdHRoaXMudXJsID0gaW5wdXQudXJsO1xyXG5cdFx0dGhpcy5jcmVkZW50aWFscyA9IGlucHV0LmNyZWRlbnRpYWxzO1xyXG5cdFx0aWYgKCFvcHRpb25zLmhlYWRlcnMpIHtcclxuXHRcdFx0dGhpcy5oZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5wdXQuaGVhZGVycylcclxuXHRcdH1cclxuXHRcdHRoaXMubWV0aG9kID0gaW5wdXQubWV0aG9kO1xyXG5cdFx0dGhpcy5tb2RlID0gaW5wdXQubW9kZTtcclxuXHRcdGlmICghYm9keSAmJiBpbnB1dC5fYm9keUluaXQgIT0gbnVsbCkge1xyXG5cdFx0XHRib2R5ID0gaW5wdXQuX2JvZHlJbml0O1xyXG5cdFx0XHRpbnB1dC5ib2R5VXNlZCA9IHRydWVcclxuXHRcdH1cclxuXHR9IGVsc2Uge1xyXG5cdFx0dGhpcy51cmwgPSBTdHJpbmcoaW5wdXQpXHJcblx0fVxyXG5cclxuXHR0aGlzLmNyZWRlbnRpYWxzID0gb3B0aW9ucy5jcmVkZW50aWFscyB8fCB0aGlzLmNyZWRlbnRpYWxzIHx8ICdvbWl0JztcclxuXHRpZiAob3B0aW9ucy5oZWFkZXJzIHx8ICF0aGlzLmhlYWRlcnMpIHtcclxuXHRcdHRoaXMuaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycylcclxuXHR9XHJcblx0dGhpcy5tZXRob2QgPSBub3JtYWxpemVNZXRob2Qob3B0aW9ucy5tZXRob2QgfHwgdGhpcy5tZXRob2QgfHwgJ0dFVCcpO1xyXG5cdHRoaXMubW9kZSA9IG9wdGlvbnMubW9kZSB8fCB0aGlzLm1vZGUgfHwgbnVsbDtcclxuXHR0aGlzLnJlZmVycmVyID0gbnVsbDtcclxuXHR0aGlzLnRpbWVvdXQgPSBudWxsO1xyXG5cclxuXHRpZiAodHlwZW9mIGlucHV0LnRpbWVvdXQgPT0gXCJudW1iZXJcIiAmJiBpbnB1dC50aW1lb3V0ID4gMCkge1xyXG5cdFx0dGhpcy50aW1lb3V0ID0gaW5wdXQudGltZW91dDtcclxuXHR9XHJcblxyXG5cdGlmKCBib2R5ICkge1xyXG5cdFx0bGV0IG9iamVjdCA9IHR5cGVvZiBib2R5ID09PSBcIm9iamVjdFwiO1xyXG5cdFx0aWYoIG9iamVjdCAmJiB0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgKSB7XHJcblx0XHRcdHRoaXMudXJsICs9ICh+dGhpcy51cmwuaW5kZXhPZignPycpID8gJyYnIDogJz8nKSArIG1ha2VRdWVyeShib2R5KTtcclxuXHRcdFx0Ym9keSA9IG51bGxcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKCB0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgfHwgdGhpcy5tZXRob2QgPT09ICdIRUFEJyApIHtcclxuXHRcdFx0dGhyb3cgbmV3IEFqYXhKc29uRXJyb3IoJ0JvZHkgbm90IGFsbG93ZWQgZm9yIEdFVCBvciBIRUFEIHJlcXVlc3RzJywgJ2FyZ3VtZW50JywgMjAwKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZih0aGlzLm1ldGhvZCA9PT0gJ1BPU1QnICYmIG9iamVjdCApIHtcclxuXHRcdFx0Ym9keSA9IG1ha2VGb3JtKGJvZHkpXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHR0aGlzLl9pbml0Qm9keShib2R5KVxyXG59XHJcblxyXG5SZXF1ZXN0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKClcclxue1xyXG5cdHJldHVybiBuZXcgUmVxdWVzdCh0aGlzLCB7IGJvZHk6IHRoaXMuX2JvZHlJbml0IH0pXHJcbn07XHJcblxyXG5mdW5jdGlvbiBwYXJzZUhlYWRlcnMocmF3SGVhZGVycylcclxue1xyXG5cdHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuXHRyYXdIZWFkZXJzLnNwbGl0KC9cXHI/XFxuLykuZm9yRWFjaChmdW5jdGlvbihsaW5lKSB7XHJcblx0XHR2YXIgcGFydHMgPSBsaW5lLnNwbGl0KCc6Jyk7XHJcblx0XHR2YXIga2V5ID0gcGFydHMuc2hpZnQoKS50cmltKCk7XHJcblx0XHRpZiAoa2V5KSB7XHJcblx0XHRcdHZhciB2YWx1ZSA9IHBhcnRzLmpvaW4oJzonKS50cmltKCk7XHJcblx0XHRcdGhlYWRlcnMuYXBwZW5kKGtleSwgdmFsdWUpXHJcblx0XHR9XHJcblx0fSk7XHJcblx0cmV0dXJuIGhlYWRlcnNcclxufVxyXG5cclxuQm9keS5jYWxsKFJlcXVlc3QucHJvdG90eXBlKTtcclxuXHJcbmZ1bmN0aW9uIFJlc3BvbnNlKGJvZHlJbml0LCBvcHRpb25zKVxyXG57XHJcblx0aWYgKCFvcHRpb25zKSB7XHJcblx0XHRvcHRpb25zID0ge31cclxuXHR9XHJcblxyXG5cdHRoaXMudHlwZSA9ICdkZWZhdWx0JztcclxuXHR0aGlzLnN0YXR1cyA9ICdzdGF0dXMnIGluIG9wdGlvbnMgPyBvcHRpb25zLnN0YXR1cyA6IDIwMDtcclxuXHR0aGlzLm9rID0gdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwO1xyXG5cdHRoaXMuc3RhdHVzVGV4dCA9ICdzdGF0dXNUZXh0JyBpbiBvcHRpb25zID8gb3B0aW9ucy5zdGF0dXNUZXh0IDogJ09LJztcclxuXHR0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVycyhvcHRpb25zLmhlYWRlcnMpO1xyXG5cdHRoaXMudXJsID0gb3B0aW9ucy51cmwgfHwgJyc7XHJcblx0dGhpcy5faW5pdEJvZHkoYm9keUluaXQpXHJcbn1cclxuXHJcbkJvZHkuY2FsbChSZXNwb25zZS5wcm90b3R5cGUpO1xyXG5cclxuUmVzcG9uc2UucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKVxyXG57XHJcblx0cmV0dXJuIG5ldyBSZXNwb25zZSh0aGlzLl9ib2R5SW5pdCwge1xyXG5cdFx0c3RhdHVzOiB0aGlzLnN0YXR1cyxcclxuXHRcdHN0YXR1c1RleHQ6IHRoaXMuc3RhdHVzVGV4dCxcclxuXHRcdGhlYWRlcnM6IG5ldyBIZWFkZXJzKHRoaXMuaGVhZGVycyksXHJcblx0XHR1cmw6IHRoaXMudXJsXHJcblx0fSlcclxufTtcclxuXHJcblJlc3BvbnNlLmVycm9yID0gZnVuY3Rpb24oKVxyXG57XHJcblx0dmFyIHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKG51bGwsIHtzdGF0dXM6IDAsIHN0YXR1c1RleHQ6ICcnfSk7XHJcblx0cmVzcG9uc2UudHlwZSA9ICdlcnJvcic7XHJcblx0cmV0dXJuIHJlc3BvbnNlXHJcbn07XHJcblxyXG5jb25zdCByZWRpcmVjdFN0YXR1c2VzID0gWzMwMSwgMzAyLCAzMDMsIDMwNywgMzA4XTtcclxuXHJcblJlc3BvbnNlLnJlZGlyZWN0ID0gZnVuY3Rpb24odXJsLCBzdGF0dXMpXHJcbntcclxuXHRpZiAocmVkaXJlY3RTdGF0dXNlcy5pbmRleE9mKHN0YXR1cykgPT09IC0xKSB7XHJcblx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpXHJcblx0fVxyXG5cclxuXHRyZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtzdGF0dXM6IHN0YXR1cywgaGVhZGVyczoge2xvY2F0aW9uOiB1cmx9fSlcclxufTtcclxuXHJcbmxldCBxdWVyeVN0YXR1cyA9ICdjb21wbGV0ZSc7XHJcbmxldCB4aHI7XHJcbmxldCBlcnJvcjtcclxuXHJcbmxldCBUcmlnZ2VyT25VcmwgPSB1cmwgPT4gU3RyaW5nKHVybCk7XHJcbmxldCBUcmlnZ2VyT25Db21wbGV0ZSA9IGpzb24gPT4ganNvbjtcclxuXHJcbmNvbnN0IEFqYXhKc29uID1cclxue1xyXG5cdHNldCBvblVybCggdHJpZ2dlciApIHsgaWYoIHR5cGVvZiB0cmlnZ2VyID09PSBcImZ1bmN0aW9uXCIgKSBUcmlnZ2VyT25VcmwgPSB0cmlnZ2VyIH0sXHJcblx0c2V0IG9uQ29tcGxldGUoIHRyaWdnZXIgKSB7IGlmKCB0eXBlb2YgdHJpZ2dlciA9PT0gXCJmdW5jdGlvblwiICkgVHJpZ2dlck9uQ29tcGxldGUgPSB0cmlnZ2VyIH0sXHJcblxyXG5cdGdldCBvblVybCgpIHsgcmV0dXJuIFRyaWdnZXJPblVybCB9LFxyXG5cdGdldCBvbkNvbXBsZXRlKCkgeyByZXR1cm4gVHJpZ2dlck9uQ29tcGxldGUgfSxcclxuXHJcblx0YWJvcnQoKVxyXG5cdHtcclxuXHRcdGlmKCBxdWVyeVN0YXR1cyA9PT0gJ3Byb2dyZXNzJyApIHtcclxuXHRcdFx0cXVlcnlTdGF0dXMgPSAnYWJvcnQnO1xyXG5cdFx0XHR4aHIuYWJvcnQoKTtcclxuXHRcdFx0eGhyID0gZXJyb3IgPSBudWxsO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9LFxyXG5cclxuXHRnZXQgY29tcGxldGVkKClcclxuXHR7XHJcblx0XHRyZXR1cm4gcXVlcnlTdGF0dXMgIT09ICdwcm9ncmVzcydcclxuXHR9LFxyXG5cclxuXHRnZXQgc3RhdHVzKClcclxuXHR7XHJcblx0XHRyZXR1cm4gcXVlcnlTdGF0dXNcclxuXHR9LFxyXG5cclxuXHRxdWVyeShpbnB1dCwgaW5pdClcclxuXHR7XHJcblx0XHRpbnB1dCA9IFRyaWdnZXJPblVybChpbnB1dCk7XHJcblxyXG5cdFx0aWYoIHF1ZXJ5U3RhdHVzID09PSAncHJvZ3Jlc3MnICkge1xyXG5cdFx0XHRsZXQgZSA9IGVycm9yIHx8IGZ1bmN0aW9uIChlKSB7IHRocm93IGUgfTtcclxuXHRcdFx0dGhpcy5hYm9ydCgpO1xyXG5cdFx0XHRlKCBuZXcgQWpheEpzb25FcnJvcignVXNlciBhYm9ydGVkJywgJ2Fib3J0JywgMykgKVxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoaW5wdXQsIGluaXQpO1xyXG5cdFx0eGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHRxdWVyeVN0YXR1cyA9ICdvcGVuJztcclxuXHJcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKF9yZXNvbHZlLCBfcmVqZWN0KSA9PiB7XHJcblxyXG5cdFx0XHRsZXQgcmVqZWN0ID0gZXJyb3IgPT4ge1xyXG5cdFx0XHRcdGlmKCBxdWVyeVN0YXR1cyA9PT0gJ3Byb2dyZXNzJyApIHF1ZXJ5U3RhdHVzID0gJ2ZhaWx1cmUnO1xyXG5cdFx0XHRcdF9yZWplY3QoZXJyb3IpXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHRsZXQgcmVzb2x2ZSA9IHJlc3VsdCA9PiB7XHJcblx0XHRcdFx0cXVlcnlTdGF0dXMgPSAnc3VjY2Vzcyc7XHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdHJlc3VsdCA9IFRyaWdnZXJPbkNvbXBsZXRlKHJlc3VsdCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNhdGNoKGVycikge1xyXG5cdFx0XHRcdFx0cmV0dXJuIF9yZWplY3QoZXJyKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRfcmVzb2x2ZShyZXN1bHQpXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHR4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdGxldCBvcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0c3RhdHVzOiB4aHIuc3RhdHVzLFxyXG5cdFx0XHRcdFx0c3RhdHVzVGV4dDogeGhyLnN0YXR1c1RleHQsXHJcblx0XHRcdFx0XHRoZWFkZXJzOiBwYXJzZUhlYWRlcnMoeGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpIHx8ICcnKVxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdG9wdGlvbnMudXJsID0gJ3Jlc3BvbnNlVVJMJyBpbiB4aHIgPyB4aHIucmVzcG9uc2VVUkwgOiBvcHRpb25zLmhlYWRlcnMuZ2V0KCdYLVJlcXVlc3QtVVJMJyk7XHJcblx0XHRcdFx0dmFyIGJvZHkgPSAncmVzcG9uc2UnIGluIHhociA/IHhoci5yZXNwb25zZSA6IHhoci5yZXNwb25zZVRleHQ7XHJcblxyXG5cdFx0XHRcdChuZXcgUmVzcG9uc2UoYm9keSwgb3B0aW9ucykpXHJcblx0XHRcdFx0XHQuanNvbigpXHJcblx0XHRcdFx0XHQudGhlbihyZXNvbHZlKVxyXG5cdFx0XHRcdFx0LmNhdGNoKCgpID0+IHtcclxuXHRcdFx0XHRcdFx0cmVqZWN0KG5ldyBBamF4SnNvbkVycm9yKCdVbmtub3duIHNlcnZlciBhbnN3ZXIgW2ludmFsaWQgSlNPTl0nLCAnanNvbicsIDEwMCkpXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0eGhyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZWplY3QobmV3IEFqYXhKc29uRXJyb3IoJ05ldHdvcmsgcmVxdWVzdCBmYWlsZWQnLCAnbmV0d29yaycsIDEpKVxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0eGhyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJlamVjdChuZXcgQWpheEpzb25FcnJvcignTmV0d29yayByZXF1ZXN0IGZhaWxlZCcsICd0aW1lb3V0JywgMikpXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHR4aHIub3BlbihyZXF1ZXN0Lm1ldGhvZCwgcmVxdWVzdC51cmwsIHRydWUpO1xyXG5cclxuXHRcdFx0aWYgKHJlcXVlc3QuY3JlZGVudGlhbHMgPT09ICdpbmNsdWRlJykge1xyXG5cdFx0XHRcdHhoci53aXRoQ3JlZGVudGlhbHMgPSB0cnVlXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmIChyZXF1ZXN0LnRpbWVvdXQgPiAwKSB7XHJcblx0XHRcdFx0eGhyLnRpbWVvdXQgPSByZXF1ZXN0LnRpbWVvdXQ7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJlcXVlc3QuaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwgbmFtZSkgPT4ge1xyXG5cdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIHZhbHVlKVxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHF1ZXJ5U3RhdHVzID0gJ3Byb2dyZXNzJztcclxuXHRcdFx0ZXJyb3IgPSByZWplY3Q7XHJcblx0XHRcdHhoci5zZW5kKHR5cGVvZiByZXF1ZXN0Ll9ib2R5SW5pdCA9PT0gJ3VuZGVmaW5lZCcgPyBudWxsIDogcmVxdWVzdC5fYm9keUluaXQpXHJcblx0XHR9KVxyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFqYXhKc29uO1xyXG4iXX0=
},{"./tools/is-browser":36}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var Callbacks = {};

/**
 * @return {boolean}
 */
function Has(name) {
	return Callbacks.hasOwnProperty(name);
}

exports.default = {
	add: function add(name, callback) {
		if (!Has(name) && typeof callback == 'function') {
			Callbacks[name] = callback;
		}
	},
	remove: function remove(name) {
		if (Has(name)) {
			delete Callbacks[name];
		}
	},
	callable: function callable(name) {
		return Has(Array.isArray(name) ? name[0] : name);
	},
	dispatch: function dispatch(value) {
		var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

		var name = void 0,
		    props = [];

		if (Array.isArray(value)) {
			props = Object.assign([], value);
			name = props.shift();
		} else {
			name = String(value);
		}

		if (event) {
			if (!Array.isArray(event)) {
				event = [event];
			}
			if (props.length) {
				props = event.apply(event, props);
			} else {
				props = event;
			}
		}

		return Has(name) ? Callbacks[name].apply(window, props) : null;
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGxlci5qcyJdLCJuYW1lcyI6WyJDYWxsYmFja3MiLCJIYXMiLCJuYW1lIiwiaGFzT3duUHJvcGVydHkiLCJhZGQiLCJjYWxsYmFjayIsInJlbW92ZSIsImNhbGxhYmxlIiwiQXJyYXkiLCJpc0FycmF5IiwiZGlzcGF0Y2giLCJ2YWx1ZSIsImV2ZW50IiwicHJvcHMiLCJPYmplY3QiLCJhc3NpZ24iLCJzaGlmdCIsIlN0cmluZyIsImxlbmd0aCIsImFwcGx5Iiwid2luZG93Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLFlBQVksRUFBaEI7O0FBRUE7OztBQUdBLFNBQVNDLEdBQVQsQ0FBYUMsSUFBYixFQUNBO0FBQ0MsUUFBT0YsVUFBVUcsY0FBVixDQUF5QkQsSUFBekIsQ0FBUDtBQUNBOztrQkFFYztBQUVkRSxJQUZjLGVBRVZGLElBRlUsRUFFSkcsUUFGSSxFQUdkO0FBQ0MsTUFBSSxDQUFFSixJQUFJQyxJQUFKLENBQUYsSUFBZSxPQUFPRyxRQUFQLElBQW1CLFVBQXRDLEVBQW1EO0FBQ2xETCxhQUFVRSxJQUFWLElBQWtCRyxRQUFsQjtBQUNBO0FBQ0QsRUFQYTtBQVNkQyxPQVRjLGtCQVNQSixJQVRPLEVBVWQ7QUFDQyxNQUFJRCxJQUFJQyxJQUFKLENBQUosRUFBZ0I7QUFDZixVQUFPRixVQUFVRSxJQUFWLENBQVA7QUFDQTtBQUNELEVBZGE7QUFnQmRLLFNBaEJjLG9CQWdCTEwsSUFoQkssRUFpQmQ7QUFDQyxTQUFPRCxJQUFJTyxNQUFNQyxPQUFOLENBQWNQLElBQWQsSUFBc0JBLEtBQUssQ0FBTCxDQUF0QixHQUFnQ0EsSUFBcEMsQ0FBUDtBQUNBLEVBbkJhO0FBcUJkUSxTQXJCYyxvQkFxQkxDLEtBckJLLEVBc0JkO0FBQUEsTUFEZ0JDLEtBQ2hCLHVFQUR3QixJQUN4Qjs7QUFDQyxNQUFJVixhQUFKO0FBQUEsTUFBVVcsUUFBUSxFQUFsQjs7QUFFQSxNQUFJTCxNQUFNQyxPQUFOLENBQWNFLEtBQWQsQ0FBSixFQUEyQjtBQUMxQkUsV0FBUUMsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JKLEtBQWxCLENBQVI7QUFDQVQsVUFBT1csTUFBTUcsS0FBTixFQUFQO0FBQ0EsR0FIRCxNQUlLO0FBQ0pkLFVBQU9lLE9BQU9OLEtBQVAsQ0FBUDtBQUNBOztBQUVELE1BQUlDLEtBQUosRUFBWTtBQUNYLE9BQUksQ0FBQ0osTUFBTUMsT0FBTixDQUFjRyxLQUFkLENBQUwsRUFBNEI7QUFDM0JBLFlBQVEsQ0FBQ0EsS0FBRCxDQUFSO0FBQ0E7QUFDRCxPQUFJQyxNQUFNSyxNQUFWLEVBQW1CO0FBQ2xCTCxZQUFRRCxNQUFNTyxLQUFOLENBQVlQLEtBQVosRUFBbUJDLEtBQW5CLENBQVI7QUFDQSxJQUZELE1BR0s7QUFDSkEsWUFBUUQsS0FBUjtBQUNBO0FBQ0Q7O0FBRUQsU0FBT1gsSUFBSUMsSUFBSixJQUFZRixVQUFVRSxJQUFWLEVBQWdCaUIsS0FBaEIsQ0FBc0JDLE1BQXRCLEVBQThCUCxLQUE5QixDQUFaLEdBQW1ELElBQTFEO0FBQ0E7QUE5Q2EsQyIsImZpbGUiOiJjYWxsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgQ2FsbGJhY2tzID0ge307XHJcblxyXG4vKipcclxuICogQHJldHVybiB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIEhhcyhuYW1lKVxyXG57XHJcblx0cmV0dXJuIENhbGxiYWNrcy5oYXNPd25Qcm9wZXJ0eShuYW1lKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblxyXG5cdGFkZChuYW1lLCBjYWxsYmFjaylcclxuXHR7XHJcblx0XHRpZiggISBIYXMobmFtZSkgJiYgdHlwZW9mIGNhbGxiYWNrID09ICdmdW5jdGlvbicgKSB7XHJcblx0XHRcdENhbGxiYWNrc1tuYW1lXSA9IGNhbGxiYWNrXHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cmVtb3ZlKG5hbWUpXHJcblx0e1xyXG5cdFx0aWYoIEhhcyhuYW1lKSApIHtcclxuXHRcdFx0ZGVsZXRlIENhbGxiYWNrc1tuYW1lXVxyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdGNhbGxhYmxlKG5hbWUpXHJcblx0e1xyXG5cdFx0cmV0dXJuIEhhcyhBcnJheS5pc0FycmF5KG5hbWUpID8gbmFtZVswXSA6IG5hbWUpXHJcblx0fSxcclxuXHJcblx0ZGlzcGF0Y2godmFsdWUsIGV2ZW50ID0gbnVsbClcclxuXHR7XHJcblx0XHRsZXQgbmFtZSwgcHJvcHMgPSBbXTtcclxuXHJcblx0XHRpZiggQXJyYXkuaXNBcnJheSh2YWx1ZSkgKSB7XHJcblx0XHRcdHByb3BzID0gT2JqZWN0LmFzc2lnbihbXSwgdmFsdWUpO1xyXG5cdFx0XHRuYW1lID0gcHJvcHMuc2hpZnQoKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdG5hbWUgPSBTdHJpbmcodmFsdWUpXHJcblx0XHR9XHJcblxyXG5cdFx0aWYoIGV2ZW50ICkge1xyXG5cdFx0XHRpZiggIUFycmF5LmlzQXJyYXkoZXZlbnQpICkge1xyXG5cdFx0XHRcdGV2ZW50ID0gW2V2ZW50XVxyXG5cdFx0XHR9XHJcblx0XHRcdGlmKCBwcm9wcy5sZW5ndGggKSB7XHJcblx0XHRcdFx0cHJvcHMgPSBldmVudC5hcHBseShldmVudCwgcHJvcHMpXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0cHJvcHMgPSBldmVudDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBIYXMobmFtZSkgPyBDYWxsYmFja3NbbmFtZV0uYXBwbHkod2luZG93LCBwcm9wcykgOiBudWxsXHJcblx0fVxyXG59Il19
},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.GetIs = exports.Create = exports.Component = exports.Add = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Components = {};

function Add(name, component) {
	if ((typeof name === "undefined" ? "undefined" : _typeof(name)) === 'object' && arguments.length == 1) {
		Object.keys(name).forEach(function (cmp) {
			Add(cmp, name[cmp]);
		});
	} else {
		name = String(name);
		if (!Components.hasOwnProperty(name)) {
			Object.defineProperty(Components, name, {
				value: component,
				configurable: false,
				writable: false
			});
		}
	}
}

function Component(name) {
	return Components[name] || Components.Empty;
}

function Create(name) {
	var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	var child = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	return _react2.default.createElement(Component(name), props, child);
}

/**
 * @return {boolean}
 */
function GetIs(name) {
	return Components.hasOwnProperty(name);
}

Add("Empty", function Empty(props) {
	return _react2.default.createElement('div', props);
});

exports.Add = Add;
exports.Component = Component;
exports.Create = Create;
exports.GetIs = GetIs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudC5qcyJdLCJuYW1lcyI6WyJDb21wb25lbnRzIiwiQWRkIiwibmFtZSIsImNvbXBvbmVudCIsImFyZ3VtZW50cyIsImxlbmd0aCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiY21wIiwiU3RyaW5nIiwiaGFzT3duUHJvcGVydHkiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJDb21wb25lbnQiLCJFbXB0eSIsIkNyZWF0ZSIsInByb3BzIiwiY2hpbGQiLCJjcmVhdGVFbGVtZW50IiwiR2V0SXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOzs7Ozs7QUFFQSxJQUFJQSxhQUFhLEVBQWpCOztBQUVBLFNBQVNDLEdBQVQsQ0FBYUMsSUFBYixFQUFtQkMsU0FBbkIsRUFDQTtBQUNDLEtBQUksUUFBT0QsSUFBUCx5Q0FBT0EsSUFBUCxPQUFnQixRQUFoQixJQUE0QkUsVUFBVUMsTUFBVixJQUFvQixDQUFwRCxFQUF3RDtBQUN2REMsU0FBT0MsSUFBUCxDQUFZTCxJQUFaLEVBQWtCTSxPQUFsQixDQUEyQixlQUFPO0FBQ2pDUCxPQUFLUSxHQUFMLEVBQVVQLEtBQUtPLEdBQUwsQ0FBVjtBQUNBLEdBRkQ7QUFHQSxFQUpELE1BS0s7QUFDSlAsU0FBT1EsT0FBT1IsSUFBUCxDQUFQO0FBQ0EsTUFBSSxDQUFFRixXQUFXVyxjQUFYLENBQTJCVCxJQUEzQixDQUFOLEVBQTBDO0FBQ3pDSSxVQUFPTSxjQUFQLENBQXNCWixVQUF0QixFQUFrQ0UsSUFBbEMsRUFBd0M7QUFDdkNXLFdBQU9WLFNBRGdDO0FBRXZDVyxrQkFBYyxLQUZ5QjtBQUd2Q0MsY0FBVTtBQUg2QixJQUF4QztBQUtBO0FBQ0Q7QUFDRDs7QUFFRCxTQUFTQyxTQUFULENBQW1CZCxJQUFuQixFQUNBO0FBQ0MsUUFBT0YsV0FBV0UsSUFBWCxLQUFvQkYsV0FBV2lCLEtBQXRDO0FBQ0E7O0FBRUQsU0FBU0MsTUFBVCxDQUFnQmhCLElBQWhCLEVBQ0E7QUFBQSxLQURzQmlCLEtBQ3RCLHVFQUQ4QixFQUM5QjtBQUFBLEtBRGtDQyxLQUNsQyx1RUFEMEMsSUFDMUM7O0FBQ0MsUUFBTyxnQkFBTUMsYUFBTixDQUFxQkwsVUFBVWQsSUFBVixDQUFyQixFQUFzQ2lCLEtBQXRDLEVBQTZDQyxLQUE3QyxDQUFQO0FBQ0E7O0FBRUQ7OztBQUdBLFNBQVNFLEtBQVQsQ0FBZXBCLElBQWYsRUFDQTtBQUNDLFFBQU9GLFdBQVdXLGNBQVgsQ0FBMkJULElBQTNCLENBQVA7QUFDQTs7QUFFREQsSUFBSSxPQUFKLEVBQWEsU0FBU2dCLEtBQVQsQ0FBZUUsS0FBZixFQUFzQjtBQUFFLFFBQU8sZ0JBQU1FLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkJGLEtBQTNCLENBQVA7QUFBMEMsQ0FBL0U7O1FBRVFsQixHLEdBQUFBLEc7UUFBS2UsUyxHQUFBQSxTO1FBQVdFLE0sR0FBQUEsTTtRQUFRSSxLLEdBQUFBLEsiLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmxldCBDb21wb25lbnRzID0ge307XHJcblxyXG5mdW5jdGlvbiBBZGQobmFtZSwgY29tcG9uZW50KVxyXG57XHJcblx0aWYoIHR5cGVvZiBuYW1lID09PSAnb2JqZWN0JyAmJiBhcmd1bWVudHMubGVuZ3RoID09IDEgKSB7XHJcblx0XHRPYmplY3Qua2V5cyhuYW1lKS5mb3JFYWNoKCBjbXAgPT4ge1xyXG5cdFx0XHRBZGQoIGNtcCwgbmFtZVtjbXBdIClcclxuXHRcdH0pXHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0bmFtZSA9IFN0cmluZyhuYW1lKTtcclxuXHRcdGlmKCAhIENvbXBvbmVudHMuaGFzT3duUHJvcGVydHkoIG5hbWUgKSApIHtcclxuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KENvbXBvbmVudHMsIG5hbWUsIHtcclxuXHRcdFx0XHR2YWx1ZTogY29tcG9uZW50LFxyXG5cdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXHJcblx0XHRcdFx0d3JpdGFibGU6IGZhbHNlXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBDb21wb25lbnQobmFtZSlcclxue1xyXG5cdHJldHVybiBDb21wb25lbnRzW25hbWVdIHx8IENvbXBvbmVudHMuRW1wdHk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIENyZWF0ZShuYW1lLCBwcm9wcyA9IHt9LCBjaGlsZCA9IG51bGwpXHJcbntcclxuXHRyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCggQ29tcG9uZW50KG5hbWUpLCBwcm9wcywgY2hpbGQgKVxyXG59XHJcblxyXG4vKipcclxuICogQHJldHVybiB7Ym9vbGVhbn1cclxuICovXHJcbmZ1bmN0aW9uIEdldElzKG5hbWUpXHJcbntcclxuXHRyZXR1cm4gQ29tcG9uZW50cy5oYXNPd25Qcm9wZXJ0eSggbmFtZSApXHJcbn1cclxuXHJcbkFkZChcIkVtcHR5XCIsIGZ1bmN0aW9uIEVtcHR5KHByb3BzKSB7IHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCdkaXYnLCBwcm9wcykgfSk7XHJcblxyXG5leHBvcnQge0FkZCwgQ29tcG9uZW50LCBDcmVhdGUsIEdldElzfSJdfQ==
},{"react":230}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _proto = require("./proto");

var _svgIcon = require("./svg-icon");

var _svgIcon2 = _interopRequireDefault(_svgIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * @property intent
 * @property dimension
 * @property fab
 * @property iconName
 * @property textLabel
 */

var Button = function (_Proto) {
	_inherits(Button, _Proto);

	function Button(props) {
		_classCallCheck(this, Button);

		var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

		_this.onClick = _this.onClick.bind(_this);
		return _this;
	}

	_createClass(Button, [{
		key: "onClick",
		value: function onClick(original, e) {
			original.call(this, e) !== false && (0, _proto.Blur)({ closest: ".btn" });
		}
	}, {
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state),
			    className = 'btn btn-' + (~_proto.Intents.indexOf(state.intent || '') || state.intent === 'link' ? state.intent : _proto.Intents[0]),
			    child = [];

			if (props.disabled) {
				className += ' btn-disabled';
			}

			if (state.dimension && ~_proto.Dimensions.indexOf(state.dimension)) {
				className += ' btn-' + state.dimension;
			}

			if (state.fab) {
				className += ' btn-fab';
			}

			if (state.iconName) {
				if (!state.textLabel) {
					className += ' btn-icon';
				}
				child.push(_react2.default.createElement(_svgIcon2.default, { iconName: state.iconName, key: "icon" }));
			}

			if (state.textLabel) {
				child.push(_react2.default.createElement(
					"span",
					{ className: "label", key: "label" },
					state.textLabel
				));
			}

			if (!props.role) {
				props.role = 'button';
			}

			props.ref = 'button';
			(0, _proto.MergeClassName)(props, className);

			if (props.onClick) {
				props.onClick = self.onClick.bind(self, props.onClick);
			}

			if (props.href) {
				return _react2.default.createElement(
					"a",
					props,
					child
				);
			} else {
				return _react2.default.createElement(
					"button",
					props,
					child
				);
			}
		}
	}]);

	return Button;
}(_proto.Proto);

exports.default = Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1dHRvbi5qcyJdLCJuYW1lcyI6WyJCdXR0b24iLCJwcm9wcyIsIm9uQ2xpY2siLCJiaW5kIiwib3JpZ2luYWwiLCJlIiwiY2FsbCIsImNsb3Nlc3QiLCJzZWxmIiwic3RhdGUiLCJjbGFzc05hbWUiLCJpbmRleE9mIiwiaW50ZW50IiwiY2hpbGQiLCJkaXNhYmxlZCIsImRpbWVuc2lvbiIsImZhYiIsImljb25OYW1lIiwidGV4dExhYmVsIiwicHVzaCIsInJvbGUiLCJyZWYiLCJocmVmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBOzs7Ozs7OztJQVFNQSxNOzs7QUFFTCxpQkFBWUMsS0FBWixFQUNBO0FBQUE7O0FBQUEsOEdBQ09BLEtBRFA7O0FBRUMsUUFBS0MsT0FBTCxHQUFlLE1BQUtBLE9BQUwsQ0FBYUMsSUFBYixPQUFmO0FBRkQ7QUFHQzs7OzswQkFFUUMsUSxFQUFVQyxDLEVBQ25CO0FBQ0NELFlBQVNFLElBQVQsQ0FBYyxJQUFkLEVBQW9CRCxDQUFwQixNQUEyQixLQUEzQixJQUFvQyxpQkFBSyxFQUFDRSxTQUFTLE1BQVYsRUFBTCxDQUFwQztBQUNBOzs7MkJBR0Q7QUFDQyxPQUFJQyxPQUFRLElBQVo7QUFBQSxPQUNDQyxRQUFRRCxLQUFLQyxLQURkO0FBQUEsT0FFQ1IsUUFBUSx3QkFBWVEsS0FBWixDQUZUO0FBQUEsT0FHQ0MsWUFBWSxjQUFlLENBQUUsZUFBUUMsT0FBUixDQUFnQkYsTUFBTUcsTUFBTixJQUFnQixFQUFoQyxDQUFGLElBQXlDSCxNQUFNRyxNQUFOLEtBQWlCLE1BQTFELEdBQW1FSCxNQUFNRyxNQUF6RSxHQUFrRixlQUFRLENBQVIsQ0FBakcsQ0FIYjtBQUFBLE9BSUNDLFFBQVEsRUFKVDs7QUFNQSxPQUFJWixNQUFNYSxRQUFWLEVBQXFCO0FBQ3BCSixpQkFBYSxlQUFiO0FBQ0E7O0FBRUQsT0FBSUQsTUFBTU0sU0FBTixJQUFtQixDQUFDLGtCQUFXSixPQUFYLENBQW1CRixNQUFNTSxTQUF6QixDQUF4QixFQUE4RDtBQUM3REwsaUJBQWEsVUFBVUQsTUFBTU0sU0FBN0I7QUFDQTs7QUFFRCxPQUFJTixNQUFNTyxHQUFWLEVBQWdCO0FBQ2ZOLGlCQUFhLFVBQWI7QUFDQTs7QUFFRCxPQUFJRCxNQUFNUSxRQUFWLEVBQXFCO0FBQ3BCLFFBQUksQ0FBQ1IsTUFBTVMsU0FBWCxFQUF1QjtBQUN0QlIsa0JBQWEsV0FBYjtBQUNBO0FBQ0RHLFVBQU1NLElBQU4sQ0FDQyxtREFBUyxVQUFVVixNQUFNUSxRQUF6QixFQUFtQyxLQUFJLE1BQXZDLEdBREQ7QUFHQTs7QUFFRCxPQUFJUixNQUFNUyxTQUFWLEVBQXNCO0FBQ3JCTCxVQUFNTSxJQUFOLENBQ0M7QUFBQTtBQUFBLE9BQU0sV0FBVSxPQUFoQixFQUF3QixLQUFJLE9BQTVCO0FBQXFDVixXQUFNUztBQUEzQyxLQUREO0FBR0E7O0FBRUQsT0FBSSxDQUFDakIsTUFBTW1CLElBQVgsRUFBa0I7QUFDakJuQixVQUFNbUIsSUFBTixHQUFhLFFBQWI7QUFDQTs7QUFFRG5CLFNBQU1vQixHQUFOLEdBQWEsUUFBYjtBQUNBLDhCQUFlcEIsS0FBZixFQUFzQlMsU0FBdEI7O0FBRUEsT0FBSVQsTUFBTUMsT0FBVixFQUFvQjtBQUNuQkQsVUFBTUMsT0FBTixHQUFnQk0sS0FBS04sT0FBTCxDQUFhQyxJQUFiLENBQWtCSyxJQUFsQixFQUF3QlAsTUFBTUMsT0FBOUIsQ0FBaEI7QUFDQTs7QUFFRCxPQUFJRCxNQUFNcUIsSUFBVixFQUFpQjtBQUNoQixXQUFPO0FBQUE7QUFBT3JCLFVBQVA7QUFBZVk7QUFBZixLQUFQO0FBQ0EsSUFGRCxNQUdLO0FBQ0osV0FBTztBQUFBO0FBQVlaLFVBQVo7QUFBb0JZO0FBQXBCLEtBQVA7QUFDQTtBQUNEOzs7Ozs7a0JBR2FiLE0iLCJmaWxlIjoiYnV0dG9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBJbnRlbnRzLCBEaW1lbnNpb25zLCBNZXJnZUNsYXNzTmFtZSwgRmlsdGVyUHJvcHMsIEJsdXIsIFByb3RvIH0gZnJvbSBcIi4vcHJvdG9cIjtcclxuaW1wb3J0IFN2Z0ljb24gZnJvbSBcIi4vc3ZnLWljb25cIjtcclxuXHJcbi8qXHJcbiAqIEBwcm9wZXJ0eSBpbnRlbnRcclxuICogQHByb3BlcnR5IGRpbWVuc2lvblxyXG4gKiBAcHJvcGVydHkgZmFiXHJcbiAqIEBwcm9wZXJ0eSBpY29uTmFtZVxyXG4gKiBAcHJvcGVydHkgdGV4dExhYmVsXHJcbiAqL1xyXG5cclxuY2xhc3MgQnV0dG9uIGV4dGVuZHMgUHJvdG9cclxue1xyXG5cdGNvbnN0cnVjdG9yKHByb3BzKVxyXG5cdHtcclxuXHRcdHN1cGVyKHByb3BzKTtcclxuXHRcdHRoaXMub25DbGljayA9IHRoaXMub25DbGljay5iaW5kKHRoaXMpO1xyXG5cdH1cclxuXHJcblx0b25DbGljayggb3JpZ2luYWwsIGUgKVxyXG5cdHtcclxuXHRcdG9yaWdpbmFsLmNhbGwodGhpcywgZSkgIT09IGZhbHNlICYmIEJsdXIoe2Nsb3Nlc3Q6IFwiLmJ0blwifSlcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0bGV0IHNlbGYgID0gdGhpcyxcclxuXHRcdFx0c3RhdGUgPSBzZWxmLnN0YXRlLFxyXG5cdFx0XHRwcm9wcyA9IEZpbHRlclByb3BzKHN0YXRlKSxcclxuXHRcdFx0Y2xhc3NOYW1lID0gJ2J0biBidG4tJyArICggfiBJbnRlbnRzLmluZGV4T2Yoc3RhdGUuaW50ZW50IHx8ICcnKSB8fCBzdGF0ZS5pbnRlbnQgPT09ICdsaW5rJyA/IHN0YXRlLmludGVudCA6IEludGVudHNbMF0gKSxcclxuXHRcdFx0Y2hpbGQgPSBbXTtcclxuXHJcblx0XHRpZiggcHJvcHMuZGlzYWJsZWQgKSB7XHJcblx0XHRcdGNsYXNzTmFtZSArPSAnIGJ0bi1kaXNhYmxlZCdcclxuXHRcdH1cclxuXHJcblx0XHRpZiggc3RhdGUuZGltZW5zaW9uICYmIH5EaW1lbnNpb25zLmluZGV4T2Yoc3RhdGUuZGltZW5zaW9uKSApIHtcclxuXHRcdFx0Y2xhc3NOYW1lICs9ICcgYnRuLScgKyBzdGF0ZS5kaW1lbnNpb25cclxuXHRcdH1cclxuXHJcblx0XHRpZiggc3RhdGUuZmFiICkge1xyXG5cdFx0XHRjbGFzc05hbWUgKz0gJyBidG4tZmFiJztcclxuXHRcdH1cclxuXHJcblx0XHRpZiggc3RhdGUuaWNvbk5hbWUgKSB7XHJcblx0XHRcdGlmKCAhc3RhdGUudGV4dExhYmVsICkge1xyXG5cdFx0XHRcdGNsYXNzTmFtZSArPSAnIGJ0bi1pY29uJztcclxuXHRcdFx0fVxyXG5cdFx0XHRjaGlsZC5wdXNoKFxyXG5cdFx0XHRcdDxTdmdJY29uIGljb25OYW1lPXtzdGF0ZS5pY29uTmFtZX0ga2V5PVwiaWNvblwiIC8+XHJcblx0XHRcdClcclxuXHRcdH1cclxuXHJcblx0XHRpZiggc3RhdGUudGV4dExhYmVsICkge1xyXG5cdFx0XHRjaGlsZC5wdXNoKFxyXG5cdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsXCIga2V5PVwibGFiZWxcIj57c3RhdGUudGV4dExhYmVsfTwvc3Bhbj5cclxuXHRcdFx0KVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCAhcHJvcHMucm9sZSApIHtcclxuXHRcdFx0cHJvcHMucm9sZSA9ICdidXR0b24nXHJcblx0XHR9XHJcblxyXG5cdFx0cHJvcHMucmVmICA9ICdidXR0b24nO1xyXG5cdFx0TWVyZ2VDbGFzc05hbWUocHJvcHMsIGNsYXNzTmFtZSk7XHJcblxyXG5cdFx0aWYoIHByb3BzLm9uQ2xpY2sgKSB7XHJcblx0XHRcdHByb3BzLm9uQ2xpY2sgPSBzZWxmLm9uQ2xpY2suYmluZChzZWxmLCBwcm9wcy5vbkNsaWNrKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiggcHJvcHMuaHJlZiApIHtcclxuXHRcdFx0cmV0dXJuIDxhIHsuLi5wcm9wc30+e2NoaWxkfTwvYT5cclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRyZXR1cm4gPGJ1dHRvbiB7Li4ucHJvcHN9PntjaGlsZH08L2J1dHRvbj5cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiXX0=
},{"./proto":10,"./svg-icon":12,"react":230}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _proto = require("./proto");

var _component = require("../component");

var _isScalar = require("../tools/is-scalar");

var _isScalar2 = _interopRequireDefault(_isScalar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function GetComponent(state, index, form) {
	var component = "Components",
	    props = {};

	// component
	if ((0, _isScalar2.default)(state)) {
		component = String(state);
	} else {
		if (state.component) {
			component = state.component;
		}
		props = Object.assign({}, state);
		delete props.component; // fix recursive
	}

	props.key = index;
	if (form) {
		props.emitter = form;
	}

	return (0, _component.Create)(component, props);
}

/*
 * @property tagName
 * @property child
 * @property emitter
 * @property component *
 */

var Components = function (_Proto) {
	_inherits(Components, _Proto);

	function Components() {
		_classCallCheck(this, Components);

		return _possibleConstructorReturn(this, (Components.__proto__ || Object.getPrototypeOf(Components)).apply(this, arguments));
	}

	_createClass(Components, [{
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state),
			    name = state.tagName || 'div',
			    child = null;

			if (!_proto.HtmlBlockNames[name]) {
				name = 'div';
			}

			// uiChild
			if (state.child && Array.isArray(state.child)) {
				child = state.child.map(function (component, index) {
					return GetComponent(component, index, state.emitter);
				});
			} else if (state.component) {
				child = GetComponent(state, 0, state.emitter);
			} else if (self.props.children) {
				child = self.props.children;
			}

			(0, _proto.MergeClassName)(props, "document-component");

			return _react2.default.createElement(name, props, child);
		}
	}]);

	return Components;
}(_proto.Proto);

exports.default = Components;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMuanMiXSwibmFtZXMiOlsiR2V0Q29tcG9uZW50Iiwic3RhdGUiLCJpbmRleCIsImZvcm0iLCJjb21wb25lbnQiLCJwcm9wcyIsIlN0cmluZyIsIk9iamVjdCIsImFzc2lnbiIsImtleSIsImVtaXR0ZXIiLCJDb21wb25lbnRzIiwic2VsZiIsIm5hbWUiLCJ0YWdOYW1lIiwiY2hpbGQiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJjaGlsZHJlbiIsImNyZWF0ZUVsZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsWUFBVCxDQUF1QkMsS0FBdkIsRUFBOEJDLEtBQTlCLEVBQXFDQyxJQUFyQyxFQUNBO0FBQ0MsS0FBSUMsWUFBWSxZQUFoQjtBQUFBLEtBQThCQyxRQUFRLEVBQXRDOztBQUVBO0FBQ0EsS0FBSSx3QkFBU0osS0FBVCxDQUFKLEVBQXNCO0FBQ3JCRyxjQUFZRSxPQUFPTCxLQUFQLENBQVo7QUFDQSxFQUZELE1BR0s7QUFDSixNQUFJQSxNQUFNRyxTQUFWLEVBQXNCO0FBQ3JCQSxlQUFZSCxNQUFNRyxTQUFsQjtBQUNBO0FBQ0RDLFVBQVFFLE9BQU9DLE1BQVAsQ0FBYyxFQUFkLEVBQWtCUCxLQUFsQixDQUFSO0FBQ0EsU0FBT0ksTUFBTUQsU0FBYixDQUxJLENBS29CO0FBQ3hCOztBQUVEQyxPQUFNSSxHQUFOLEdBQVlQLEtBQVo7QUFDQSxLQUFJQyxJQUFKLEVBQVc7QUFDVkUsUUFBTUssT0FBTixHQUFnQlAsSUFBaEI7QUFDQTs7QUFFRCxRQUFPLHVCQUFRQyxTQUFSLEVBQW1CQyxLQUFuQixDQUFQO0FBQ0E7O0FBRUQ7Ozs7Ozs7SUFPTU0sVTs7Ozs7Ozs7Ozs7MkJBR0w7QUFDQyxPQUFJQyxPQUFRLElBQVo7QUFBQSxPQUNDWCxRQUFRVyxLQUFLWCxLQURkO0FBQUEsT0FFQ0ksUUFBUSx3QkFBYUosS0FBYixDQUZUO0FBQUEsT0FHQ1ksT0FBUVosTUFBTWEsT0FBTixJQUFpQixLQUgxQjtBQUFBLE9BSUNDLFFBQVEsSUFKVDs7QUFNQSxPQUFJLENBQUMsc0JBQWVGLElBQWYsQ0FBTCxFQUE0QjtBQUMzQkEsV0FBTyxLQUFQO0FBQ0E7O0FBRUQ7QUFDQSxPQUFJWixNQUFNYyxLQUFOLElBQWVDLE1BQU1DLE9BQU4sQ0FBY2hCLE1BQU1jLEtBQXBCLENBQW5CLEVBQWdEO0FBQy9DQSxZQUFRZCxNQUFNYyxLQUFOLENBQVlHLEdBQVosQ0FBaUIsVUFBQ2QsU0FBRCxFQUFZRixLQUFaO0FBQUEsWUFBc0JGLGFBQWFJLFNBQWIsRUFBd0JGLEtBQXhCLEVBQStCRCxNQUFNUyxPQUFyQyxDQUF0QjtBQUFBLEtBQWpCLENBQVI7QUFDQSxJQUZELE1BR0ssSUFBSVQsTUFBTUcsU0FBVixFQUFzQjtBQUMxQlcsWUFBUWYsYUFBYUMsS0FBYixFQUFvQixDQUFwQixFQUF1QkEsTUFBTVMsT0FBN0IsQ0FBUjtBQUNBLElBRkksTUFHQSxJQUFJRSxLQUFLUCxLQUFMLENBQVdjLFFBQWYsRUFBMEI7QUFDOUJKLFlBQVFILEtBQUtQLEtBQUwsQ0FBV2MsUUFBbkI7QUFDQTs7QUFFRCw4QkFBZWQsS0FBZixFQUFzQixvQkFBdEI7O0FBRUEsVUFBTyxnQkFBTWUsYUFBTixDQUFvQlAsSUFBcEIsRUFBMEJSLEtBQTFCLEVBQWlDVSxLQUFqQyxDQUFQO0FBQ0E7Ozs7OztrQkFHYUosVSIsImZpbGUiOiJjb21wb25lbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgSHRtbEJsb2NrTmFtZXMsIE1lcmdlQ2xhc3NOYW1lLCBGaWx0ZXJQcm9wcywgUHJvdG8gfSBmcm9tIFwiLi9wcm90b1wiO1xyXG5pbXBvcnQgeyBDcmVhdGUgfSBmcm9tIFwiLi4vY29tcG9uZW50XCI7XHJcbmltcG9ydCBJc1NjYWxhciBmcm9tIFwiLi4vdG9vbHMvaXMtc2NhbGFyXCI7XHJcblxyXG5mdW5jdGlvbiBHZXRDb21wb25lbnQoIHN0YXRlLCBpbmRleCwgZm9ybSApXHJcbntcclxuXHRsZXQgY29tcG9uZW50ID0gXCJDb21wb25lbnRzXCIsIHByb3BzID0ge307XHJcblxyXG5cdC8vIGNvbXBvbmVudFxyXG5cdGlmKCBJc1NjYWxhcihzdGF0ZSkgKSB7XHJcblx0XHRjb21wb25lbnQgPSBTdHJpbmcoc3RhdGUpO1xyXG5cdH1cclxuXHRlbHNlIHtcclxuXHRcdGlmKCBzdGF0ZS5jb21wb25lbnQgKSB7XHJcblx0XHRcdGNvbXBvbmVudCA9IHN0YXRlLmNvbXBvbmVudFxyXG5cdFx0fVxyXG5cdFx0cHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSk7XHJcblx0XHRkZWxldGUgcHJvcHMuY29tcG9uZW50OyAvLyBmaXggcmVjdXJzaXZlXHJcblx0fVxyXG5cclxuXHRwcm9wcy5rZXkgPSBpbmRleDtcclxuXHRpZiggZm9ybSApIHtcclxuXHRcdHByb3BzLmVtaXR0ZXIgPSBmb3JtXHJcblx0fVxyXG5cclxuXHRyZXR1cm4gQ3JlYXRlKCBjb21wb25lbnQsIHByb3BzIClcclxufVxyXG5cclxuLypcclxuICogQHByb3BlcnR5IHRhZ05hbWVcclxuICogQHByb3BlcnR5IGNoaWxkXHJcbiAqIEBwcm9wZXJ0eSBlbWl0dGVyXHJcbiAqIEBwcm9wZXJ0eSBjb21wb25lbnQgKlxyXG4gKi9cclxuXHJcbmNsYXNzIENvbXBvbmVudHMgZXh0ZW5kcyBQcm90b1xyXG57XHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRsZXQgc2VsZiAgPSB0aGlzLFxyXG5cdFx0XHRzdGF0ZSA9IHNlbGYuc3RhdGUsXHJcblx0XHRcdHByb3BzID0gRmlsdGVyUHJvcHMoIHN0YXRlICksXHJcblx0XHRcdG5hbWUgID0gc3RhdGUudGFnTmFtZSB8fCAnZGl2JyxcclxuXHRcdFx0Y2hpbGQgPSBudWxsO1xyXG5cclxuXHRcdGlmKCAhSHRtbEJsb2NrTmFtZXNbbmFtZV0gKSB7XHJcblx0XHRcdG5hbWUgPSAnZGl2J1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIHVpQ2hpbGRcclxuXHRcdGlmKCBzdGF0ZS5jaGlsZCAmJiBBcnJheS5pc0FycmF5KHN0YXRlLmNoaWxkKSApIHtcclxuXHRcdFx0Y2hpbGQgPSBzdGF0ZS5jaGlsZC5tYXAoIChjb21wb25lbnQsIGluZGV4KSA9PiBHZXRDb21wb25lbnQoY29tcG9uZW50LCBpbmRleCwgc3RhdGUuZW1pdHRlcikgKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiggc3RhdGUuY29tcG9uZW50ICkge1xyXG5cdFx0XHRjaGlsZCA9IEdldENvbXBvbmVudChzdGF0ZSwgMCwgc3RhdGUuZW1pdHRlcilcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYoIHNlbGYucHJvcHMuY2hpbGRyZW4gKSB7XHJcblx0XHRcdGNoaWxkID0gc2VsZi5wcm9wcy5jaGlsZHJlblxyXG5cdFx0fVxyXG5cclxuXHRcdE1lcmdlQ2xhc3NOYW1lKHByb3BzLCBcImRvY3VtZW50LWNvbXBvbmVudFwiKTtcclxuXHJcblx0XHRyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChuYW1lLCBwcm9wcywgY2hpbGQpXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnRzOyJdfQ==
},{"../component":3,"../tools/is-scalar":39,"./proto":10,"react":230}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Text = exports.SvgIcon = exports.ProgressCircle = exports.ProgressLine = exports.Link = exports.Components = exports.Button = undefined;

var _button = require("./button");

var _button2 = _interopRequireDefault(_button);

var _link = require("./link");

var _link2 = _interopRequireDefault(_link);

var _progressLine = require("./progress-line");

var _progressLine2 = _interopRequireDefault(_progressLine);

var _progressCircle = require("./progress-circle");

var _progressCircle2 = _interopRequireDefault(_progressCircle);

var _svgIcon = require("./svg-icon");

var _svgIcon2 = _interopRequireDefault(_svgIcon);

var _text = require("./text");

var _text2 = _interopRequireDefault(_text);

var _components = require("./components");

var _components2 = _interopRequireDefault(_components);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import Tabs from "./tabs";

//import Input from "./input";
//import InputMultiline from "./input-multiline";
exports.Button = _button2.default;
exports.Components = _components2.default;
exports.Link = _link2.default;
exports.ProgressLine = _progressLine2.default;
exports.ProgressCircle = _progressCircle2.default;
exports.SvgIcon = _svgIcon2.default;
exports.Text = _text2.default;

// last load
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJ1dHRvbiIsIkNvbXBvbmVudHMiLCJMaW5rIiwiUHJvZ3Jlc3NMaW5lIiwiUHJvZ3Jlc3NDaXJjbGUiLCJTdmdJY29uIiwiVGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBR0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUdBOzs7Ozs7QUFKQTs7QUFOQTtBQUNBO1FBWUNBLE07UUFFQUMsVTtRQUNBQyxJO1FBQ0FDLFk7UUFBY0MsYztRQUNkQyxPO1FBRUFDLEk7O0FBWEQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnV0dG9uIGZyb20gXCIuL2J1dHRvblwiO1xyXG4vL2ltcG9ydCBJbnB1dCBmcm9tIFwiLi9pbnB1dFwiO1xyXG4vL2ltcG9ydCBJbnB1dE11bHRpbGluZSBmcm9tIFwiLi9pbnB1dC1tdWx0aWxpbmVcIjtcclxuaW1wb3J0IExpbmsgZnJvbSBcIi4vbGlua1wiO1xyXG5pbXBvcnQgUHJvZ3Jlc3NMaW5lIGZyb20gXCIuL3Byb2dyZXNzLWxpbmVcIjtcclxuaW1wb3J0IFByb2dyZXNzQ2lyY2xlIGZyb20gXCIuL3Byb2dyZXNzLWNpcmNsZVwiO1xyXG5pbXBvcnQgU3ZnSWNvbiBmcm9tIFwiLi9zdmctaWNvblwiO1xyXG4vL2ltcG9ydCBUYWJzIGZyb20gXCIuL3RhYnNcIjtcclxuaW1wb3J0IFRleHQgZnJvbSBcIi4vdGV4dFwiO1xyXG5cclxuLy8gbGFzdCBsb2FkXHJcbmltcG9ydCBDb21wb25lbnRzIGZyb20gXCIuL2NvbXBvbmVudHNcIjtcclxuXHJcbmV4cG9ydCB7XHJcblx0QnV0dG9uLFxyXG5cdC8vSW5wdXQsIElucHV0TXVsdGlsaW5lLFxyXG5cdENvbXBvbmVudHMsXHJcblx0TGluayxcclxuXHRQcm9ncmVzc0xpbmUsIFByb2dyZXNzQ2lyY2xlLFxyXG5cdFN2Z0ljb24sXHJcblx0Ly9UYWJzLFxyXG5cdFRleHRcclxufTsiXX0=
},{"./button":4,"./components":5,"./link":7,"./progress-circle":8,"./progress-line":9,"./svg-icon":12,"./text":13}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _svgIcon = require("./svg-icon");

var _svgIcon2 = _interopRequireDefault(_svgIcon);

var _proto = require("./proto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * @property iconName
 * @property textLabel
 *
 **/

var Link = function (_Proto) {
	_inherits(Link, _Proto);

	function Link() {
		_classCallCheck(this, Link);

		return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
	}

	_createClass(Link, [{
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state, { className: "link" }),
			    child = [];

			if (!props.href) {
				props.href = "#";
			}

			if (state.iconName) {
				child.push(_react2.default.createElement(_svgIcon2.default, { iconName: state.iconName, key: "icon" }));
			}

			if (state.textLabel) {
				child.push(state.iconName ? _react2.default.createElement(
					"span",
					{ key: "label" },
					state.textLabel
				) : state.textLabel);
			}

			if (!child.length && self.props.children) {
				child = self.props.children;
			}

			return _react2.default.createElement(
				"a",
				props,
				child
			);
		}
	}]);

	return Link;
}(_proto.Proto);

exports.default = Link;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmsuanMiXSwibmFtZXMiOlsiTGluayIsInNlbGYiLCJzdGF0ZSIsInByb3BzIiwiY2xhc3NOYW1lIiwiY2hpbGQiLCJocmVmIiwiaWNvbk5hbWUiLCJwdXNoIiwidGV4dExhYmVsIiwibGVuZ3RoIiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7O0FBRUE7Ozs7OztJQU1NQSxJOzs7Ozs7Ozs7OzsyQkFHTDtBQUNDLE9BQUlDLE9BQVEsSUFBWjtBQUFBLE9BQ0NDLFFBQVFELEtBQUtDLEtBRGQ7QUFBQSxPQUVDQyxRQUFRLHdCQUFhRCxLQUFiLEVBQW9CLEVBQUNFLFdBQVcsTUFBWixFQUFwQixDQUZUO0FBQUEsT0FHQ0MsUUFBUSxFQUhUOztBQUtBLE9BQUksQ0FBQ0YsTUFBTUcsSUFBWCxFQUFrQjtBQUNqQkgsVUFBTUcsSUFBTixHQUFhLEdBQWI7QUFDQTs7QUFFRCxPQUFJSixNQUFNSyxRQUFWLEVBQXFCO0FBQ3BCRixVQUFNRyxJQUFOLENBQ0MsbURBQVMsVUFBVU4sTUFBTUssUUFBekIsRUFBbUMsS0FBSSxNQUF2QyxHQUREO0FBR0E7O0FBRUQsT0FBSUwsTUFBTU8sU0FBVixFQUFzQjtBQUNyQkosVUFBTUcsSUFBTixDQUNDTixNQUFNSyxRQUFOLEdBQWlCO0FBQUE7QUFBQSxPQUFNLEtBQUksT0FBVjtBQUFtQkwsV0FBTU87QUFBekIsS0FBakIsR0FBOERQLE1BQU1PLFNBRHJFO0FBR0E7O0FBRUQsT0FBSSxDQUFDSixNQUFNSyxNQUFQLElBQWlCVCxLQUFLRSxLQUFMLENBQVdRLFFBQWhDLEVBQTJDO0FBQzFDTixZQUFRSixLQUFLRSxLQUFMLENBQVdRLFFBQW5CO0FBQ0E7O0FBRUQsVUFDQztBQUFBO0FBQU9SLFNBQVA7QUFBZUU7QUFBZixJQUREO0FBR0E7Ozs7OztrQkFHYUwsSSIsImZpbGUiOiJsaW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFN2Z0ljb24gZnJvbSBcIi4vc3ZnLWljb25cIjtcclxuaW1wb3J0IHsgRmlsdGVyUHJvcHMsIFByb3RvIH0gZnJvbSBcIi4vcHJvdG9cIjtcclxuXHJcbi8qXHJcbiAqIEBwcm9wZXJ0eSBpY29uTmFtZVxyXG4gKiBAcHJvcGVydHkgdGV4dExhYmVsXHJcbiAqXHJcbiAqKi9cclxuXHJcbmNsYXNzIExpbmsgZXh0ZW5kcyBQcm90b1xyXG57XHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHR2YXIgc2VsZiAgPSB0aGlzLFxyXG5cdFx0XHRzdGF0ZSA9IHNlbGYuc3RhdGUsXHJcblx0XHRcdHByb3BzID0gRmlsdGVyUHJvcHMoIHN0YXRlLCB7Y2xhc3NOYW1lOiBcImxpbmtcIn0gKSxcclxuXHRcdFx0Y2hpbGQgPSBbXTtcclxuXHJcblx0XHRpZiggIXByb3BzLmhyZWYgKSB7XHJcblx0XHRcdHByb3BzLmhyZWYgPSBcIiNcIlxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBzdGF0ZS5pY29uTmFtZSApIHtcclxuXHRcdFx0Y2hpbGQucHVzaChcclxuXHRcdFx0XHQ8U3ZnSWNvbiBpY29uTmFtZT17c3RhdGUuaWNvbk5hbWV9IGtleT1cImljb25cIiAvPlxyXG5cdFx0XHQpXHJcblx0XHR9XHJcblxyXG5cdFx0aWYoIHN0YXRlLnRleHRMYWJlbCApIHtcclxuXHRcdFx0Y2hpbGQucHVzaChcclxuXHRcdFx0XHRzdGF0ZS5pY29uTmFtZSA/IDxzcGFuIGtleT1cImxhYmVsXCI+e3N0YXRlLnRleHRMYWJlbH08L3NwYW4+IDogc3RhdGUudGV4dExhYmVsXHJcblx0XHRcdClcclxuXHRcdH1cclxuXHJcblx0XHRpZiggIWNoaWxkLmxlbmd0aCAmJiBzZWxmLnByb3BzLmNoaWxkcmVuICkge1xyXG5cdFx0XHRjaGlsZCA9IHNlbGYucHJvcHMuY2hpbGRyZW5cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8YSB7Li4ucHJvcHN9PntjaGlsZH08L2E+XHJcblx0XHQpXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaW5rOyJdfQ==
},{"./proto":10,"./svg-icon":12,"react":230}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _proto = require("./proto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Path = "M 50,50 m 0,-44.5 a 44.5,44.5 0 1 1 0,89 a 44.5,44.5 0 1 1 0,-89";

/*
 * @property intent
 * @property dimension
 * @property value
 * @property spinner
 *
 **/

var ProgressCircle = function (_Proto) {
	_inherits(ProgressCircle, _Proto);

	function ProgressCircle() {
		_classCallCheck(this, ProgressCircle);

		return _possibleConstructorReturn(this, (ProgressCircle.__proto__ || Object.getPrototypeOf(ProgressCircle)).apply(this, arguments));
	}

	_createClass(ProgressCircle, [{
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state),
			    pathProps = { pathLength: null, style: null },
			    className = "pg-round",
			    dimension = state.dimension || '',
			    intent = state.intent || 'default';

			if (_proto.Dimensions.indexOf(dimension) > -1) {
				className += " pg-" + dimension;
			}

			className += ' pg-' + (_proto.Intents.indexOf(intent) < 0 ? _proto.Intents[0] : intent);

			if (typeof state.value == "number") {

				var proc = Math.floor(280 * (state.value || 0));
				if (isNaN(proc) || proc > 280) {
					proc = 280;
				} else if (proc < 0) {
					proc = 0;
				}

				pathProps.pathLength = "280";
				pathProps.style = {
					strokeDasharray: "280, 280",
					strokeDashoffset: 280 - proc
				};

				if (state.spinner) {
					className += " pg-spinner";
				}
			} else {
				className += " pg-spinner";
			}

			(0, _proto.MergeClassName)(props, className);

			return _react2.default.createElement(
				"div",
				props,
				_react2.default.createElement(
					"div",
					{ className: "pg-round-wrap" },
					_react2.default.createElement(
						"svg",
						{ viewBox: "0 0 100 100" },
						_react2.default.createElement("path", { className: "pg-round-track", d: Path }),
						_react2.default.createElement("path", _extends({ className: "pg-round-head", d: Path }, pathProps))
					)
				)
			);
		}
	}]);

	return ProgressCircle;
}(_proto.Proto);

exports.default = ProgressCircle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzLWNpcmNsZS5qcyJdLCJuYW1lcyI6WyJQYXRoIiwiUHJvZ3Jlc3NDaXJjbGUiLCJzZWxmIiwic3RhdGUiLCJwcm9wcyIsInBhdGhQcm9wcyIsInBhdGhMZW5ndGgiLCJzdHlsZSIsImNsYXNzTmFtZSIsImRpbWVuc2lvbiIsImludGVudCIsImluZGV4T2YiLCJ2YWx1ZSIsInByb2MiLCJNYXRoIiwiZmxvb3IiLCJpc05hTiIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzcGlubmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU8sa0VBQWI7O0FBRUE7Ozs7Ozs7O0lBUU1DLGM7Ozs7Ozs7Ozs7OzJCQUdMO0FBQ0MsT0FBSUMsT0FBTyxJQUFYO0FBQUEsT0FDQ0MsUUFBUUQsS0FBS0MsS0FEZDtBQUFBLE9BRUNDLFFBQVEsd0JBQVlELEtBQVosQ0FGVDtBQUFBLE9BR0NFLFlBQVksRUFBRUMsWUFBWSxJQUFkLEVBQW9CQyxPQUFPLElBQTNCLEVBSGI7QUFBQSxPQUlDQyxZQUFZLFVBSmI7QUFBQSxPQUtDQyxZQUFZTixNQUFNTSxTQUFOLElBQW1CLEVBTGhDO0FBQUEsT0FNQ0MsU0FBU1AsTUFBTU8sTUFBTixJQUFnQixTQU4xQjs7QUFRQSxPQUFJLGtCQUFXQyxPQUFYLENBQW1CRixTQUFuQixJQUFnQyxDQUFDLENBQXJDLEVBQXlDO0FBQ3hDRCxpQkFBYSxTQUFTQyxTQUF0QjtBQUNBOztBQUVERCxnQkFBYSxVQUFXLGVBQVFHLE9BQVIsQ0FBZ0JELE1BQWhCLElBQTBCLENBQTFCLEdBQThCLGVBQVEsQ0FBUixDQUE5QixHQUEyQ0EsTUFBdEQsQ0FBYjs7QUFFQSxPQUFJLE9BQU9QLE1BQU1TLEtBQWIsSUFBc0IsUUFBMUIsRUFBcUM7O0FBRXBDLFFBQUlDLE9BQU9DLEtBQUtDLEtBQUwsQ0FBVyxPQUFPWixNQUFNUyxLQUFOLElBQWUsQ0FBdEIsQ0FBWCxDQUFYO0FBQ0EsUUFBSUksTUFBTUgsSUFBTixLQUFlQSxPQUFPLEdBQTFCLEVBQWdDO0FBQy9CQSxZQUFPLEdBQVA7QUFDQSxLQUZELE1BR0ssSUFBSUEsT0FBTyxDQUFYLEVBQWU7QUFDbkJBLFlBQU8sQ0FBUDtBQUNBOztBQUVEUixjQUFVQyxVQUFWLEdBQXVCLEtBQXZCO0FBQ0FELGNBQVVFLEtBQVYsR0FBa0I7QUFDakJVLHNCQUFpQixVQURBO0FBRWpCQyx1QkFBa0IsTUFBTUw7QUFGUCxLQUFsQjs7QUFLQSxRQUFJVixNQUFNZ0IsT0FBVixFQUFvQjtBQUNuQlgsa0JBQWEsYUFBYjtBQUNBO0FBQ0QsSUFuQkQsTUFvQks7QUFDSkEsaUJBQWEsYUFBYjtBQUNBOztBQUVELDhCQUFlSixLQUFmLEVBQXNCSSxTQUF0Qjs7QUFFQSxVQUNDO0FBQUE7QUFBU0osU0FBVDtBQUNDO0FBQUE7QUFBQSxPQUFLLFdBQVUsZUFBZjtBQUNDO0FBQUE7QUFBQSxRQUFLLFNBQVEsYUFBYjtBQUNDLDhDQUFNLFdBQVUsZ0JBQWhCLEVBQWlDLEdBQUdKLElBQXBDLEdBREQ7QUFFQyx1REFBTSxXQUFVLGVBQWhCLEVBQWlDLEdBQUdBLElBQXBDLElBQThDSyxTQUE5QztBQUZEO0FBREQ7QUFERCxJQUREO0FBVUE7Ozs7OztrQkFHYUosYyIsImZpbGUiOiJwcm9ncmVzcy1jaXJjbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEludGVudHMsIERpbWVuc2lvbnMsIEZpbHRlclByb3BzLCBNZXJnZUNsYXNzTmFtZSwgUHJvdG8gfSBmcm9tIFwiLi9wcm90b1wiO1xyXG5cclxuY29uc3QgUGF0aCA9IFwiTSA1MCw1MCBtIDAsLTQ0LjUgYSA0NC41LDQ0LjUgMCAxIDEgMCw4OSBhIDQ0LjUsNDQuNSAwIDEgMSAwLC04OVwiO1xyXG5cclxuLypcclxuICogQHByb3BlcnR5IGludGVudFxyXG4gKiBAcHJvcGVydHkgZGltZW5zaW9uXHJcbiAqIEBwcm9wZXJ0eSB2YWx1ZVxyXG4gKiBAcHJvcGVydHkgc3Bpbm5lclxyXG4gKlxyXG4gKiovXHJcblxyXG5jbGFzcyBQcm9ncmVzc0NpcmNsZSBleHRlbmRzIFByb3RvXHJcbntcclxuXHRyZW5kZXIoKVxyXG5cdHtcclxuXHRcdGxldCBzZWxmID0gdGhpcyxcclxuXHRcdFx0c3RhdGUgPSBzZWxmLnN0YXRlLFxyXG5cdFx0XHRwcm9wcyA9IEZpbHRlclByb3BzKHN0YXRlKSxcclxuXHRcdFx0cGF0aFByb3BzID0geyBwYXRoTGVuZ3RoOiBudWxsLCBzdHlsZTogbnVsbCB9LFxyXG5cdFx0XHRjbGFzc05hbWUgPSBcInBnLXJvdW5kXCIsXHJcblx0XHRcdGRpbWVuc2lvbiA9IHN0YXRlLmRpbWVuc2lvbiB8fCAnJyxcclxuXHRcdFx0aW50ZW50ID0gc3RhdGUuaW50ZW50IHx8ICdkZWZhdWx0JztcclxuXHJcblx0XHRpZiggRGltZW5zaW9ucy5pbmRleE9mKGRpbWVuc2lvbikgPiAtMSApIHtcclxuXHRcdFx0Y2xhc3NOYW1lICs9IFwiIHBnLVwiICsgZGltZW5zaW9uXHJcblx0XHR9XHJcblxyXG5cdFx0Y2xhc3NOYW1lICs9ICcgcGctJyArICggSW50ZW50cy5pbmRleE9mKGludGVudCkgPCAwID8gSW50ZW50c1swXSA6IGludGVudCApO1xyXG5cclxuXHRcdGlmKCB0eXBlb2Ygc3RhdGUudmFsdWUgPT0gXCJudW1iZXJcIiApIHtcclxuXHJcblx0XHRcdGxldCBwcm9jID0gTWF0aC5mbG9vcigyODAgKiAoc3RhdGUudmFsdWUgfHwgMCkpO1xyXG5cdFx0XHRpZiggaXNOYU4ocHJvYykgfHwgcHJvYyA+IDI4MCApIHtcclxuXHRcdFx0XHRwcm9jID0gMjgwXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiggcHJvYyA8IDAgKSB7XHJcblx0XHRcdFx0cHJvYyA9IDBcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cGF0aFByb3BzLnBhdGhMZW5ndGggPSBcIjI4MFwiO1xyXG5cdFx0XHRwYXRoUHJvcHMuc3R5bGUgPSB7XHJcblx0XHRcdFx0c3Ryb2tlRGFzaGFycmF5OiBcIjI4MCwgMjgwXCIsXHJcblx0XHRcdFx0c3Ryb2tlRGFzaG9mZnNldDogMjgwIC0gcHJvY1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0aWYoIHN0YXRlLnNwaW5uZXIgKSB7XHJcblx0XHRcdFx0Y2xhc3NOYW1lICs9IFwiIHBnLXNwaW5uZXJcIlxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0Y2xhc3NOYW1lICs9IFwiIHBnLXNwaW5uZXJcIlxyXG5cdFx0fVxyXG5cclxuXHRcdE1lcmdlQ2xhc3NOYW1lKHByb3BzLCBjbGFzc05hbWUpO1xyXG5cclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgey4uLnByb3BzfT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInBnLXJvdW5kLXdyYXBcIj5cclxuXHRcdFx0XHRcdDxzdmcgdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XHJcblx0XHRcdFx0XHRcdDxwYXRoIGNsYXNzTmFtZT1cInBnLXJvdW5kLXRyYWNrXCIgZD17UGF0aH0gLz5cclxuXHRcdFx0XHRcdFx0PHBhdGggY2xhc3NOYW1lPVwicGctcm91bmQtaGVhZFwiICBkPXtQYXRofSB7Li4ucGF0aFByb3BzfSAvPlxyXG5cdFx0XHRcdFx0PC9zdmc+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUHJvZ3Jlc3NDaXJjbGU7Il19
},{"./proto":10,"react":230}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _proto = require("./proto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * @property intent
 * @property stripes
 * @property animation
 * @property value
 *
 **/

var ProgressLine = function (_Proto) {
	_inherits(ProgressLine, _Proto);

	function ProgressLine() {
		_classCallCheck(this, ProgressLine);

		return _possibleConstructorReturn(this, (ProgressLine.__proto__ || Object.getPrototypeOf(ProgressLine)).apply(this, arguments));
	}

	_createClass(ProgressLine, [{
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state),
			    className = "pg-line",
			    intent = state.intent || 'default',
			    proc = Math.floor(100 * (state.value || 0)),
			    style = void 0;

			className += ' pg-' + (_proto.Intents.indexOf(intent) < 0 ? _proto.Intents[0] : intent);

			if (state.stripes !== false) className += ' pg-stripes';
			if (state.animation !== false) className += ' pg-animation';

			if (isNaN(proc) || proc > 100) {
				proc = 100;
			} else if (proc < 0) {
				proc = 0;
			}

			style = { width: proc + "%" };

			(0, _proto.MergeClassName)(props, className);

			return _react2.default.createElement(
				"div",
				props,
				_react2.default.createElement("div", { className: "pg-meter", style: style })
			);
		}
	}]);

	return ProgressLine;
}(_proto.Proto);

exports.default = ProgressLine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzLWxpbmUuanMiXSwibmFtZXMiOlsiUHJvZ3Jlc3NMaW5lIiwic2VsZiIsInN0YXRlIiwicHJvcHMiLCJjbGFzc05hbWUiLCJpbnRlbnQiLCJwcm9jIiwiTWF0aCIsImZsb29yIiwidmFsdWUiLCJzdHlsZSIsImluZGV4T2YiLCJzdHJpcGVzIiwiYW5pbWF0aW9uIiwiaXNOYU4iLCJ3aWR0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7O0lBUU1BLFk7Ozs7Ozs7Ozs7OzJCQUdMO0FBQ0MsT0FBSUMsT0FBTyxJQUFYO0FBQUEsT0FDQ0MsUUFBUUQsS0FBS0MsS0FEZDtBQUFBLE9BRUNDLFFBQVEsd0JBQVlELEtBQVosQ0FGVDtBQUFBLE9BR0NFLFlBQVksU0FIYjtBQUFBLE9BSUNDLFNBQVNILE1BQU1HLE1BQU4sSUFBZ0IsU0FKMUI7QUFBQSxPQUtDQyxPQUFPQyxLQUFLQyxLQUFMLENBQVcsT0FBT04sTUFBTU8sS0FBTixJQUFlLENBQXRCLENBQVgsQ0FMUjtBQUFBLE9BSzhDQyxjQUw5Qzs7QUFPQU4sZ0JBQWEsVUFBVSxlQUFRTyxPQUFSLENBQWdCTixNQUFoQixJQUEwQixDQUExQixHQUE4QixlQUFRLENBQVIsQ0FBOUIsR0FBMkNBLE1BQXJELENBQWI7O0FBRUEsT0FBSUgsTUFBTVUsT0FBTixLQUFrQixLQUF0QixFQUE4QlIsYUFBYSxhQUFiO0FBQzlCLE9BQUlGLE1BQU1XLFNBQU4sS0FBb0IsS0FBeEIsRUFBZ0NULGFBQWEsZUFBYjs7QUFFaEMsT0FBSVUsTUFBTVIsSUFBTixLQUFlQSxPQUFPLEdBQTFCLEVBQWdDO0FBQy9CQSxXQUFPLEdBQVA7QUFDQSxJQUZELE1BR0ssSUFBSUEsT0FBTyxDQUFYLEVBQWU7QUFDbkJBLFdBQU8sQ0FBUDtBQUNBOztBQUVESSxXQUFRLEVBQUNLLE9BQU9ULE9BQU8sR0FBZixFQUFSOztBQUVBLDhCQUFlSCxLQUFmLEVBQXNCQyxTQUF0Qjs7QUFFQSxVQUNDO0FBQUE7QUFBU0QsU0FBVDtBQUNDLDJDQUFLLFdBQVUsVUFBZixFQUEwQixPQUFPTyxLQUFqQztBQURELElBREQ7QUFLQTs7Ozs7O2tCQUdhVixZIiwiZmlsZSI6InByb2dyZXNzLWxpbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEludGVudHMsIEZpbHRlclByb3BzLCBNZXJnZUNsYXNzTmFtZSwgUHJvdG8gfSBmcm9tIFwiLi9wcm90b1wiO1xyXG5cclxuLypcclxuICogQHByb3BlcnR5IGludGVudFxyXG4gKiBAcHJvcGVydHkgc3RyaXBlc1xyXG4gKiBAcHJvcGVydHkgYW5pbWF0aW9uXHJcbiAqIEBwcm9wZXJ0eSB2YWx1ZVxyXG4gKlxyXG4gKiovXHJcblxyXG5jbGFzcyBQcm9ncmVzc0xpbmUgZXh0ZW5kcyBQcm90b1xyXG57XHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRsZXQgc2VsZiA9IHRoaXMsXHJcblx0XHRcdHN0YXRlID0gc2VsZi5zdGF0ZSxcclxuXHRcdFx0cHJvcHMgPSBGaWx0ZXJQcm9wcyhzdGF0ZSksXHJcblx0XHRcdGNsYXNzTmFtZSA9IFwicGctbGluZVwiLFxyXG5cdFx0XHRpbnRlbnQgPSBzdGF0ZS5pbnRlbnQgfHwgJ2RlZmF1bHQnLFxyXG5cdFx0XHRwcm9jID0gTWF0aC5mbG9vcigxMDAgKiAoc3RhdGUudmFsdWUgfHwgMCkpLCBzdHlsZTtcclxuXHJcblx0XHRjbGFzc05hbWUgKz0gJyBwZy0nICsgKEludGVudHMuaW5kZXhPZihpbnRlbnQpIDwgMCA/IEludGVudHNbMF0gOiBpbnRlbnQpO1xyXG5cclxuXHRcdGlmKCBzdGF0ZS5zdHJpcGVzICE9PSBmYWxzZSApIGNsYXNzTmFtZSArPSAnIHBnLXN0cmlwZXMnO1xyXG5cdFx0aWYoIHN0YXRlLmFuaW1hdGlvbiAhPT0gZmFsc2UgKSBjbGFzc05hbWUgKz0gJyBwZy1hbmltYXRpb24nO1xyXG5cclxuXHRcdGlmKCBpc05hTihwcm9jKSB8fCBwcm9jID4gMTAwICkge1xyXG5cdFx0XHRwcm9jID0gMTAwXHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKCBwcm9jIDwgMCApIHtcclxuXHRcdFx0cHJvYyA9IDBcclxuXHRcdH1cclxuXHJcblx0XHRzdHlsZSA9IHt3aWR0aDogcHJvYyArIFwiJVwifTtcclxuXHJcblx0XHRNZXJnZUNsYXNzTmFtZShwcm9wcywgY2xhc3NOYW1lKTtcclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IHsuLi5wcm9wc30+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJwZy1tZXRlclwiIHN0eWxlPXtzdHlsZX0gLz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9ncmVzc0xpbmU7XHJcbiJdfQ==
},{"./proto":10,"react":230}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Proto = exports.InputDriver = exports.Blur = exports.FilterProps = exports.FilterState = exports.AssignSelect = exports.MergeClassName = exports.HtmlBlockNames = exports.Dimensions = exports.Intents = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _caller = require("../caller");

var _caller2 = _interopRequireDefault(_caller);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var regLTrim = /^\s+/;
var docFocus = typeof document !== "undefined" && 'hasFocus' in document;

var Intents = ['default', 'primary', 'success', 'danger'];
var Dimensions = ['lg', 'sm', 'xs'];

var Properties = {};
var Events = {};
var HtmlBlockNames = {};

"accept,acceptCharset,accessKey,action,allowFullScreen,allowTransparency,alt,as,async,autoComplete,autoPlay,capture,cellPadding,cellSpacing,charSet,challenge,checked,cite,classID,className,cols,colSpan,content,contentEditable,contextMenu,controls,coords,crossOrigin,data,dateTime,default,defer,dir,disabled,download,draggable,encType,form,formAction,formEncType,formMethod,formNoValidate,formTarget,frameBorder,headers,height,hidden,high,href,hrefLang,htmlFor,httpEquiv,icon,id,inputMode,integrity,is,keyParams,keyType,kind,label,lang,list,loop,low,manifest,marginHeight,marginWidth,max,maxLength,media,mediaGroup,method,min,minLength,multiple,muted,name,nonce,noValidate,open,optimum,pattern,placeholder,playsInline,poster,preload,profile,radioGroup,readOnly,referrerPolicy,rel,required,reversed,role,rows,rowSpan,sandbox,scope,scoped,scrolling,seamless,selected,shape,size,sizes,span,spellCheck,src,srcDoc,srcLang,srcSet,start,step,style,summary,tabIndex,target,title,type,useMap,value,width,wmode,wrap,about,datatype,inlist,prefix,property,resource,typeof,vocab,autoCapitalize,autoCorrect,autoSave,color,itemProp,itemScope,itemType,itemID,itemRef,results,security,unselectable,class,for".split(",").forEach(function (name) {
	return Properties[name] = true;
});

"Abort,CanPlay,CanPlayThrough,DurationChange,Emptied,Encrypted,Ended,Error,Input,Invalid,Load,LoadedData,LoadedMetadata,LoadStart,Pause,Play,Playing,Progress,RateChange,Reset,Seeked,Seeking,Stalled,Submit,Suspend,TimeUpdate,VolumeChange,Waiting,KeyPress,KeyDown,KeyUp,Blur,Focus,Click,DoubleClick,MouseDown,MouseMove,MouseUp,MouseOut,MouseOver,ContextMenu,Drag,DragEnd,DragEnter,DragExit,DragLeave,DragOver,DragStart,Drop,TouchCancel,TouchEnd,TouchMove,TouchStart,AnimationEnd,AnimationIteration,AnimationStart,TransitionEnd,Scroll,Wheel,Copy,Cut,Paste,Change,CompositionEnd,CompositionStart,CompositionUpdate,SelectionChange,TextInput".split(",").forEach(function (name) {
	return Events['on' + name] = true;
});

'div,form,figure,blockquote,pre,p,h1,h2,h3,h4,h5,h6,address,article,aside,figure,footer,header,section,fieldset,figcaption,output,ul,ol,li,dd,dl,nav,hgroup,table,tfoot,thead,tbody,tr,th,td'.split(',').forEach(function (name) {
	return HtmlBlockNames[name] = true;
});
//

function MergeClassName(props, className) {
	if (Array.isArray(className)) {
		className = className.join(" ");
	}

	if (!props.className) {
		props.className = className;
	} else {
		props.className = (props.className + " " + className).replace(regLTrim, '');
	}

	return props;
}

function AssignSelect(toObj, fromObj, names) {
	names.forEach(function (name) {
		if (fromObj[name] !== undefined) {
			toObj[name] = fromObj[name];
		}
	});
	return toObj;
}

function FilterState(props) {
	var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	Object.keys(props).forEach(function (name) {
		if (!Properties[name] && !Events[name]) {
			def[name] = props[name];
		}
	});
	return def;
}

function FilterProps(props) {
	var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	var ignore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

	var isIgnore = ignore.length > 0;
	Object.keys(props).forEach(function (name) {

		if (isIgnore && ~ignore[name]) {
			return;
		}

		if (Events[name]) {
			var value = props[name];

			if (typeof value === 'string' || Array.isArray(value)) {
				def[name] = function (e) {
					return _caller2.default.dispatch(value, e);
				};
			} else {
				def[name] = value;
			}
		} else if (Properties[name]) {
			def[name] = props[name];
		}
	});

	return def;
}

function Blur() {
	var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	if (docFocus && document.hasFocus()) {

		var focus = void 0,
		    timeout = 45;
		if (typeof props.timeout == "number" && !isNaN(props.timeout) && isFinite(props.timeout) && props.timeout > -1) {
			timeout = props.timeout;
		}

		setTimeout(function () {
			focus = document.activeElement;
			if (focus) {
				if (props.closest) {
					focus = focus.closest(props.closest);
				}
				if (focus && props.not && focus.closest(props.not)) {
					focus = false;
				}
				if (focus) {
					try {
						focus.blur();
					} catch (e) {}
				}
			}
		}, timeout);
	}
}

var InputDriver = function () {
	function InputDriver() {
		_classCallCheck(this, InputDriver);
	}

	_createClass(InputDriver, [{
		key: "valid",
		value: function valid(value) {
			return true;
		}
	}, {
		key: "filter",
		value: function filter(value) {
			return value;
		}
	}]);

	return InputDriver;
}();

var Proto = function (_React$Component) {
	_inherits(Proto, _React$Component);

	function Proto(props) {
		_classCallCheck(this, Proto);

		var _this = _possibleConstructorReturn(this, (Proto.__proto__ || Object.getPrototypeOf(Proto)).call(this, props));

		_this.state = Object.assign({}, props);
		return _this;
	}

	_createClass(Proto, [{
		key: "componentWillReceiveProps",
		value: function componentWillReceiveProps(props) {
			this.setState(props);
		}
	}]);

	return Proto;
}(_react2.default.Component);

exports.Intents = Intents;
exports.Dimensions = Dimensions;
exports.HtmlBlockNames = HtmlBlockNames;
exports.MergeClassName = MergeClassName;
exports.AssignSelect = AssignSelect;
exports.FilterState = FilterState;
exports.FilterProps = FilterProps;
exports.Blur = Blur;
exports.InputDriver = InputDriver;
exports.Proto = Proto;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"../caller":2,"react":230}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _svgIcon = require('../svg-icon');

var _svgIcon2 = _interopRequireDefault(_svgIcon);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _progressLine = require('../progress-line');

var _progressLine2 = _interopRequireDefault(_progressLine);

var _proto = require('../proto');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * @property iconName
 * @property value
 * @property message
 * @property button
 * @property closable
 * @property onClose
 */

var ToastElement = function (_Proto) {
	_inherits(ToastElement, _Proto);

	function ToastElement() {
		_classCallCheck(this, ToastElement);

		return _possibleConstructorReturn(this, (ToastElement.__proto__ || Object.getPrototypeOf(ToastElement)).apply(this, arguments));
	}

	_createClass(ToastElement, [{
		key: 'progress',
		value: function progress(value) {
			var ref = this.refs.progress;
			if (ref) {
				ref.setState({ value: value });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var self = this,
			    state = self.state,
			    className = "toast level-" + state.level,
			    icon = state.iconName || (state.level === 'error' ? 'bell' : ''),
			    wrap = [];

			if (icon) {
				className += ' iconable';
				wrap.push(_react2.default.createElement(_svgIcon2.default, { iconName: icon, key: 'icon' }));
			}

			if (typeof state.progress == "number") {
				wrap.push(_react2.default.createElement(
					'div',
					{ className: 'progress', key: 'progress' },
					_react2.default.createElement(_progressLine2.default, { value: state.progress, ref: 'progress' })
				));
			} else {
				wrap.push(_react2.default.createElement(
					'div',
					{ className: 'text', key: 'text' },
					state.message
				));
			}

			if (state.button) {
				className += ' clickable';
				wrap.push(_react2.default.createElement(_button2.default, _extends({}, state.button, { key: 'button' })));
				if (state.closable) {
					wrap.push(_react2.default.createElement('div', { className: 'divider', key: 'divider' }));
				}
			}

			if (state.closable) {
				className += ' closable';
				wrap.push(_react2.default.createElement(_button2.default, { iconName: 'close', onClick: state.onClose, key: 'close' }));
			}

			return _react2.default.createElement(
				'div',
				{ className: className },
				_react2.default.createElement(
					'div',
					{ className: 'toast-box' },
					wrap
				)
			);
		}
	}]);

	return ToastElement;
}(_proto.Proto);

exports.default = ToastElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYXN0LWVsZW1lbnQuanMiXSwibmFtZXMiOlsiVG9hc3RFbGVtZW50IiwidmFsdWUiLCJyZWYiLCJyZWZzIiwicHJvZ3Jlc3MiLCJzZXRTdGF0ZSIsInNlbGYiLCJzdGF0ZSIsImNsYXNzTmFtZSIsImxldmVsIiwiaWNvbiIsImljb25OYW1lIiwid3JhcCIsInB1c2giLCJtZXNzYWdlIiwiYnV0dG9uIiwiY2xvc2FibGUiLCJvbkNsb3NlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7SUFTTUEsWTs7Ozs7Ozs7Ozs7MkJBRUlDLEssRUFDVDtBQUNDLE9BQUlDLE1BQU0sS0FBS0MsSUFBTCxDQUFVQyxRQUFwQjtBQUNBLE9BQUlGLEdBQUosRUFBVTtBQUNUQSxRQUFJRyxRQUFKLENBQWEsRUFBRUosT0FBT0EsS0FBVCxFQUFiO0FBQ0E7QUFDRDs7OzJCQUdEO0FBQ0MsT0FBSUssT0FBTyxJQUFYO0FBQUEsT0FDQ0MsUUFBUUQsS0FBS0MsS0FEZDtBQUFBLE9BRUNDLFlBQVksaUJBQWlCRCxNQUFNRSxLQUZwQztBQUFBLE9BR0NDLE9BQU9ILE1BQU1JLFFBQU4sS0FBb0JKLE1BQU1FLEtBQU4sS0FBZ0IsT0FBaEIsR0FBMEIsTUFBMUIsR0FBbUMsRUFBdkQsQ0FIUjtBQUFBLE9BSUNHLE9BQU8sRUFKUjs7QUFNQSxPQUFJRixJQUFKLEVBQVc7QUFDVkYsaUJBQWEsV0FBYjtBQUNBSSxTQUFLQyxJQUFMLENBQ0MsbURBQVMsVUFBVUgsSUFBbkIsRUFBeUIsS0FBSSxNQUE3QixHQUREO0FBR0E7O0FBRUQsT0FBSSxPQUFPSCxNQUFNSCxRQUFiLElBQXlCLFFBQTdCLEVBQXdDO0FBQ3ZDUSxTQUFLQyxJQUFMLENBQ0M7QUFBQTtBQUFBLE9BQUssV0FBVSxVQUFmLEVBQTBCLEtBQUksVUFBOUI7QUFDQyw2REFBYyxPQUFPTixNQUFNSCxRQUEzQixFQUFxQyxLQUFJLFVBQXpDO0FBREQsS0FERDtBQUtBLElBTkQsTUFPSztBQUNKUSxTQUFLQyxJQUFMLENBQ0M7QUFBQTtBQUFBLE9BQUssV0FBVSxNQUFmLEVBQXNCLEtBQUksTUFBMUI7QUFDRU4sV0FBTU87QUFEUixLQUREO0FBS0E7O0FBRUQsT0FBSVAsTUFBTVEsTUFBVixFQUFtQjtBQUNsQlAsaUJBQWEsWUFBYjtBQUNBSSxTQUFLQyxJQUFMLENBQVcsNkRBQVlOLE1BQU1RLE1BQWxCLElBQTBCLEtBQUksUUFBOUIsSUFBWDtBQUNBLFFBQUlSLE1BQU1TLFFBQVYsRUFBcUI7QUFDcEJKLFVBQUtDLElBQUwsQ0FBVyx1Q0FBSyxXQUFVLFNBQWYsRUFBeUIsS0FBSSxTQUE3QixHQUFYO0FBQ0E7QUFDRDs7QUFFRCxPQUFJTixNQUFNUyxRQUFWLEVBQXFCO0FBQ3BCUixpQkFBYSxXQUFiO0FBQ0FJLFNBQUtDLElBQUwsQ0FBVyxrREFBUSxVQUFTLE9BQWpCLEVBQXlCLFNBQVNOLE1BQU1VLE9BQXhDLEVBQWlELEtBQUksT0FBckQsR0FBWDtBQUNBOztBQUVELFVBQ0M7QUFBQTtBQUFBLE1BQUssV0FBV1QsU0FBaEI7QUFDQztBQUFBO0FBQUEsT0FBSyxXQUFVLFdBQWY7QUFDRUk7QUFERjtBQURELElBREQ7QUFPQTs7Ozs7O2tCQUdhWixZIiwiZmlsZSI6InRvYXN0LWVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgU3ZnSWNvbiBmcm9tICcuLi9zdmctaWNvbic7XHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vYnV0dG9uJztcclxuaW1wb3J0IFByb2dyZXNzTGluZSBmcm9tICcuLi9wcm9ncmVzcy1saW5lJztcclxuaW1wb3J0IHsgUHJvdG8gfSBmcm9tIFwiLi4vcHJvdG9cIjtcclxuXHJcbi8qXHJcbiAqIEBwcm9wZXJ0eSBpY29uTmFtZVxyXG4gKiBAcHJvcGVydHkgdmFsdWVcclxuICogQHByb3BlcnR5IG1lc3NhZ2VcclxuICogQHByb3BlcnR5IGJ1dHRvblxyXG4gKiBAcHJvcGVydHkgY2xvc2FibGVcclxuICogQHByb3BlcnR5IG9uQ2xvc2VcclxuICovXHJcblxyXG5jbGFzcyBUb2FzdEVsZW1lbnQgZXh0ZW5kcyBQcm90b1xyXG57XHJcblx0cHJvZ3Jlc3ModmFsdWUpXHJcblx0e1xyXG5cdFx0bGV0IHJlZiA9IHRoaXMucmVmcy5wcm9ncmVzcztcclxuXHRcdGlmKCByZWYgKSB7XHJcblx0XHRcdHJlZi5zZXRTdGF0ZSh7IHZhbHVlOiB2YWx1ZSB9KVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmVuZGVyKClcclxuXHR7XHJcblx0XHRsZXQgc2VsZiA9IHRoaXMsXHJcblx0XHRcdHN0YXRlID0gc2VsZi5zdGF0ZSxcclxuXHRcdFx0Y2xhc3NOYW1lID0gXCJ0b2FzdCBsZXZlbC1cIiArIHN0YXRlLmxldmVsLFxyXG5cdFx0XHRpY29uID0gc3RhdGUuaWNvbk5hbWUgfHwgKCBzdGF0ZS5sZXZlbCA9PT0gJ2Vycm9yJyA/ICdiZWxsJyA6ICcnICksXHJcblx0XHRcdHdyYXAgPSBbXTtcclxuXHJcblx0XHRpZiggaWNvbiApIHtcclxuXHRcdFx0Y2xhc3NOYW1lICs9ICcgaWNvbmFibGUnO1xyXG5cdFx0XHR3cmFwLnB1c2goXHJcblx0XHRcdFx0PFN2Z0ljb24gaWNvbk5hbWU9e2ljb259IGtleT1cImljb25cIiAvPlxyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCB0eXBlb2Ygc3RhdGUucHJvZ3Jlc3MgPT0gXCJudW1iZXJcIiApIHtcclxuXHRcdFx0d3JhcC5wdXNoKFxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3NcIiBrZXk9XCJwcm9ncmVzc1wiPlxyXG5cdFx0XHRcdFx0PFByb2dyZXNzTGluZSB2YWx1ZT17c3RhdGUucHJvZ3Jlc3N9IHJlZj1cInByb2dyZXNzXCIgLz5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHR3cmFwLnB1c2goXHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJ0ZXh0XCIga2V5PVwidGV4dFwiPlxyXG5cdFx0XHRcdFx0e3N0YXRlLm1lc3NhZ2V9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYoIHN0YXRlLmJ1dHRvbiApIHtcclxuXHRcdFx0Y2xhc3NOYW1lICs9ICcgY2xpY2thYmxlJztcclxuXHRcdFx0d3JhcC5wdXNoKCA8QnV0dG9uIHsuLi5zdGF0ZS5idXR0b259IGtleT1cImJ1dHRvblwiIC8+ICk7XHJcblx0XHRcdGlmKCBzdGF0ZS5jbG9zYWJsZSApIHtcclxuXHRcdFx0XHR3cmFwLnB1c2goIDxkaXYgY2xhc3NOYW1lPVwiZGl2aWRlclwiIGtleT1cImRpdmlkZXJcIiAvPiApXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiggc3RhdGUuY2xvc2FibGUgKSB7XHJcblx0XHRcdGNsYXNzTmFtZSArPSAnIGNsb3NhYmxlJztcclxuXHRcdFx0d3JhcC5wdXNoKCA8QnV0dG9uIGljb25OYW1lPVwiY2xvc2VcIiBvbkNsaWNrPXtzdGF0ZS5vbkNsb3NlfSBrZXk9XCJjbG9zZVwiIC8+IClcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInRvYXN0LWJveFwiPlxyXG5cdFx0XHRcdFx0e3dyYXB9XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0KVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVG9hc3RFbGVtZW50OyJdfQ==
},{"../button":4,"../progress-line":9,"../proto":10,"../svg-icon":12,"react":230}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _data = require("../data");

var _data2 = _interopRequireDefault(_data);

var _proto = require("./proto");

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SVG = {};
_data2.default.then('icons', function (e) {
	SVG = e.detail.value;
});

/*
 * @property iconName
 * @property viewBox
 * @property width
 * @property height
 */

function SvgIcon(props) {
	var iconProps = (0, _proto.FilterProps)(props),
	    name = props.iconName || "empty",
	    className = 'svg-icon icon-' + name,
	    svgProps = (0, _proto.AssignSelect)({ viewBox: "0 0 24 24" }, props, ['width', 'height']),
	    path = void 0,
	    data = SVG[name] || "";

	if (typeof data === "string") {
		path = data;
	} else if (data) {
		if (data.viewBox) svgProps.viewBox = data.viewBox;
		path = data.path || "";
	}

	(0, _proto.MergeClassName)(iconProps, className);

	return _react2.default.createElement(
		"i",
		iconProps,
		_react2.default.createElement(
			"svg",
			svgProps,
			path.length && path[0] == '#' ? _react2.default.createElement("use", { xlinkHref: path }) : _react2.default.createElement("path", { d: path })
		)
	);
}

exports.default = SvgIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN2Zy1pY29uLmpzIl0sIm5hbWVzIjpbIlNWRyIsInRoZW4iLCJlIiwiZGV0YWlsIiwidmFsdWUiLCJTdmdJY29uIiwicHJvcHMiLCJpY29uUHJvcHMiLCJuYW1lIiwiaWNvbk5hbWUiLCJjbGFzc05hbWUiLCJzdmdQcm9wcyIsInZpZXdCb3giLCJwYXRoIiwiZGF0YSIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBSUEsTUFBTSxFQUFWO0FBQ0EsZUFBS0MsSUFBTCxDQUFVLE9BQVYsRUFBbUIsYUFBSztBQUFFRCxPQUFNRSxFQUFFQyxNQUFGLENBQVNDLEtBQWY7QUFBc0IsQ0FBaEQ7O0FBRUE7Ozs7Ozs7QUFPQSxTQUFTQyxPQUFULENBQWlCQyxLQUFqQixFQUNBO0FBQ0MsS0FBSUMsWUFBWSx3QkFBWUQsS0FBWixDQUFoQjtBQUFBLEtBQ0NFLE9BQU9GLE1BQU1HLFFBQU4sSUFBa0IsT0FEMUI7QUFBQSxLQUVDQyxZQUFZLG1CQUFtQkYsSUFGaEM7QUFBQSxLQUdDRyxXQUFXLHlCQUFhLEVBQUNDLFNBQVMsV0FBVixFQUFiLEVBQXFDTixLQUFyQyxFQUE0QyxDQUFDLE9BQUQsRUFBVSxRQUFWLENBQTVDLENBSFo7QUFBQSxLQUlDTyxhQUpEO0FBQUEsS0FLQ0MsT0FBT2QsSUFBSVEsSUFBSixLQUFhLEVBTHJCOztBQU9BLEtBQUksT0FBT00sSUFBUCxLQUFnQixRQUFwQixFQUErQjtBQUM5QkQsU0FBT0MsSUFBUDtBQUNBLEVBRkQsTUFHSyxJQUFJQSxJQUFKLEVBQVc7QUFDZixNQUFJQSxLQUFLRixPQUFULEVBQW1CRCxTQUFTQyxPQUFULEdBQW1CRSxLQUFLRixPQUF4QjtBQUNuQkMsU0FBT0MsS0FBS0QsSUFBTCxJQUFhLEVBQXBCO0FBQ0E7O0FBRUQsNEJBQWVOLFNBQWYsRUFBMEJHLFNBQTFCOztBQUVBLFFBQ0M7QUFBQTtBQUFPSCxXQUFQO0FBQ0M7QUFBQTtBQUFTSSxXQUFUO0FBQ0VFLFFBQUtFLE1BQUwsSUFBZUYsS0FBSyxDQUFMLEtBQVcsR0FBMUIsR0FBZ0MsdUNBQUssV0FBV0EsSUFBaEIsR0FBaEMsR0FBMkQsd0NBQU0sR0FBR0EsSUFBVDtBQUQ3RDtBQURELEVBREQ7QUFPQTs7a0JBRWNSLE8iLCJmaWxlIjoic3ZnLWljb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YSBmcm9tIFwiLi4vZGF0YVwiO1xyXG5pbXBvcnQgeyBNZXJnZUNsYXNzTmFtZSwgQXNzaWduU2VsZWN0LCBGaWx0ZXJQcm9wcyB9IGZyb20gXCIuL3Byb3RvXCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmxldCBTVkcgPSB7fTtcclxuRGF0YS50aGVuKCdpY29ucycsIGUgPT4geyBTVkcgPSBlLmRldGFpbC52YWx1ZSB9KTtcclxuXHJcbi8qXHJcbiAqIEBwcm9wZXJ0eSBpY29uTmFtZVxyXG4gKiBAcHJvcGVydHkgdmlld0JveFxyXG4gKiBAcHJvcGVydHkgd2lkdGhcclxuICogQHByb3BlcnR5IGhlaWdodFxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIFN2Z0ljb24ocHJvcHMpXHJcbntcclxuXHRsZXQgaWNvblByb3BzID0gRmlsdGVyUHJvcHMocHJvcHMpLFxyXG5cdFx0bmFtZSA9IHByb3BzLmljb25OYW1lIHx8IFwiZW1wdHlcIixcclxuXHRcdGNsYXNzTmFtZSA9ICdzdmctaWNvbiBpY29uLScgKyBuYW1lLFxyXG5cdFx0c3ZnUHJvcHMgPSBBc3NpZ25TZWxlY3Qoe3ZpZXdCb3g6IFwiMCAwIDI0IDI0XCJ9LCBwcm9wcywgWyd3aWR0aCcsICdoZWlnaHQnXSksXHJcblx0XHRwYXRoLFxyXG5cdFx0ZGF0YSA9IFNWR1tuYW1lXSB8fCBcIlwiO1xyXG5cclxuXHRpZiggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRwYXRoID0gZGF0YVxyXG5cdH1cclxuXHRlbHNlIGlmKCBkYXRhICkge1xyXG5cdFx0aWYoIGRhdGEudmlld0JveCApIHN2Z1Byb3BzLnZpZXdCb3ggPSBkYXRhLnZpZXdCb3g7XHJcblx0XHRwYXRoID0gZGF0YS5wYXRoIHx8IFwiXCJcclxuXHR9XHJcblxyXG5cdE1lcmdlQ2xhc3NOYW1lKGljb25Qcm9wcywgY2xhc3NOYW1lKTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxpIHsuLi5pY29uUHJvcHN9PlxyXG5cdFx0XHQ8c3ZnIHsuLi5zdmdQcm9wc30+XHJcblx0XHRcdFx0e3BhdGgubGVuZ3RoICYmIHBhdGhbMF0gPT0gJyMnID8gPHVzZSB4bGlua0hyZWY9e3BhdGh9IC8+IDogPHBhdGggZD17cGF0aH0gLz59XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0PC9pPlxyXG5cdCk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFN2Z0ljb247Il19
},{"../data":15,"./proto":10,"react":230}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _proto = require("./proto");

var _isScalar = require("../tools/is-scalar");

var _isScalar2 = _interopRequireDefault(_isScalar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * @property tagName
 * @property child
 * @property isHtml
 * @property text
 */

function CreateText(item, index) {
	if (item === null || item === undefined) {
		return null;
	}

	if ((0, _isScalar2.default)(item)) {
		return String(item);
	}

	var name = 'div',
	    props = { key: index },
	    text = void 0;

	(0, _proto.FilterProps)(item, props);

	if (item.child && Array.isArray(item.child)) {
		text = item.child.map(function (e, i) {
			return CreateText(e, i);
		});
	} else {
		text = String(item.text || '');

		if (item.isHtml) {
			props.dangerouslySetInnerHTML = { __html: text };
			text = null;
		}

		if (typeof item.tagName === 'string' && _proto.HtmlBlockNames[item.tagName]) {
			name = item.tagName;
		}
	}

	return _react2.default.createElement(name, props, text);
}

var Text = function (_Proto) {
	_inherits(Text, _Proto);

	function Text() {
		_classCallCheck(this, Text);

		return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
	}

	_createClass(Text, [{
		key: "render",
		value: function render() {
			var self = this,
			    state = self.state,
			    props = (0, _proto.FilterProps)(state),
			    name = state.tagName || 'div',
			    child = null;

			if (!_proto.HtmlBlockNames[name]) {
				name = 'div';
			}

			if (state.child) {

				if (Array.isArray(state.child)) {
					child = state.child.map(function (item, index) {
						return CreateText(item, index);
					});
				} else {
					child = CreateText(state.child, 0);
				}
			} else if (state.text) {

				if (state.isHtml) {
					props.dangerouslySetInnerHTML = { __html: String(state.text) };
				} else {
					child = String(state.text);
				}
			} else if (self.props.children) {
				child = self.props.children;
			}

			return _react2.default.createElement(name, props, child);
		}
	}]);

	return Text;
}(_proto.Proto);

exports.default = Text;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHQuanMiXSwibmFtZXMiOlsiQ3JlYXRlVGV4dCIsIml0ZW0iLCJpbmRleCIsInVuZGVmaW5lZCIsIlN0cmluZyIsIm5hbWUiLCJwcm9wcyIsImtleSIsInRleHQiLCJjaGlsZCIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsImUiLCJpIiwiaXNIdG1sIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJ0YWdOYW1lIiwiY3JlYXRlRWxlbWVudCIsIlRleHQiLCJzZWxmIiwic3RhdGUiLCJjaGlsZHJlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQTs7Ozs7OztBQU9BLFNBQVNBLFVBQVQsQ0FBcUJDLElBQXJCLEVBQTJCQyxLQUEzQixFQUNBO0FBQ0MsS0FBSUQsU0FBUyxJQUFULElBQWlCQSxTQUFTRSxTQUE5QixFQUEwQztBQUN6QyxTQUFPLElBQVA7QUFDQTs7QUFFRCxLQUFJLHdCQUFTRixJQUFULENBQUosRUFBcUI7QUFDcEIsU0FBT0csT0FBT0gsSUFBUCxDQUFQO0FBQ0E7O0FBRUQsS0FBSUksT0FBTyxLQUFYO0FBQUEsS0FBa0JDLFFBQVEsRUFBQ0MsS0FBS0wsS0FBTixFQUExQjtBQUFBLEtBQXdDTSxhQUF4Qzs7QUFFQSx5QkFBWVAsSUFBWixFQUFrQkssS0FBbEI7O0FBRUEsS0FBR0wsS0FBS1EsS0FBTCxJQUFjQyxNQUFNQyxPQUFOLENBQWNWLEtBQUtRLEtBQW5CLENBQWpCLEVBQTRDO0FBQzNDRCxTQUFPUCxLQUFLUSxLQUFMLENBQVdHLEdBQVgsQ0FBZ0IsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsVUFBVWQsV0FBV2EsQ0FBWCxFQUFjQyxDQUFkLENBQVY7QUFBQSxHQUFoQixDQUFQO0FBQ0EsRUFGRCxNQUdLO0FBQ0pOLFNBQU9KLE9BQVFILEtBQUtPLElBQUwsSUFBYSxFQUFyQixDQUFQOztBQUVBLE1BQUlQLEtBQUtjLE1BQVQsRUFBa0I7QUFDakJULFNBQU1VLHVCQUFOLEdBQWdDLEVBQUVDLFFBQVFULElBQVYsRUFBaEM7QUFDQUEsVUFBTyxJQUFQO0FBQ0E7O0FBRUQsTUFBSSxPQUFPUCxLQUFLaUIsT0FBWixLQUF3QixRQUF4QixJQUFvQyxzQkFBZWpCLEtBQUtpQixPQUFwQixDQUF4QyxFQUF1RTtBQUN0RWIsVUFBT0osS0FBS2lCLE9BQVo7QUFDQTtBQUNEOztBQUVELFFBQU8sZ0JBQU1DLGFBQU4sQ0FBcUJkLElBQXJCLEVBQTJCQyxLQUEzQixFQUFrQ0UsSUFBbEMsQ0FBUDtBQUNBOztJQUVLWSxJOzs7Ozs7Ozs7OzsyQkFHTDtBQUNDLE9BQUlDLE9BQVEsSUFBWjtBQUFBLE9BQ0NDLFFBQVFELEtBQUtDLEtBRGQ7QUFBQSxPQUVDaEIsUUFBUSx3QkFBWWdCLEtBQVosQ0FGVDtBQUFBLE9BR0NqQixPQUFRaUIsTUFBTUosT0FBTixJQUFpQixLQUgxQjtBQUFBLE9BSUNULFFBQVEsSUFKVDs7QUFNQSxPQUFJLENBQUUsc0JBQWVKLElBQWYsQ0FBTixFQUE2QjtBQUM1QkEsV0FBTyxLQUFQO0FBQ0E7O0FBRUQsT0FBSWlCLE1BQU1iLEtBQVYsRUFBa0I7O0FBRWpCLFFBQUlDLE1BQU1DLE9BQU4sQ0FBY1csTUFBTWIsS0FBcEIsQ0FBSixFQUFpQztBQUNoQ0EsYUFBUWEsTUFBTWIsS0FBTixDQUFZRyxHQUFaLENBQWlCLFVBQUNYLElBQUQsRUFBT0MsS0FBUDtBQUFBLGFBQWlCRixXQUFXQyxJQUFYLEVBQWlCQyxLQUFqQixDQUFqQjtBQUFBLE1BQWpCLENBQVI7QUFDQSxLQUZELE1BR0s7QUFDSk8sYUFBUVQsV0FBV3NCLE1BQU1iLEtBQWpCLEVBQXdCLENBQXhCLENBQVI7QUFDQTtBQUNELElBUkQsTUFTSyxJQUFJYSxNQUFNZCxJQUFWLEVBQWlCOztBQUVyQixRQUFJYyxNQUFNUCxNQUFWLEVBQW1CO0FBQ2xCVCxXQUFNVSx1QkFBTixHQUFnQyxFQUFFQyxRQUFRYixPQUFPa0IsTUFBTWQsSUFBYixDQUFWLEVBQWhDO0FBQ0EsS0FGRCxNQUdLO0FBQ0pDLGFBQVFMLE9BQU9rQixNQUFNZCxJQUFiLENBQVI7QUFDQTtBQUNELElBUkksTUFTQSxJQUFJYSxLQUFLZixLQUFMLENBQVdpQixRQUFmLEVBQTBCO0FBQzlCZCxZQUFRWSxLQUFLZixLQUFMLENBQVdpQixRQUFuQjtBQUNBOztBQUVELFVBQU8sZ0JBQU1KLGFBQU4sQ0FBcUJkLElBQXJCLEVBQTJCQyxLQUEzQixFQUFrQ0csS0FBbEMsQ0FBUDtBQUNBOzs7Ozs7a0JBR2FXLEkiLCJmaWxlIjoidGV4dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgSHRtbEJsb2NrTmFtZXMsIFByb3RvLCBGaWx0ZXJQcm9wcyB9IGZyb20gXCIuL3Byb3RvXCI7XHJcbmltcG9ydCBJc1NjYWxhciBmcm9tIFwiLi4vdG9vbHMvaXMtc2NhbGFyXCI7XHJcblxyXG4vKlxyXG4gKiBAcHJvcGVydHkgdGFnTmFtZVxyXG4gKiBAcHJvcGVydHkgY2hpbGRcclxuICogQHByb3BlcnR5IGlzSHRtbFxyXG4gKiBAcHJvcGVydHkgdGV4dFxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIENyZWF0ZVRleHQoIGl0ZW0sIGluZGV4IClcclxue1xyXG5cdGlmKCBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdHJldHVybiBudWxsXHJcblx0fVxyXG5cclxuXHRpZiggSXNTY2FsYXIoaXRlbSkgKSB7XHJcblx0XHRyZXR1cm4gU3RyaW5nKGl0ZW0pXHJcblx0fVxyXG5cclxuXHRsZXQgbmFtZSA9ICdkaXYnLCBwcm9wcyA9IHtrZXk6IGluZGV4fSwgdGV4dDtcclxuXHJcblx0RmlsdGVyUHJvcHMoaXRlbSwgcHJvcHMpO1xyXG5cclxuXHRpZihpdGVtLmNoaWxkICYmIEFycmF5LmlzQXJyYXkoaXRlbS5jaGlsZCkpIHtcclxuXHRcdHRleHQgPSBpdGVtLmNoaWxkLm1hcCggKGUsIGkpID0+IENyZWF0ZVRleHQoZSwgaSkgKVxyXG5cdH1cclxuXHRlbHNlIHtcclxuXHRcdHRleHQgPSBTdHJpbmcoIGl0ZW0udGV4dCB8fCAnJyApO1xyXG5cclxuXHRcdGlmKCBpdGVtLmlzSHRtbCApIHtcclxuXHRcdFx0cHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSB7IF9faHRtbDogdGV4dCB9O1xyXG5cdFx0XHR0ZXh0ID0gbnVsbFxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCB0eXBlb2YgaXRlbS50YWdOYW1lID09PSAnc3RyaW5nJyAmJiBIdG1sQmxvY2tOYW1lc1tpdGVtLnRhZ05hbWVdICkge1xyXG5cdFx0XHRuYW1lID0gaXRlbS50YWdOYW1lXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCggbmFtZSwgcHJvcHMsIHRleHQgKVxyXG59XHJcblxyXG5jbGFzcyBUZXh0IGV4dGVuZHMgUHJvdG9cclxue1xyXG5cdHJlbmRlcigpXHJcblx0e1xyXG5cdFx0bGV0IHNlbGYgID0gdGhpcyxcclxuXHRcdFx0c3RhdGUgPSBzZWxmLnN0YXRlLFxyXG5cdFx0XHRwcm9wcyA9IEZpbHRlclByb3BzKHN0YXRlKSxcclxuXHRcdFx0bmFtZSAgPSBzdGF0ZS50YWdOYW1lIHx8ICdkaXYnLFxyXG5cdFx0XHRjaGlsZCA9IG51bGw7XHJcblxyXG5cdFx0aWYoICEgSHRtbEJsb2NrTmFtZXNbbmFtZV0gKSB7XHJcblx0XHRcdG5hbWUgPSAnZGl2J1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBzdGF0ZS5jaGlsZCApIHtcclxuXHJcblx0XHRcdGlmKCBBcnJheS5pc0FycmF5KHN0YXRlLmNoaWxkKSApIHtcclxuXHRcdFx0XHRjaGlsZCA9IHN0YXRlLmNoaWxkLm1hcCggKGl0ZW0sIGluZGV4KSA9PiBDcmVhdGVUZXh0KGl0ZW0sIGluZGV4KSApXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0Y2hpbGQgPSBDcmVhdGVUZXh0KHN0YXRlLmNoaWxkLCAwKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKCBzdGF0ZS50ZXh0ICkge1xyXG5cclxuXHRcdFx0aWYoIHN0YXRlLmlzSHRtbCApIHtcclxuXHRcdFx0XHRwcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9IHsgX19odG1sOiBTdHJpbmcoc3RhdGUudGV4dCkgfTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRjaGlsZCA9IFN0cmluZyhzdGF0ZS50ZXh0KVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKCBzZWxmLnByb3BzLmNoaWxkcmVuICkge1xyXG5cdFx0XHRjaGlsZCA9IHNlbGYucHJvcHMuY2hpbGRyZW47XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoIG5hbWUsIHByb3BzLCBjaGlsZCApXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0OyJdfQ==
},{"../tools/is-scalar":39,"./proto":10,"react":230}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var re = /([\.$?*|{}\(\)\[\]\\\/\+^])/g;
var pr = ['path', 'domain', 'expires', 'secure', 'max-age'];

var Cookie = {
	set: function set(name, value, options) {
		options = options || {};
		if (!options.path) options.path = '/';

		var expires = options.expires || 3600 * 24 * 31;

		if (typeof expires == "number" && expires) {
			var d = new Date();
			d.setTime(d.getTime() + expires * 1000);
			expires = options.expires = d;
		}

		if (expires && expires.toUTCString) {
			options.expires = expires.toUTCString();
		}

		name += "=" + encodeURIComponent(value);

		pr.forEach(function (val) {
			value = options[val] || false;
			if (value || value === 0) {
				name += "; " + val;
				if (value !== true) {
					name += "=" + value;
				}
			}
		});

		document.cookie = name;
	},
	get: function get(name, defaultValue) {
		var matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(re, '\\$1') + "=([^;]*)"));
		return matches ? decodeURIComponent(matches[1]) : defaultValue;
	}
};

exports.default = Cookie;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvb2tpZS5qcyJdLCJuYW1lcyI6WyJyZSIsInByIiwiQ29va2llIiwic2V0IiwibmFtZSIsInZhbHVlIiwib3B0aW9ucyIsInBhdGgiLCJleHBpcmVzIiwiZCIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsInRvVVRDU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZm9yRWFjaCIsInZhbCIsImRvY3VtZW50IiwiY29va2llIiwiZ2V0IiwiZGVmYXVsdFZhbHVlIiwibWF0Y2hlcyIsIm1hdGNoIiwiUmVnRXhwIiwicmVwbGFjZSIsImRlY29kZVVSSUNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBTUEsS0FBSyw4QkFBWDtBQUNBLElBQU1DLEtBQUssQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixTQUFuQixFQUE4QixRQUE5QixFQUF3QyxTQUF4QyxDQUFYOztBQUVBLElBQU1DLFNBQVM7QUFFZEMsSUFGYyxlQUVWQyxJQUZVLEVBRUpDLEtBRkksRUFFR0MsT0FGSCxFQUdkO0FBQ0NBLFlBQVVBLFdBQVcsRUFBckI7QUFDQSxNQUFJLENBQUNBLFFBQVFDLElBQWIsRUFBbUJELFFBQVFDLElBQVIsR0FBZSxHQUFmOztBQUVuQixNQUFJQyxVQUFVRixRQUFRRSxPQUFSLElBQW1CLE9BQU8sRUFBUCxHQUFZLEVBQTdDOztBQUVBLE1BQUksT0FBT0EsT0FBUCxJQUFrQixRQUFsQixJQUE4QkEsT0FBbEMsRUFBMkM7QUFDMUMsT0FBSUMsSUFBSSxJQUFJQyxJQUFKLEVBQVI7QUFDQUQsS0FBRUUsT0FBRixDQUFVRixFQUFFRyxPQUFGLEtBQWNKLFVBQVUsSUFBbEM7QUFDQUEsYUFBVUYsUUFBUUUsT0FBUixHQUFrQkMsQ0FBNUI7QUFDQTs7QUFFRCxNQUFJRCxXQUFXQSxRQUFRSyxXQUF2QixFQUFvQztBQUNuQ1AsV0FBUUUsT0FBUixHQUFrQkEsUUFBUUssV0FBUixFQUFsQjtBQUNBOztBQUVEVCxVQUFRLE1BQU1VLG1CQUFtQlQsS0FBbkIsQ0FBZDs7QUFFQUosS0FBR2MsT0FBSCxDQUFXLGVBQU87QUFDakJWLFdBQVFDLFFBQVFVLEdBQVIsS0FBZ0IsS0FBeEI7QUFDQSxPQUFJWCxTQUFTQSxVQUFVLENBQXZCLEVBQTBCO0FBQ3pCRCxZQUFRLE9BQU9ZLEdBQWY7QUFDQSxRQUFJWCxVQUFVLElBQWQsRUFBb0I7QUFDbkJELGFBQVEsTUFBTUMsS0FBZDtBQUNBO0FBQ0Q7QUFDRCxHQVJEOztBQVVBWSxXQUFTQyxNQUFULEdBQWtCZCxJQUFsQjtBQUNBLEVBaENhO0FBa0NkZSxJQWxDYyxlQWtDVmYsSUFsQ1UsRUFrQ0pnQixZQWxDSSxFQW1DZDtBQUNDLE1BQUlDLFVBQVVKLFNBQVNDLE1BQVQsQ0FBZ0JJLEtBQWhCLENBQXNCLElBQUlDLE1BQUosQ0FBVyxhQUFhbkIsS0FBS29CLE9BQUwsQ0FBYXhCLEVBQWIsRUFBaUIsTUFBakIsQ0FBYixHQUF3QyxVQUFuRCxDQUF0QixDQUFkO0FBQ0EsU0FBT3FCLFVBQVVJLG1CQUFtQkosUUFBUSxDQUFSLENBQW5CLENBQVYsR0FBMkNELFlBQWxEO0FBQ0E7QUF0Q2EsQ0FBZjs7a0JBeUNlbEIsTSIsImZpbGUiOiJjb29raWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3QgcmUgPSAvKFtcXC4kPyp8e31cXChcXClcXFtcXF1cXFxcXFwvXFwrXl0pL2c7XHJcbmNvbnN0IHByID0gWydwYXRoJywgJ2RvbWFpbicsICdleHBpcmVzJywgJ3NlY3VyZScsICdtYXgtYWdlJ107XHJcblxyXG5jb25zdCBDb29raWUgPSB7XHJcblxyXG5cdHNldChuYW1lLCB2YWx1ZSwgb3B0aW9ucylcclxuXHR7XHJcblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuXHRcdGlmICghb3B0aW9ucy5wYXRoKSBvcHRpb25zLnBhdGggPSAnLyc7XHJcblxyXG5cdFx0bGV0IGV4cGlyZXMgPSBvcHRpb25zLmV4cGlyZXMgfHwgMzYwMCAqIDI0ICogMzE7XHJcblxyXG5cdFx0aWYgKHR5cGVvZiBleHBpcmVzID09IFwibnVtYmVyXCIgJiYgZXhwaXJlcykge1xyXG5cdFx0XHR2YXIgZCA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdGQuc2V0VGltZShkLmdldFRpbWUoKSArIGV4cGlyZXMgKiAxMDAwKTtcclxuXHRcdFx0ZXhwaXJlcyA9IG9wdGlvbnMuZXhwaXJlcyA9IGQ7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGV4cGlyZXMgJiYgZXhwaXJlcy50b1VUQ1N0cmluZykge1xyXG5cdFx0XHRvcHRpb25zLmV4cGlyZXMgPSBleHBpcmVzLnRvVVRDU3RyaW5nKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0bmFtZSArPSBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XHJcblxyXG5cdFx0cHIuZm9yRWFjaCh2YWwgPT4ge1xyXG5cdFx0XHR2YWx1ZSA9IG9wdGlvbnNbdmFsXSB8fCBmYWxzZTtcclxuXHRcdFx0aWYgKHZhbHVlIHx8IHZhbHVlID09PSAwKSB7XHJcblx0XHRcdFx0bmFtZSArPSBcIjsgXCIgKyB2YWw7XHJcblx0XHRcdFx0aWYgKHZhbHVlICE9PSB0cnVlKSB7XHJcblx0XHRcdFx0XHRuYW1lICs9IFwiPVwiICsgdmFsdWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHJcblx0XHRkb2N1bWVudC5jb29raWUgPSBuYW1lO1xyXG5cdH0sXHJcblxyXG5cdGdldChuYW1lLCBkZWZhdWx0VmFsdWUpXHJcblx0e1xyXG5cdFx0bGV0IG1hdGNoZXMgPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cChcIig/Ol58OyApXCIgKyBuYW1lLnJlcGxhY2UocmUsICdcXFxcJDEnKSArIFwiPShbXjtdKilcIikpO1xyXG5cdFx0cmV0dXJuIG1hdGNoZXMgPyBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hlc1sxXSkgOiBkZWZhdWx0VmFsdWU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29va2llOyJdfQ==
},{}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _trigger = require("./trigger");

var _trigger2 = _interopRequireDefault(_trigger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DataState = {};
var DataScalar = {};
var DispatchName = [];

var Scalar = ["number", "string", "boolean"];

function isScalar(value) {
	return value === null || ~Scalar.indexOf(typeof value === "undefined" ? "undefined" : _typeof(value));
}

var Data = {
	set: function set(name, value) {
		if (value === undefined) {
			this.destroy(name, value);
		} else {
			var scalar = isScalar(value);
			if (!this.getIs(name) || !scalar || !DataScalar[name] || value !== DataState[name]) {
				DataState[name] = value;
				DataScalar[name] = scalar;

				if (DispatchName.indexOf(name) < 1) {
					DispatchName.push(name);

					_trigger2.default.dispatch('ChangeValue', {
						get name() {
							return name;
						},
						get value() {
							return DataState[name];
						}
					});

					var index = DispatchName.indexOf(name);
					if (~index) {
						DispatchName.splice(index, 1);
					}
				}
			}
		}

		return this;
	},
	get: function get(name) {
		return DataState[name];
	},
	getOr: function getOr(name) {
		var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		return this.getIs(name) ? DataState[name] : defaultValue;
	},
	destroy: function destroy(name) {
		if (this.getIs(name)) {
			delete DataState[name];
			delete DataScalar[name];
		}

		return this;
	},


	/**
  * @deprecated
  * @param name
  * @returns {boolean}
  */
	check: function check(name) {
		return DataState[name] !== undefined;
	},
	getIs: function getIs(name) {
		return DataState.hasOwnProperty(name);
	},
	then: function then(name, callback) {
		if (this.getIs(name)) {
			_trigger2.default.fake("ChangeValue", { name: name, value: DataState[name] }, callback);
		} else {
			var _func = void 0;
			_func = function func(e) {
				if (e.detail.name === name) {
					_trigger2.default.remove("ChangeValue", _func);
					return callback(e);
				}
			};
			_trigger2.default.add("ChangeValue", _func);
		}

		return this;
	}
};

exports.default = Data;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsiRGF0YVN0YXRlIiwiRGF0YVNjYWxhciIsIkRpc3BhdGNoTmFtZSIsIlNjYWxhciIsImlzU2NhbGFyIiwidmFsdWUiLCJpbmRleE9mIiwiRGF0YSIsInNldCIsIm5hbWUiLCJ1bmRlZmluZWQiLCJkZXN0cm95Iiwic2NhbGFyIiwiZ2V0SXMiLCJwdXNoIiwiZGlzcGF0Y2giLCJpbmRleCIsInNwbGljZSIsImdldCIsImdldE9yIiwiZGVmYXVsdFZhbHVlIiwiY2hlY2siLCJoYXNPd25Qcm9wZXJ0eSIsInRoZW4iLCJjYWxsYmFjayIsImZha2UiLCJmdW5jIiwiZSIsImRldGFpbCIsInJlbW92ZSIsImFkZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7O0FBRUEsSUFBSUEsWUFBWSxFQUFoQjtBQUNBLElBQUlDLGFBQWEsRUFBakI7QUFDQSxJQUFJQyxlQUFlLEVBQW5COztBQUVBLElBQU1DLFNBQVMsQ0FBQyxRQUFELEVBQVcsUUFBWCxFQUFxQixTQUFyQixDQUFmOztBQUVBLFNBQVNDLFFBQVQsQ0FBbUJDLEtBQW5CLEVBQ0E7QUFDQyxRQUFPQSxVQUFVLElBQVYsSUFBa0IsQ0FBRUYsT0FBT0csT0FBUCxRQUF1QkQsS0FBdkIseUNBQXVCQSxLQUF2QixFQUEzQjtBQUNBOztBQUVELElBQU1FLE9BQU87QUFFWkMsSUFGWSxlQUVSQyxJQUZRLEVBRUZKLEtBRkUsRUFHWjtBQUNDLE1BQUlBLFVBQVVLLFNBQWQsRUFBMEI7QUFDekIsUUFBS0MsT0FBTCxDQUFhRixJQUFiLEVBQW1CSixLQUFuQjtBQUNBLEdBRkQsTUFHSztBQUNKLE9BQUlPLFNBQVNSLFNBQVNDLEtBQVQsQ0FBYjtBQUNBLE9BQUksQ0FBQyxLQUFLUSxLQUFMLENBQVdKLElBQVgsQ0FBRCxJQUFxQixDQUFDRyxNQUF0QixJQUFnQyxDQUFDWCxXQUFXUSxJQUFYLENBQWpDLElBQXFESixVQUFVTCxVQUFVUyxJQUFWLENBQW5FLEVBQXFGO0FBQ3BGVCxjQUFVUyxJQUFWLElBQWtCSixLQUFsQjtBQUNBSixlQUFXUSxJQUFYLElBQW1CRyxNQUFuQjs7QUFFQSxRQUFJVixhQUFhSSxPQUFiLENBQXNCRyxJQUF0QixJQUErQixDQUFuQyxFQUF1QztBQUN0Q1Asa0JBQWFZLElBQWIsQ0FBa0JMLElBQWxCOztBQUVBLHVCQUFRTSxRQUFSLENBQWlCLGFBQWpCLEVBQWdDO0FBQy9CLFVBQUlOLElBQUosR0FBVztBQUFFLGNBQU9BLElBQVA7QUFBYSxPQURLO0FBRS9CLFVBQUlKLEtBQUosR0FBWTtBQUFFLGNBQU9MLFVBQVVTLElBQVYsQ0FBUDtBQUF3QjtBQUZQLE1BQWhDOztBQUtBLFNBQUlPLFFBQVFkLGFBQWFJLE9BQWIsQ0FBcUJHLElBQXJCLENBQVo7QUFDQSxTQUFJLENBQUVPLEtBQU4sRUFBYztBQUNiZCxtQkFBYWUsTUFBYixDQUFvQkQsS0FBcEIsRUFBMkIsQ0FBM0I7QUFDQTtBQUNEO0FBQ0Q7QUFDRDs7QUFFRCxTQUFPLElBQVA7QUFDQSxFQTlCVztBQWdDWkUsSUFoQ1ksZUFnQ1JULElBaENRLEVBaUNaO0FBQ0MsU0FBT1QsVUFBVVMsSUFBVixDQUFQO0FBQ0EsRUFuQ1c7QUFxQ1pVLE1BckNZLGlCQXFDTlYsSUFyQ00sRUFzQ1o7QUFBQSxNQURZVyxZQUNaLHVFQUQyQixLQUMzQjs7QUFDQyxTQUFPLEtBQUtQLEtBQUwsQ0FBV0osSUFBWCxJQUFtQlQsVUFBVVMsSUFBVixDQUFuQixHQUFxQ1csWUFBNUM7QUFDQSxFQXhDVztBQTBDWlQsUUExQ1ksbUJBMENKRixJQTFDSSxFQTJDWjtBQUNDLE1BQUksS0FBS0ksS0FBTCxDQUFXSixJQUFYLENBQUosRUFBdUI7QUFDdEIsVUFBT1QsVUFBVVMsSUFBVixDQUFQO0FBQ0EsVUFBT1IsV0FBV1EsSUFBWCxDQUFQO0FBQ0E7O0FBRUQsU0FBTyxJQUFQO0FBQ0EsRUFsRFc7OztBQW9EWjs7Ozs7QUFLQVksTUF6RFksaUJBeUROWixJQXpETSxFQTBEWjtBQUNDLFNBQU9ULFVBQVVTLElBQVYsTUFBb0JDLFNBQTNCO0FBQ0EsRUE1RFc7QUE4RFpHLE1BOURZLGlCQThETkosSUE5RE0sRUErRFo7QUFDQyxTQUFPVCxVQUFVc0IsY0FBVixDQUF5QmIsSUFBekIsQ0FBUDtBQUNBLEVBakVXO0FBbUVaYyxLQW5FWSxnQkFtRU5kLElBbkVNLEVBbUVBZSxRQW5FQSxFQW9FWjtBQUNDLE1BQUksS0FBS1gsS0FBTCxDQUFXSixJQUFYLENBQUosRUFBdUI7QUFDdEIscUJBQVFnQixJQUFSLENBQWEsYUFBYixFQUE0QixFQUFDaEIsTUFBTUEsSUFBUCxFQUFhSixPQUFPTCxVQUFVUyxJQUFWLENBQXBCLEVBQTVCLEVBQWtFZSxRQUFsRTtBQUNBLEdBRkQsTUFHSztBQUNKLE9BQUlFLGNBQUo7QUFDQUEsV0FBTyxpQkFBSztBQUNYLFFBQUdDLEVBQUVDLE1BQUYsQ0FBU25CLElBQVQsS0FBa0JBLElBQXJCLEVBQTJCO0FBQzFCLHVCQUFRb0IsTUFBUixDQUFlLGFBQWYsRUFBOEJILEtBQTlCO0FBQ0EsWUFBT0YsU0FBU0csQ0FBVCxDQUFQO0FBQ0E7QUFDRCxJQUxEO0FBTUEscUJBQVFHLEdBQVIsQ0FBWSxhQUFaLEVBQTJCSixLQUEzQjtBQUNBOztBQUVELFNBQU8sSUFBUDtBQUNBO0FBcEZXLENBQWI7O2tCQXVGZW5CLEkiLCJmaWxlIjoiZGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUcmlnZ2VyIGZyb20gXCIuL3RyaWdnZXJcIjtcclxuXHJcbmxldCBEYXRhU3RhdGUgPSB7fTtcclxubGV0IERhdGFTY2FsYXIgPSB7fTtcclxubGV0IERpc3BhdGNoTmFtZSA9IFtdO1xyXG5cclxuY29uc3QgU2NhbGFyID0gW1wibnVtYmVyXCIsIFwic3RyaW5nXCIsIFwiYm9vbGVhblwiXTtcclxuXHJcbmZ1bmN0aW9uIGlzU2NhbGFyKCB2YWx1ZSApXHJcbntcclxuXHRyZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgfiBTY2FsYXIuaW5kZXhPZiggdHlwZW9mIHZhbHVlIClcclxufVxyXG5cclxuY29uc3QgRGF0YSA9IHtcclxuXHJcblx0c2V0KG5hbWUsIHZhbHVlKVxyXG5cdHtcclxuXHRcdGlmKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHR0aGlzLmRlc3Ryb3kobmFtZSwgdmFsdWUpXHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0bGV0IHNjYWxhciA9IGlzU2NhbGFyKHZhbHVlKTtcclxuXHRcdFx0aWYoICF0aGlzLmdldElzKG5hbWUpIHx8ICFzY2FsYXIgfHwgIURhdGFTY2FsYXJbbmFtZV0gfHwgdmFsdWUgIT09IERhdGFTdGF0ZVtuYW1lXSApIHtcclxuXHRcdFx0XHREYXRhU3RhdGVbbmFtZV0gPSB2YWx1ZTtcclxuXHRcdFx0XHREYXRhU2NhbGFyW25hbWVdID0gc2NhbGFyO1xyXG5cclxuXHRcdFx0XHRpZiggRGlzcGF0Y2hOYW1lLmluZGV4T2YoIG5hbWUgKSA8IDEgKSB7XHJcblx0XHRcdFx0XHREaXNwYXRjaE5hbWUucHVzaChuYW1lKTtcclxuXHJcblx0XHRcdFx0XHRUcmlnZ2VyLmRpc3BhdGNoKCdDaGFuZ2VWYWx1ZScsIHtcclxuXHRcdFx0XHRcdFx0Z2V0IG5hbWUoKSB7IHJldHVybiBuYW1lIH0sXHJcblx0XHRcdFx0XHRcdGdldCB2YWx1ZSgpIHsgcmV0dXJuIERhdGFTdGF0ZVtuYW1lXSB9XHJcblx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRsZXQgaW5kZXggPSBEaXNwYXRjaE5hbWUuaW5kZXhPZihuYW1lKTtcclxuXHRcdFx0XHRcdGlmKCB+IGluZGV4ICkge1xyXG5cdFx0XHRcdFx0XHREaXNwYXRjaE5hbWUuc3BsaWNlKGluZGV4LCAxKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzXHJcblx0fSxcclxuXHJcblx0Z2V0KG5hbWUpXHJcblx0e1xyXG5cdFx0cmV0dXJuIERhdGFTdGF0ZVtuYW1lXVxyXG5cdH0sXHJcblxyXG5cdGdldE9yKG5hbWUsIGRlZmF1bHRWYWx1ZSA9IGZhbHNlKVxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLmdldElzKG5hbWUpID8gRGF0YVN0YXRlW25hbWVdIDogZGVmYXVsdFZhbHVlXHJcblx0fSxcclxuXHJcblx0ZGVzdHJveShuYW1lKVxyXG5cdHtcclxuXHRcdGlmKCB0aGlzLmdldElzKG5hbWUpICkge1xyXG5cdFx0XHRkZWxldGUgRGF0YVN0YXRlW25hbWVdO1xyXG5cdFx0XHRkZWxldGUgRGF0YVNjYWxhcltuYW1lXVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzXHJcblx0fSxcclxuXHJcblx0LyoqXHJcblx0ICogQGRlcHJlY2F0ZWRcclxuXHQgKiBAcGFyYW0gbmFtZVxyXG5cdCAqIEByZXR1cm5zIHtib29sZWFufVxyXG5cdCAqL1xyXG5cdGNoZWNrKG5hbWUpXHJcblx0e1xyXG5cdFx0cmV0dXJuIERhdGFTdGF0ZVtuYW1lXSAhPT0gdW5kZWZpbmVkXHJcblx0fSxcclxuXHJcblx0Z2V0SXMobmFtZSlcclxuXHR7XHJcblx0XHRyZXR1cm4gRGF0YVN0YXRlLmhhc093blByb3BlcnR5KG5hbWUpXHJcblx0fSxcclxuXHJcblx0dGhlbiggbmFtZSwgY2FsbGJhY2sgKVxyXG5cdHtcclxuXHRcdGlmKCB0aGlzLmdldElzKG5hbWUpICkge1xyXG5cdFx0XHRUcmlnZ2VyLmZha2UoXCJDaGFuZ2VWYWx1ZVwiLCB7bmFtZTogbmFtZSwgdmFsdWU6IERhdGFTdGF0ZVtuYW1lXX0sIGNhbGxiYWNrKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdGxldCBmdW5jO1xyXG5cdFx0XHRmdW5jID0gZSA9PiB7XHJcblx0XHRcdFx0aWYoZS5kZXRhaWwubmFtZSA9PT0gbmFtZSkge1xyXG5cdFx0XHRcdFx0VHJpZ2dlci5yZW1vdmUoXCJDaGFuZ2VWYWx1ZVwiLCBmdW5jKTtcclxuXHRcdFx0XHRcdHJldHVybiBjYWxsYmFjayhlKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdFx0VHJpZ2dlci5hZGQoXCJDaGFuZ2VWYWx1ZVwiLCBmdW5jKVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzXHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YTsiXX0=
},{"./trigger":41}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _collection = require("./collection");

var _collection2 = _interopRequireDefault(_collection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reg = /^([+\-?!~:])(.+?)$/;
var regSplit = /\s+/g;

var native = false;
var lastCurrent = void 0;
var lastCurrentIndex = void 0;

if (typeof document !== "undefined") {
	try {
		var e = document.createElement("span"),
		    cl = e.classList || null;

		if (cl) {
			e.className = "a";
			try {
				cl.remove("a");
				cl.add("b");
				native = !cl.contains("a") && cl.contains("b");
			} catch (e) {}
		}
	} catch (er) {}
}

function getName(name) {
	return name === undefined || name === null ? "" : String(name).trim();
}

// no native

function contains(e, name) {
	lastCurrent = e.className ? getName(e.className).split(regSplit) : [];
	lastCurrentIndex = lastCurrent.length ? lastCurrent.indexOf(name) : -1;
	return lastCurrentIndex > -1;
}

function addClass(e, name) {
	lastCurrent.push(name);
	e.className = lastCurrent.join(" ");
}

function removeClass(e) {
	if (lastCurrent.length > 1) {
		lastCurrent.splice(lastCurrentIndex, 1);
		e.className = lastCurrent.join(" ");
	} else {
		e.className = "";
	}
}

// for remap

function CollectionSet(e, name) {
	e.className = name.length == 1 ? name[0] : name.join(" ");
}

function CollectionAdd(e, name) {
	for (var i = 0, length = name.length; i < length; i++) {
		if (native) {
			e.classList.add(name[i]);
		} else if (!contains(e, name[i])) {
			addClass(e, name[i]);
		}
	}
}

function CollectionRemove(e, name) {
	for (var i = 0, length = name.length; i < length; i++) {
		if (native) {
			e.classList.remove(name[i]);
		} else if (contains(e, name[i])) {
			removeClass(e, name[i]);
		}
	}
}

function CollectionToggle(e, name) {
	for (var i = 0, length = name.length; i < length; i++) {
		if (native) {
			e.classList.toggle(name[i]);
		} else if (contains(e, name[i])) {
			removeClass(e, name[i]);
		} else {
			addClass(e, name[i]);
		}
	}
}

/**
 * @return {boolean}
 */
function CollectionContains(e, name) {
	for (var i = 0, length = name.length; i < length; i++) {
		if (!(native ? e.classList.contains(name[i]) : contains(e, name[i]))) return false;
	}
	return true;
}

// map callback

function map(callback, lst, name) {
	var ignoreName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	lst = (0, _collection2.default)(lst, false);
	if (lst) {
		name = getName(name);
		if (name || ignoreName) {
			name = name.split(regSplit);
			for (var i = 0, length = lst.length; i < length; i++) {
				callback(lst[i], name);
			}
		}
	}
}

function mapResult(callback, lst, name, result) {
	lst = (0, _collection2.default)(lst, false);
	if (lst) {
		name = getName(name);
		if (name) {
			name = name.split(regSplit);
			for (var i = 0, length = lst.length; i < length; i++) {
				if (callback(lst[i], name) != result) {
					return false;
				}
			}
			return true;
		}
	}
	return false;
}

exports.default = {
	set: function set(e, name) {
		map(CollectionSet, e, name, true);
		return this;
	},
	add: function add(e, name) {
		map(CollectionAdd, e, name);
		return this;
	},
	remove: function remove(e, name) {
		map(CollectionRemove, e, name);
		return this;
	},
	toggle: function toggle(e, name) {
		map(CollectionToggle, e, name);
		return this;
	},
	has: function has(e, name) {
		var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		var result = mapResult(CollectionContains, e, name, true);
		result && callback && callback(e);
		return result;
	},
	not: function not(e, name) {
		var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		var result = mapResult(CollectionContains, e, name, false);
		result && callback && callback(e);
		return result;
	},
	dispatch: function dispatch(e, value) {
		var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		var m = String(value).match(reg),
		    self = this;
		if (m) {
			value = m[2];
			switch (m[1]) {
				case '+':
					return self.add(e, value);
				case '-':
					return self.remove(e, value);
				case '~':
					return self.toggle(e, value);
				case '!':
					return self.not(e, value, callback);
				case '?':
					return self.has(e, value, callback);
				case ':':
					return self.set(e, value);
			}
		}
		return self;
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./collection":17}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = Collection;

var _isNode = require("./is-node");

var _isNode2 = _interopRequireDefault(_isNode);

var _isBrowser = require("../tools/is-browser");

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isBrowser = (0, _isBrowser2.default)();
var ToString = Object.prototype.toString;

/**
 * @return {boolean}
 */
function IsWindow(element) {
	if (window === element) {
		return true;
	}

	var type = ToString.call(element);
	if (type === "[object Window]" || type === "[object DOMWindow]") {
		return true;
	}

	if ('self' in element) {

		//`'self' in element` is true if
		//the property exists on the object _or_ the prototype
		//`element.hasOwnProperty('self')` is true only if
		//the property exists on the object
		var self = void 0,
		    hasSelf = element.hasOwnProperty('self');

		try {
			if (hasSelf) {
				self = element.self;
			}
			delete element.self;
			if (hasSelf) {
				element.self = self;
			}
		} catch (e) {
			//IE 7&8 throw an error when window.self is deleted
			return true;
		}
	}

	return false;
}

function Collection(element) {
	var isWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	if (isBrowser && element) {

		if ((0, _isNode2.default)(element)) {
			return [element];
		}

		var type = typeof element === "undefined" ? "undefined" : _typeof(element);
		if (type === "string") {
			return document.querySelectorAll(element);
		}

		if (isWindow && type === "object" && IsWindow(element)) {
			return [element];
		}

		if (Array.isArray(element)) {
			return element;
		}

		type = ToString.call(element);
		if (type === '[object HTMLCollection]' || type === '[object NodeList]') {
			return element;
		}
	}

	return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxlY3Rpb24uanMiXSwibmFtZXMiOlsiQ29sbGVjdGlvbiIsImlzQnJvd3NlciIsIlRvU3RyaW5nIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJJc1dpbmRvdyIsImVsZW1lbnQiLCJ3aW5kb3ciLCJ0eXBlIiwiY2FsbCIsInNlbGYiLCJoYXNTZWxmIiwiaGFzT3duUHJvcGVydHkiLCJlIiwiaXNXaW5kb3ciLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImlzQXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQThDd0JBLFU7O0FBOUN4Qjs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQyxZQUFZLDBCQUFsQjtBQUNBLElBQU1DLFdBQVdDLE9BQU9DLFNBQVAsQ0FBaUJDLFFBQWxDOztBQUVBOzs7QUFHQSxTQUFTQyxRQUFULENBQWtCQyxPQUFsQixFQUNBO0FBQ0MsS0FBSUMsV0FBV0QsT0FBZixFQUF5QjtBQUN4QixTQUFPLElBQVA7QUFDQTs7QUFFRCxLQUFJRSxPQUFPUCxTQUFTUSxJQUFULENBQWNILE9BQWQsQ0FBWDtBQUNBLEtBQUlFLFNBQVMsaUJBQVQsSUFBOEJBLFNBQVMsb0JBQTNDLEVBQWtFO0FBQ2pFLFNBQU8sSUFBUDtBQUNBOztBQUVELEtBQUksVUFBVUYsT0FBZCxFQUF1Qjs7QUFFdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFJSSxhQUFKO0FBQUEsTUFBVUMsVUFBVUwsUUFBUU0sY0FBUixDQUF1QixNQUF2QixDQUFwQjs7QUFFQSxNQUFJO0FBQ0gsT0FBR0QsT0FBSCxFQUFZO0FBQ1hELFdBQU9KLFFBQVFJLElBQWY7QUFDQTtBQUNELFVBQU9KLFFBQVFJLElBQWY7QUFDQSxPQUFJQyxPQUFKLEVBQWE7QUFDWkwsWUFBUUksSUFBUixHQUFlQSxJQUFmO0FBQ0E7QUFDRCxHQVJELENBU0EsT0FBT0csQ0FBUCxFQUFVO0FBQ1Q7QUFDQSxVQUFPLElBQVA7QUFDQTtBQUNEOztBQUVELFFBQU8sS0FBUDtBQUNBOztBQUVjLFNBQVNkLFVBQVQsQ0FBb0JPLE9BQXBCLEVBQ2Y7QUFBQSxLQUQ0Q1EsUUFDNUMsdUVBRHVELElBQ3ZEOztBQUNDLEtBQUlkLGFBQWFNLE9BQWpCLEVBQTJCOztBQUUxQixNQUFJLHNCQUFPQSxPQUFQLENBQUosRUFBc0I7QUFDckIsVUFBTyxDQUFDQSxPQUFELENBQVA7QUFDQTs7QUFFRCxNQUFJRSxjQUFjRixPQUFkLHlDQUFjQSxPQUFkLENBQUo7QUFDQSxNQUFJRSxTQUFTLFFBQWIsRUFBd0I7QUFDdkIsVUFBT08sU0FBU0MsZ0JBQVQsQ0FBMEJWLE9BQTFCLENBQVA7QUFDQTs7QUFFRCxNQUFJUSxZQUFZTixTQUFTLFFBQXJCLElBQWlDSCxTQUFTQyxPQUFULENBQXJDLEVBQXlEO0FBQ3hELFVBQU8sQ0FBQ0EsT0FBRCxDQUFQO0FBQ0E7O0FBRUQsTUFBSVcsTUFBTUMsT0FBTixDQUFjWixPQUFkLENBQUosRUFBNkI7QUFDNUIsVUFBT0EsT0FBUDtBQUNBOztBQUVERSxTQUFPUCxTQUFTUSxJQUFULENBQWNILE9BQWQsQ0FBUDtBQUNBLE1BQUlFLFNBQVMseUJBQVQsSUFBc0NBLFNBQVMsbUJBQW5ELEVBQXlFO0FBQ3hFLFVBQU9GLE9BQVA7QUFDQTtBQUNEOztBQUVELFFBQU8sSUFBUDtBQUNBIiwiZmlsZSI6ImNvbGxlY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSXNOb2RlIGZyb20gXCIuL2lzLW5vZGVcIjtcclxuaW1wb3J0IElzQnJvd3NlciBmcm9tIFwiLi4vdG9vbHMvaXMtYnJvd3NlclwiO1xyXG5cclxuY29uc3QgaXNCcm93c2VyID0gSXNCcm93c2VyKCk7XHJcbmNvbnN0IFRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcclxuXHJcbi8qKlxyXG4gKiBAcmV0dXJuIHtib29sZWFufVxyXG4gKi9cclxuZnVuY3Rpb24gSXNXaW5kb3coZWxlbWVudClcclxue1xyXG5cdGlmKCB3aW5kb3cgPT09IGVsZW1lbnQgKSB7XHJcblx0XHRyZXR1cm4gdHJ1ZVxyXG5cdH1cclxuXHJcblx0bGV0IHR5cGUgPSBUb1N0cmluZy5jYWxsKGVsZW1lbnQpO1xyXG5cdGlmKCB0eXBlID09PSBcIltvYmplY3QgV2luZG93XVwiIHx8IHR5cGUgPT09IFwiW29iamVjdCBET01XaW5kb3ddXCIgKSB7XHJcblx0XHRyZXR1cm4gdHJ1ZVxyXG5cdH1cclxuXHJcblx0aWYgKCdzZWxmJyBpbiBlbGVtZW50KSB7XHJcblxyXG5cdFx0Ly9gJ3NlbGYnIGluIGVsZW1lbnRgIGlzIHRydWUgaWZcclxuXHRcdC8vdGhlIHByb3BlcnR5IGV4aXN0cyBvbiB0aGUgb2JqZWN0IF9vcl8gdGhlIHByb3RvdHlwZVxyXG5cdFx0Ly9gZWxlbWVudC5oYXNPd25Qcm9wZXJ0eSgnc2VsZicpYCBpcyB0cnVlIG9ubHkgaWZcclxuXHRcdC8vdGhlIHByb3BlcnR5IGV4aXN0cyBvbiB0aGUgb2JqZWN0XHJcblx0XHRsZXQgc2VsZiwgaGFzU2VsZiA9IGVsZW1lbnQuaGFzT3duUHJvcGVydHkoJ3NlbGYnKTtcclxuXHJcblx0XHR0cnkge1xyXG5cdFx0XHRpZihoYXNTZWxmKSB7XHJcblx0XHRcdFx0c2VsZiA9IGVsZW1lbnQuc2VsZjtcclxuXHRcdFx0fVxyXG5cdFx0XHRkZWxldGUgZWxlbWVudC5zZWxmO1xyXG5cdFx0XHRpZiAoaGFzU2VsZikge1xyXG5cdFx0XHRcdGVsZW1lbnQuc2VsZiA9IHNlbGY7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGNhdGNoIChlKSB7XHJcblx0XHRcdC8vSUUgNyY4IHRocm93IGFuIGVycm9yIHdoZW4gd2luZG93LnNlbGYgaXMgZGVsZXRlZFxyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBmYWxzZVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2xsZWN0aW9uKGVsZW1lbnQsIGlzV2luZG93ID0gdHJ1ZSlcclxue1xyXG5cdGlmKCBpc0Jyb3dzZXIgJiYgZWxlbWVudCApIHtcclxuXHJcblx0XHRpZiggSXNOb2RlKGVsZW1lbnQpICkge1xyXG5cdFx0XHRyZXR1cm4gW2VsZW1lbnRdXHJcblx0XHR9XHJcblxyXG5cdFx0bGV0IHR5cGUgPSB0eXBlb2YgZWxlbWVudDtcclxuXHRcdGlmKCB0eXBlID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRyZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtZW50KVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBpc1dpbmRvdyAmJiB0eXBlID09PSBcIm9iamVjdFwiICYmIElzV2luZG93KGVsZW1lbnQpICkge1xyXG5cdFx0XHRyZXR1cm4gW2VsZW1lbnRdXHJcblx0XHR9XHJcblxyXG5cdFx0aWYoIEFycmF5LmlzQXJyYXkoZWxlbWVudCkgKSB7XHJcblx0XHRcdHJldHVybiBlbGVtZW50XHJcblx0XHR9XHJcblxyXG5cdFx0dHlwZSA9IFRvU3RyaW5nLmNhbGwoZWxlbWVudCk7XHJcblx0XHRpZiggdHlwZSA9PT0gJ1tvYmplY3QgSFRNTENvbGxlY3Rpb25dJyB8fCB0eXBlID09PSAnW29iamVjdCBOb2RlTGlzdF0nICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbWVudFxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIG51bGxcclxufVxyXG4iXX0=
},{"../tools/is-browser":36,"./is-node":21}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _isNode = require("./is-node");

var _isNode2 = _interopRequireDefault(_isNode);

var _event = require("./event");

var _collection = require("./collection");

var _collection2 = _interopRequireDefault(_collection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var regClassId = /(#|\.)([^#.]+)/g;
var cssNumber = {};

'animationIterationCount,columnCount,fillOpacity,flexGrow,flexShrink,fontWeight,lineHeight,opacity,order,orphans,widows,zIndex,zoom'.split(',').forEach(function (n) {
	cssNumber[n] = true;
});

var Element = {
	byId: function byId(id) {
		return document.getElementById(id);
	},
	byQueryOne: function byQueryOne(query) {
		return document.querySelector(query);
	},
	byQuery: function byQuery(query) {
		return document.querySelectorAll(query);
	},
	byClassName: function byClassName(name) {
		return document.getElementsByClassName(name);
	},
	byTag: function byTag(name) {
		return document.getElementsByTagName(name);
	},
	byName: function byName(name) {
		return document.getElementsByName(name);
	},
	create: function create(props) {
		props = props || {};

		if (typeof props === "string") {
			props = {
				name: props
			};
		}

		var classes = [];
		var name = (props.name || 'div').replace(regClassId, function (m, a, b) {
			if (a == '#') props.id = b;else classes.push(b);return '';
		});
		var elm = props.nameSpace ? document.createElementNS(props.nameSpace, name) : document.createElement(name);
		var keys = [],
		    value = void 0;
		var attributes = props.attrs || 0;
		var properties = props.props || 0;
		var events = props.events || 0;
		var data = props.data || 0;

		// class name
		if (props.className) {
			classes.push(props.className);
		}
		if (classes.length) {
			elm.className = classes.join(" ");
		}

		if (props.id) {
			elm.setAttribute('id', props.id);
		}

		if (properties) {
			keys = Object.keys(properties);
			keys.forEach(function (name) {
				elm[name] = properties[name];
			});
		}

		if (attributes) {
			keys = Object.keys(attributes);
			keys.forEach(function (name) {
				elm.setAttribute(name, attributes[name] || '');
			});
		}

		if (data) {
			keys = Object.keys(data);
			keys.forEach(function (name) {
				value = data[name];
				if (value !== null && value !== undefined) {
					if ((typeof value === "undefined" ? "undefined" : _typeof(value)) == "object") {
						try {
							value = JSON.stringify(value);
						} catch (e) {
							value = '{}';
						}
					}
					elm.dataset[name] = value;
				}
			});
		}

		if (events) {
			keys = Object.keys(events);
			keys.forEach(function (name) {
				(0, _event.Add)(elm, name, events[name]);
			});
		}

		if (props.style) {
			this.css(elm, props.style);
		}

		if (props.parent !== undefined && props.parent.nodeType) {
			var parent = props.parent;
			if (!props.prepend || !parent.firstChild) {
				parent.appendChild(elm);
			} else {
				parent.insertBefore(elm, parent.firstChild);
			}
		}

		if (props.text) {
			elm.appendChild(document.createTextNode(String(props.text)));
		} else if (props.html) {
			try {
				elm.innerHTML = String(props.html);
			} catch (e) {}
		} else if (props.children && Array.isArray(props.children)) {
			props.children.forEach(function (child) {
				if (!(0, _isNode2.default)(child)) {
					var tof = typeof child === "undefined" ? "undefined" : _typeof(child);
					if (tof === 'string') child = document.createTextNode(child);else if (tof === 'object') child = Element.create(child);else if (tof === 'function') {
						child = child();
						if (!(0, _isNode2.default)(child)) {
							return;
						}
					} else return;
				}
				elm.appendChild(child);
			});
		}

		return elm;
	},
	css: function css(element, props) {
		element = (0, _collection2.default)(element);
		if (element) {
			var i = void 0,
			    elem = void 0,
			    styles = [];

			for (i = 0; i < element.length; i++) {
				if ((elem = element[i]) && elem.nodeType !== 3 && elem.nodeType !== 8 && elem.style) {
					styles[styles.length] = elem.style;
				}
			}

			if (styles.length) {
				for (var n = 0, keys = Object.keys(props), name, value, keysLength = keys.length, stylesLength = styles.length; n < keysLength; n++) {
					name = keys[n];
					value = props[name];
					value += typeof value === "number" && !cssNumber[name] ? 'px' : '';

					for (i = 0; i < stylesLength; i++) {
						styles[i][name] = value;
					}
				}
			}
		}
	}
};

exports.default = Element;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVsZW1lbnQuanMiXSwibmFtZXMiOlsicmVnQ2xhc3NJZCIsImNzc051bWJlciIsInNwbGl0IiwiZm9yRWFjaCIsIm4iLCJFbGVtZW50IiwiYnlJZCIsImlkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImJ5UXVlcnlPbmUiLCJxdWVyeSIsInF1ZXJ5U2VsZWN0b3IiLCJieVF1ZXJ5IiwicXVlcnlTZWxlY3RvckFsbCIsImJ5Q2xhc3NOYW1lIiwibmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJieVRhZyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYnlOYW1lIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJjcmVhdGUiLCJwcm9wcyIsImNsYXNzZXMiLCJyZXBsYWNlIiwibSIsImEiLCJiIiwicHVzaCIsImVsbSIsIm5hbWVTcGFjZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZUVsZW1lbnQiLCJrZXlzIiwidmFsdWUiLCJhdHRyaWJ1dGVzIiwiYXR0cnMiLCJwcm9wZXJ0aWVzIiwiZXZlbnRzIiwiZGF0YSIsImNsYXNzTmFtZSIsImxlbmd0aCIsImpvaW4iLCJzZXRBdHRyaWJ1dGUiLCJPYmplY3QiLCJ1bmRlZmluZWQiLCJKU09OIiwic3RyaW5naWZ5IiwiZSIsImRhdGFzZXQiLCJzdHlsZSIsImNzcyIsInBhcmVudCIsIm5vZGVUeXBlIiwicHJlcGVuZCIsImZpcnN0Q2hpbGQiLCJhcHBlbmRDaGlsZCIsImluc2VydEJlZm9yZSIsInRleHQiLCJjcmVhdGVUZXh0Tm9kZSIsIlN0cmluZyIsImh0bWwiLCJpbm5lckhUTUwiLCJjaGlsZHJlbiIsIkFycmF5IiwiaXNBcnJheSIsImNoaWxkIiwidG9mIiwiZWxlbWVudCIsImkiLCJlbGVtIiwic3R5bGVzIiwia2V5c0xlbmd0aCIsInN0eWxlc0xlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxhQUFhLGlCQUFuQjtBQUNBLElBQUlDLFlBQVksRUFBaEI7O0FBRUMsb0lBQUQsQ0FBdUlDLEtBQXZJLENBQTZJLEdBQTdJLEVBQWtKQyxPQUFsSixDQUEwSixhQUFLO0FBQUVGLFdBQVVHLENBQVYsSUFBZSxJQUFmO0FBQXFCLENBQXRMOztBQUVBLElBQU1DLFVBQVU7QUFFZkMsS0FGZSxnQkFFVEMsRUFGUyxFQUdmO0FBQ0MsU0FBT0MsU0FBU0MsY0FBVCxDQUF5QkYsRUFBekIsQ0FBUDtBQUNBLEVBTGM7QUFPZkcsV0FQZSxzQkFPSEMsS0FQRyxFQVFmO0FBQ0MsU0FBT0gsU0FBU0ksYUFBVCxDQUF3QkQsS0FBeEIsQ0FBUDtBQUNBLEVBVmM7QUFZZkUsUUFaZSxtQkFZTkYsS0FaTSxFQWFmO0FBQ0MsU0FBT0gsU0FBU00sZ0JBQVQsQ0FBMkJILEtBQTNCLENBQVA7QUFDQSxFQWZjO0FBaUJmSSxZQWpCZSx1QkFpQkZDLElBakJFLEVBa0JmO0FBQ0MsU0FBT1IsU0FBU1Msc0JBQVQsQ0FBaUNELElBQWpDLENBQVA7QUFDQSxFQXBCYztBQXNCZkUsTUF0QmUsaUJBc0JSRixJQXRCUSxFQXVCZjtBQUNDLFNBQU9SLFNBQVNXLG9CQUFULENBQStCSCxJQUEvQixDQUFQO0FBQ0EsRUF6QmM7QUEyQmZJLE9BM0JlLGtCQTJCUEosSUEzQk8sRUE0QmY7QUFDQyxTQUFPUixTQUFTYSxpQkFBVCxDQUE0QkwsSUFBNUIsQ0FBUDtBQUNBLEVBOUJjO0FBZ0NmTSxPQWhDZSxrQkFnQ1BDLEtBaENPLEVBaUNmO0FBQ0NBLFVBQVFBLFNBQVMsRUFBakI7O0FBRUEsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQWdDO0FBQy9CQSxXQUFRO0FBQ1BQLFVBQU1PO0FBREMsSUFBUjtBQUdBOztBQUVELE1BQUlDLFVBQVUsRUFBZDtBQUNBLE1BQUlSLE9BQU8sQ0FBQ08sTUFBTVAsSUFBTixJQUFjLEtBQWYsRUFBc0JTLE9BQXRCLENBQThCekIsVUFBOUIsRUFBMEMsVUFBQzBCLENBQUQsRUFBSUMsQ0FBSixFQUFPQyxDQUFQLEVBQWE7QUFBRSxPQUFJRCxLQUFLLEdBQVQsRUFBZUosTUFBTWhCLEVBQU4sR0FBV3FCLENBQVgsQ0FBZixLQUFrQ0osUUFBUUssSUFBUixDQUFhRCxDQUFiLEVBQWlCLE9BQU8sRUFBUDtBQUFXLEdBQXZILENBQVg7QUFDQSxNQUFJRSxNQUFNUCxNQUFNUSxTQUFOLEdBQWtCdkIsU0FBU3dCLGVBQVQsQ0FBeUJULE1BQU1RLFNBQS9CLEVBQTBDZixJQUExQyxDQUFsQixHQUFvRVIsU0FBU3lCLGFBQVQsQ0FBdUJqQixJQUF2QixDQUE5RTtBQUNBLE1BQUlrQixPQUFPLEVBQVg7QUFBQSxNQUFlQyxjQUFmO0FBQ0EsTUFBSUMsYUFBYWIsTUFBTWMsS0FBTixJQUFlLENBQWhDO0FBQ0EsTUFBSUMsYUFBYWYsTUFBTUEsS0FBTixJQUFlLENBQWhDO0FBQ0EsTUFBSWdCLFNBQVNoQixNQUFNZ0IsTUFBTixJQUFnQixDQUE3QjtBQUNBLE1BQUlDLE9BQU9qQixNQUFNaUIsSUFBTixJQUFjLENBQXpCOztBQUVBO0FBQ0EsTUFBSWpCLE1BQU1rQixTQUFWLEVBQXNCO0FBQ3JCakIsV0FBUUssSUFBUixDQUFhTixNQUFNa0IsU0FBbkI7QUFDQTtBQUNELE1BQUlqQixRQUFRa0IsTUFBWixFQUFxQjtBQUNwQlosT0FBSVcsU0FBSixHQUFnQmpCLFFBQVFtQixJQUFSLENBQWEsR0FBYixDQUFoQjtBQUNBOztBQUVELE1BQUlwQixNQUFNaEIsRUFBVixFQUFlO0FBQ2R1QixPQUFJYyxZQUFKLENBQWlCLElBQWpCLEVBQXVCckIsTUFBTWhCLEVBQTdCO0FBQ0E7O0FBRUQsTUFBSStCLFVBQUosRUFBaUI7QUFDaEJKLFVBQU9XLE9BQU9YLElBQVAsQ0FBWUksVUFBWixDQUFQO0FBQ0FKLFFBQUsvQixPQUFMLENBQWEsZ0JBQVE7QUFDcEIyQixRQUFJZCxJQUFKLElBQVlzQixXQUFXdEIsSUFBWCxDQUFaO0FBQ0EsSUFGRDtBQUdBOztBQUVELE1BQUlvQixVQUFKLEVBQWlCO0FBQ2hCRixVQUFPVyxPQUFPWCxJQUFQLENBQVlFLFVBQVosQ0FBUDtBQUNBRixRQUFLL0IsT0FBTCxDQUFhLGdCQUFRO0FBQ3BCMkIsUUFBSWMsWUFBSixDQUFrQjVCLElBQWxCLEVBQXdCb0IsV0FBV3BCLElBQVgsS0FBb0IsRUFBNUM7QUFDQSxJQUZEO0FBR0E7O0FBRUQsTUFBSXdCLElBQUosRUFBVztBQUNWTixVQUFPVyxPQUFPWCxJQUFQLENBQVlNLElBQVosQ0FBUDtBQUNBTixRQUFLL0IsT0FBTCxDQUFhLGdCQUFRO0FBQ3BCZ0MsWUFBUUssS0FBS3hCLElBQUwsQ0FBUjtBQUNBLFFBQUltQixVQUFVLElBQVYsSUFBa0JBLFVBQVVXLFNBQWhDLEVBQTRDO0FBQzNDLFNBQUksUUFBT1gsS0FBUCx5Q0FBT0EsS0FBUCxNQUFnQixRQUFwQixFQUErQjtBQUM5QixVQUFJO0FBQUVBLGVBQVFZLEtBQUtDLFNBQUwsQ0FBZWIsS0FBZixDQUFSO0FBQStCLE9BQXJDLENBQ0EsT0FBTWMsQ0FBTixFQUFTO0FBQUVkLGVBQVEsSUFBUjtBQUFjO0FBQ3pCO0FBQ0RMLFNBQUlvQixPQUFKLENBQVlsQyxJQUFaLElBQW9CbUIsS0FBcEI7QUFDQTtBQUNELElBVEQ7QUFVQTs7QUFFRCxNQUFJSSxNQUFKLEVBQWE7QUFDWkwsVUFBT1csT0FBT1gsSUFBUCxDQUFZSyxNQUFaLENBQVA7QUFDQUwsUUFBSy9CLE9BQUwsQ0FBYSxVQUFDYSxJQUFELEVBQVU7QUFDdEIsb0JBQUtjLEdBQUwsRUFBVWQsSUFBVixFQUFnQnVCLE9BQU92QixJQUFQLENBQWhCO0FBQ0EsSUFGRDtBQUdBOztBQUVELE1BQUlPLE1BQU00QixLQUFWLEVBQWtCO0FBQ2pCLFFBQUtDLEdBQUwsQ0FBVXRCLEdBQVYsRUFBZVAsTUFBTTRCLEtBQXJCO0FBQ0E7O0FBRUQsTUFBSTVCLE1BQU04QixNQUFOLEtBQWlCUCxTQUFqQixJQUE4QnZCLE1BQU04QixNQUFOLENBQWFDLFFBQS9DLEVBQTBEO0FBQ3pELE9BQUlELFNBQVM5QixNQUFNOEIsTUFBbkI7QUFDQSxPQUFJLENBQUM5QixNQUFNZ0MsT0FBUCxJQUFrQixDQUFDRixPQUFPRyxVQUE5QixFQUEyQztBQUMxQ0gsV0FBT0ksV0FBUCxDQUFtQjNCLEdBQW5CO0FBQ0EsSUFGRCxNQUdLO0FBQ0p1QixXQUFPSyxZQUFQLENBQW9CNUIsR0FBcEIsRUFBeUJ1QixPQUFPRyxVQUFoQztBQUNBO0FBQ0Q7O0FBRUQsTUFBSWpDLE1BQU1vQyxJQUFWLEVBQWlCO0FBQ2hCN0IsT0FBSTJCLFdBQUosQ0FDQ2pELFNBQVNvRCxjQUFULENBQXdCQyxPQUFPdEMsTUFBTW9DLElBQWIsQ0FBeEIsQ0FERDtBQUdBLEdBSkQsTUFLSyxJQUFJcEMsTUFBTXVDLElBQVYsRUFBaUI7QUFDckIsT0FBSTtBQUNIaEMsUUFBSWlDLFNBQUosR0FBZ0JGLE9BQU90QyxNQUFNdUMsSUFBYixDQUFoQjtBQUNBLElBRkQsQ0FHQSxPQUFNYixDQUFOLEVBQVMsQ0FBRTtBQUNYLEdBTEksTUFNQSxJQUFJMUIsTUFBTXlDLFFBQU4sSUFBa0JDLE1BQU1DLE9BQU4sQ0FBYzNDLE1BQU15QyxRQUFwQixDQUF0QixFQUFzRDtBQUMxRHpDLFNBQU15QyxRQUFOLENBQWU3RCxPQUFmLENBQXVCLGlCQUFTO0FBQy9CLFFBQUksQ0FBQyxzQkFBT2dFLEtBQVAsQ0FBTCxFQUFxQjtBQUNwQixTQUFJQyxhQUFhRCxLQUFiLHlDQUFhQSxLQUFiLENBQUo7QUFDQSxTQUFJQyxRQUFRLFFBQVosRUFBdUJELFFBQVEzRCxTQUFTb0QsY0FBVCxDQUF3Qk8sS0FBeEIsQ0FBUixDQUF2QixLQUNLLElBQUlDLFFBQVEsUUFBWixFQUF1QkQsUUFBUTlELFFBQVFpQixNQUFSLENBQWU2QyxLQUFmLENBQVIsQ0FBdkIsS0FDQSxJQUFJQyxRQUFRLFVBQVosRUFBeUI7QUFDN0JELGNBQVFBLE9BQVI7QUFDQSxVQUFJLENBQUMsc0JBQU9BLEtBQVAsQ0FBTCxFQUFxQjtBQUNwQjtBQUNBO0FBQ0QsTUFMSSxNQU1BO0FBQ0w7QUFDRHJDLFFBQUkyQixXQUFKLENBQWdCVSxLQUFoQjtBQUNBLElBZEQ7QUFlQTs7QUFFRCxTQUFPckMsR0FBUDtBQUNBLEVBOUljO0FBZ0pmc0IsSUFoSmUsZUFnSlhpQixPQWhKVyxFQWdKRjlDLEtBaEpFLEVBaUpmO0FBQ0M4QyxZQUFVLDBCQUFXQSxPQUFYLENBQVY7QUFDQSxNQUFJQSxPQUFKLEVBQWM7QUFDYixPQUFJQyxVQUFKO0FBQUEsT0FBT0MsYUFBUDtBQUFBLE9BQWFDLFNBQVMsRUFBdEI7O0FBRUEsUUFBS0YsSUFBSSxDQUFULEVBQVlBLElBQUlELFFBQVEzQixNQUF4QixFQUFnQzRCLEdBQWhDLEVBQXNDO0FBQ3JDLFFBQUksQ0FBQ0MsT0FBT0YsUUFBUUMsQ0FBUixDQUFSLEtBQXVCQyxLQUFLakIsUUFBTCxLQUFrQixDQUF6QyxJQUE4Q2lCLEtBQUtqQixRQUFMLEtBQWtCLENBQWhFLElBQXFFaUIsS0FBS3BCLEtBQTlFLEVBQXNGO0FBQ3JGcUIsWUFBT0EsT0FBTzlCLE1BQWQsSUFBd0I2QixLQUFLcEIsS0FBN0I7QUFDQTtBQUNEOztBQUVELE9BQUlxQixPQUFPOUIsTUFBWCxFQUFvQjtBQUNuQixTQUFLLElBQUl0QyxJQUFJLENBQVIsRUFBVzhCLE9BQU9XLE9BQU9YLElBQVAsQ0FBWVgsS0FBWixDQUFsQixFQUFzQ1AsSUFBdEMsRUFBNENtQixLQUE1QyxFQUFtRHNDLGFBQWF2QyxLQUFLUSxNQUFyRSxFQUE2RWdDLGVBQWVGLE9BQU85QixNQUF4RyxFQUFnSHRDLElBQUlxRSxVQUFwSCxFQUFnSXJFLEdBQWhJLEVBQXNJO0FBQ3JJWSxZQUFTa0IsS0FBSzlCLENBQUwsQ0FBVDtBQUNBK0IsYUFBU1osTUFBTVAsSUFBTixDQUFUO0FBQ0FtQixjQUFTLE9BQU9BLEtBQVAsS0FBaUIsUUFBakIsSUFBNkIsQ0FBQ2xDLFVBQVVlLElBQVYsQ0FBOUIsR0FBZ0QsSUFBaEQsR0FBdUQsRUFBaEU7O0FBRUEsVUFBS3NELElBQUksQ0FBVCxFQUFZQSxJQUFJSSxZQUFoQixFQUE4QkosR0FBOUIsRUFBb0M7QUFDbkNFLGFBQU9GLENBQVAsRUFBVXRELElBQVYsSUFBa0JtQixLQUFsQjtBQUNBO0FBQ0Q7QUFDRDtBQUNEO0FBQ0Q7QUF4S2MsQ0FBaEI7O2tCQTJLZTlCLE8iLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJc05vZGUgZnJvbSBcIi4vaXMtbm9kZVwiO1xyXG5pbXBvcnQgeyBBZGQgfSBmcm9tIFwiLi9ldmVudFwiO1xyXG5pbXBvcnQgQ29sbGVjdGlvbiBmcm9tIFwiLi9jb2xsZWN0aW9uXCI7XHJcblxyXG5jb25zdCByZWdDbGFzc0lkID0gLygjfFxcLikoW14jLl0rKS9nO1xyXG5sZXQgY3NzTnVtYmVyID0ge307XHJcblxyXG4oJ2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50LGNvbHVtbkNvdW50LGZpbGxPcGFjaXR5LGZsZXhHcm93LGZsZXhTaHJpbmssZm9udFdlaWdodCxsaW5lSGVpZ2h0LG9wYWNpdHksb3JkZXIsb3JwaGFucyx3aWRvd3MsekluZGV4LHpvb20nKS5zcGxpdCgnLCcpLmZvckVhY2gobiA9PiB7IGNzc051bWJlcltuXSA9IHRydWUgfSk7XHJcblxyXG5jb25zdCBFbGVtZW50ID0ge1xyXG5cclxuXHRieUlkKCBpZCApXHJcblx0e1xyXG5cdFx0cmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBpZCApXHJcblx0fSxcclxuXHJcblx0YnlRdWVyeU9uZSggcXVlcnkgKVxyXG5cdHtcclxuXHRcdHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCBxdWVyeSApXHJcblx0fSxcclxuXHJcblx0YnlRdWVyeSggcXVlcnkgKVxyXG5cdHtcclxuXHRcdHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCBxdWVyeSApXHJcblx0fSxcclxuXHJcblx0YnlDbGFzc05hbWUoIG5hbWUgKVxyXG5cdHtcclxuXHRcdHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBuYW1lIClcclxuXHR9LFxyXG5cclxuXHRieVRhZyggbmFtZSApXHJcblx0e1xyXG5cdFx0cmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBuYW1lIClcclxuXHR9LFxyXG5cclxuXHRieU5hbWUoIG5hbWUgKVxyXG5cdHtcclxuXHRcdHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSggbmFtZSApXHJcblx0fSxcclxuXHJcblx0Y3JlYXRlKCBwcm9wcyApXHJcblx0e1xyXG5cdFx0cHJvcHMgPSBwcm9wcyB8fCB7fTtcclxuXHJcblx0XHRpZiggdHlwZW9mIHByb3BzID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRwcm9wcyA9IHtcclxuXHRcdFx0XHRuYW1lOiBwcm9wc1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0bGV0IGNsYXNzZXMgPSBbXTtcclxuXHRcdGxldCBuYW1lID0gKHByb3BzLm5hbWUgfHwgJ2RpdicpLnJlcGxhY2UocmVnQ2xhc3NJZCwgKG0sIGEsIGIpID0+IHsgaWYoIGEgPT0gJyMnICkgcHJvcHMuaWQgPSBiOyBlbHNlIGNsYXNzZXMucHVzaChiKTsgcmV0dXJuICcnIH0pO1xyXG5cdFx0bGV0IGVsbSA9IHByb3BzLm5hbWVTcGFjZSA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhwcm9wcy5uYW1lU3BhY2UsIG5hbWUpIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcclxuXHRcdGxldCBrZXlzID0gW10sIHZhbHVlO1xyXG5cdFx0bGV0IGF0dHJpYnV0ZXMgPSBwcm9wcy5hdHRycyB8fCAwO1xyXG5cdFx0bGV0IHByb3BlcnRpZXMgPSBwcm9wcy5wcm9wcyB8fCAwO1xyXG5cdFx0bGV0IGV2ZW50cyA9IHByb3BzLmV2ZW50cyB8fCAwO1xyXG5cdFx0bGV0IGRhdGEgPSBwcm9wcy5kYXRhIHx8IDA7XHJcblxyXG5cdFx0Ly8gY2xhc3MgbmFtZVxyXG5cdFx0aWYoIHByb3BzLmNsYXNzTmFtZSApIHtcclxuXHRcdFx0Y2xhc3Nlcy5wdXNoKHByb3BzLmNsYXNzTmFtZSk7XHJcblx0XHR9XHJcblx0XHRpZiggY2xhc3Nlcy5sZW5ndGggKSB7XHJcblx0XHRcdGVsbS5jbGFzc05hbWUgPSBjbGFzc2VzLmpvaW4oXCIgXCIpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBwcm9wcy5pZCApIHtcclxuXHRcdFx0ZWxtLnNldEF0dHJpYnV0ZSgnaWQnLCBwcm9wcy5pZClcclxuXHRcdH1cclxuXHJcblx0XHRpZiggcHJvcGVydGllcyApIHtcclxuXHRcdFx0a2V5cyA9IE9iamVjdC5rZXlzKHByb3BlcnRpZXMpO1xyXG5cdFx0XHRrZXlzLmZvckVhY2gobmFtZSA9PiB7XHJcblx0XHRcdFx0ZWxtW25hbWVdID0gcHJvcGVydGllc1tuYW1lXVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBhdHRyaWJ1dGVzICkge1xyXG5cdFx0XHRrZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XHJcblx0XHRcdGtleXMuZm9yRWFjaChuYW1lID0+IHtcclxuXHRcdFx0XHRlbG0uc2V0QXR0cmlidXRlKCBuYW1lLCBhdHRyaWJ1dGVzW25hbWVdIHx8ICcnIClcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHJcblx0XHRpZiggZGF0YSApIHtcclxuXHRcdFx0a2V5cyA9IE9iamVjdC5rZXlzKGRhdGEpO1xyXG5cdFx0XHRrZXlzLmZvckVhY2gobmFtZSA9PiB7XHJcblx0XHRcdFx0dmFsdWUgPSBkYXRhW25hbWVdO1xyXG5cdFx0XHRcdGlmKCB2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdFx0aWYoIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICkge1xyXG5cdFx0XHRcdFx0XHR0cnkgeyB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKSB9XHJcblx0XHRcdFx0XHRcdGNhdGNoKGUpIHsgdmFsdWUgPSAne30nIH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGVsbS5kYXRhc2V0W25hbWVdID0gdmFsdWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBldmVudHMgKSB7XHJcblx0XHRcdGtleXMgPSBPYmplY3Qua2V5cyhldmVudHMpO1xyXG5cdFx0XHRrZXlzLmZvckVhY2goKG5hbWUpID0+IHtcclxuXHRcdFx0XHRBZGQoIGVsbSwgbmFtZSwgZXZlbnRzW25hbWVdIClcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHJcblx0XHRpZiggcHJvcHMuc3R5bGUgKSB7XHJcblx0XHRcdHRoaXMuY3NzKCBlbG0sIHByb3BzLnN0eWxlIClcclxuXHRcdH1cclxuXHJcblx0XHRpZiggcHJvcHMucGFyZW50ICE9PSB1bmRlZmluZWQgJiYgcHJvcHMucGFyZW50Lm5vZGVUeXBlICkge1xyXG5cdFx0XHRsZXQgcGFyZW50ID0gcHJvcHMucGFyZW50O1xyXG5cdFx0XHRpZiggIXByb3BzLnByZXBlbmQgfHwgIXBhcmVudC5maXJzdENoaWxkICkge1xyXG5cdFx0XHRcdHBhcmVudC5hcHBlbmRDaGlsZChlbG0pXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0cGFyZW50Lmluc2VydEJlZm9yZShlbG0sIHBhcmVudC5maXJzdENoaWxkKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0aWYoIHByb3BzLnRleHQgKSB7XHJcblx0XHRcdGVsbS5hcHBlbmRDaGlsZChcclxuXHRcdFx0XHRkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShTdHJpbmcocHJvcHMudGV4dCkpXHJcblx0XHRcdClcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYoIHByb3BzLmh0bWwgKSB7XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0ZWxtLmlubmVySFRNTCA9IFN0cmluZyhwcm9wcy5odG1sKVxyXG5cdFx0XHR9XHJcblx0XHRcdGNhdGNoKGUpIHt9XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmKCBwcm9wcy5jaGlsZHJlbiAmJiBBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSApIHtcclxuXHRcdFx0cHJvcHMuY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XHJcblx0XHRcdFx0aWYoICFJc05vZGUoY2hpbGQpICkge1xyXG5cdFx0XHRcdFx0bGV0IHRvZiA9IHR5cGVvZiBjaGlsZDtcclxuXHRcdFx0XHRcdGlmKCB0b2YgPT09ICdzdHJpbmcnICkgY2hpbGQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjaGlsZCk7XHJcblx0XHRcdFx0XHRlbHNlIGlmKCB0b2YgPT09ICdvYmplY3QnICkgY2hpbGQgPSBFbGVtZW50LmNyZWF0ZShjaGlsZCk7XHJcblx0XHRcdFx0XHRlbHNlIGlmKCB0b2YgPT09ICdmdW5jdGlvbicgKSB7XHJcblx0XHRcdFx0XHRcdGNoaWxkID0gY2hpbGQoKTtcclxuXHRcdFx0XHRcdFx0aWYoICFJc05vZGUoY2hpbGQpICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVyblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbHNlIHJldHVybjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxtLmFwcGVuZENoaWxkKGNoaWxkKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBlbG1cclxuXHR9LFxyXG5cclxuXHRjc3MoZWxlbWVudCwgcHJvcHMpXHJcblx0e1xyXG5cdFx0ZWxlbWVudCA9IENvbGxlY3Rpb24oZWxlbWVudCk7XHJcblx0XHRpZiggZWxlbWVudCApIHtcclxuXHRcdFx0bGV0IGksIGVsZW0sIHN0eWxlcyA9IFtdO1xyXG5cclxuXHRcdFx0Zm9yKCBpID0gMDsgaSA8IGVsZW1lbnQubGVuZ3RoOyBpKysgKSB7XHJcblx0XHRcdFx0aWYoIChlbGVtID0gZWxlbWVudFtpXSkgJiYgZWxlbS5ub2RlVHlwZSAhPT0gMyAmJiBlbGVtLm5vZGVUeXBlICE9PSA4ICYmIGVsZW0uc3R5bGUgKSB7XHJcblx0XHRcdFx0XHRzdHlsZXNbc3R5bGVzLmxlbmd0aF0gPSBlbGVtLnN0eWxlXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiggc3R5bGVzLmxlbmd0aCApIHtcclxuXHRcdFx0XHRmb3IoIGxldCBuID0gMCwga2V5cyA9IE9iamVjdC5rZXlzKHByb3BzKSwgbmFtZSwgdmFsdWUsIGtleXNMZW5ndGggPSBrZXlzLmxlbmd0aCwgc3R5bGVzTGVuZ3RoID0gc3R5bGVzLmxlbmd0aDsgbiA8IGtleXNMZW5ndGg7IG4rKyApIHtcclxuXHRcdFx0XHRcdG5hbWUgICA9IGtleXNbbl07XHJcblx0XHRcdFx0XHR2YWx1ZSAgPSBwcm9wc1tuYW1lXTtcclxuXHRcdFx0XHRcdHZhbHVlICs9IHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIiAmJiAhY3NzTnVtYmVyW25hbWVdID8gJ3B4JyA6ICcnO1xyXG5cclxuXHRcdFx0XHRcdGZvciggaSA9IDA7IGkgPCBzdHlsZXNMZW5ndGg7IGkrKyApIHtcclxuXHRcdFx0XHRcdFx0c3R5bGVzW2ldW25hbWVdID0gdmFsdWVcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFbGVtZW50OyJdfQ==
},{"./collection":17,"./event":19,"./is-node":21}],19:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Add = Add;
exports.Remove = Remove;

var _collection = require('./collection');

var _collection2 = _interopRequireDefault(_collection);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reg = /\s+/g;

function getName(name) {
	return Array.isArray(name) ? name : String(name).split(reg);
}

function makeEvent(element, name, callback, fn) {
	element = (0, _collection2.default)(element);
	if (element) {
		name = getName(name);
		for (var i = 0, j, node, ln = name.length, length = element.length; i < length; i++) {
			node = element[i];
			if (node[fn]) {
				for (j = 0; j < ln; j++) {
					node[fn](name[j], callback, false);
				}
			}
		}
	}
}

function Add(element, name, callback) {
	makeEvent(element, name, callback, 'addEventListener');
}

function Remove(element, name, callback) {
	makeEvent(element, name, callback, 'removeEventListener');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50LmpzIl0sIm5hbWVzIjpbIkFkZCIsIlJlbW92ZSIsInJlZyIsImdldE5hbWUiLCJuYW1lIiwiQXJyYXkiLCJpc0FycmF5IiwiU3RyaW5nIiwic3BsaXQiLCJtYWtlRXZlbnQiLCJlbGVtZW50IiwiY2FsbGJhY2siLCJmbiIsImkiLCJqIiwibm9kZSIsImxuIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7OztRQXlCZ0JBLEcsR0FBQUEsRztRQUtBQyxNLEdBQUFBLE07O0FBOUJoQjs7Ozs7O0FBRUEsSUFBTUMsTUFBTSxNQUFaOztBQUVBLFNBQVNDLE9BQVQsQ0FBa0JDLElBQWxCLEVBQ0E7QUFDQyxRQUFPQyxNQUFNQyxPQUFOLENBQWNGLElBQWQsSUFBc0JBLElBQXRCLEdBQTZCRyxPQUFPSCxJQUFQLEVBQWFJLEtBQWIsQ0FBbUJOLEdBQW5CLENBQXBDO0FBQ0E7O0FBRUQsU0FBU08sU0FBVCxDQUFtQkMsT0FBbkIsRUFBNEJOLElBQTVCLEVBQWtDTyxRQUFsQyxFQUE0Q0MsRUFBNUMsRUFDQTtBQUNDRixXQUFVLDBCQUFXQSxPQUFYLENBQVY7QUFDQSxLQUFJQSxPQUFKLEVBQWM7QUFDYk4sU0FBT0QsUUFBUUMsSUFBUixDQUFQO0FBQ0EsT0FBSSxJQUFJUyxJQUFJLENBQVIsRUFBV0MsQ0FBWCxFQUFjQyxJQUFkLEVBQW9CQyxLQUFLWixLQUFLYSxNQUE5QixFQUFzQ0EsU0FBU1AsUUFBUU8sTUFBM0QsRUFBbUVKLElBQUlJLE1BQXZFLEVBQStFSixHQUEvRSxFQUFvRjtBQUNuRkUsVUFBT0wsUUFBUUcsQ0FBUixDQUFQO0FBQ0EsT0FBSUUsS0FBS0gsRUFBTCxDQUFKLEVBQWU7QUFDZCxTQUFJRSxJQUFJLENBQVIsRUFBV0EsSUFBSUUsRUFBZixFQUFtQkYsR0FBbkIsRUFBd0I7QUFDdkJDLFVBQUtILEVBQUwsRUFBU1IsS0FBS1UsQ0FBTCxDQUFULEVBQWtCSCxRQUFsQixFQUE0QixLQUE1QjtBQUNBO0FBQ0Q7QUFDRDtBQUNEO0FBQ0Q7O0FBRU0sU0FBU1gsR0FBVCxDQUFhVSxPQUFiLEVBQXNCTixJQUF0QixFQUE0Qk8sUUFBNUIsRUFDUDtBQUNDRixXQUFVQyxPQUFWLEVBQW1CTixJQUFuQixFQUF5Qk8sUUFBekIsRUFBbUMsa0JBQW5DO0FBQ0E7O0FBRU0sU0FBU1YsTUFBVCxDQUFnQlMsT0FBaEIsRUFBeUJOLElBQXpCLEVBQStCTyxRQUEvQixFQUNQO0FBQ0NGLFdBQVVDLE9BQVYsRUFBbUJOLElBQW5CLEVBQXlCTyxRQUF6QixFQUFtQyxxQkFBbkM7QUFDQSIsImZpbGUiOiJldmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2xsZWN0aW9uIGZyb20gXCIuL2NvbGxlY3Rpb25cIjtcclxuXHJcbmNvbnN0IHJlZyA9IC9cXHMrL2c7XHJcblxyXG5mdW5jdGlvbiBnZXROYW1lKCBuYW1lIClcclxue1xyXG5cdHJldHVybiBBcnJheS5pc0FycmF5KG5hbWUpID8gbmFtZSA6IFN0cmluZyhuYW1lKS5zcGxpdChyZWcpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1ha2VFdmVudChlbGVtZW50LCBuYW1lLCBjYWxsYmFjaywgZm4pXHJcbntcclxuXHRlbGVtZW50ID0gQ29sbGVjdGlvbihlbGVtZW50KTtcclxuXHRpZiggZWxlbWVudCApIHtcclxuXHRcdG5hbWUgPSBnZXROYW1lKG5hbWUpO1xyXG5cdFx0Zm9yKGxldCBpID0gMCwgaiwgbm9kZSwgbG4gPSBuYW1lLmxlbmd0aCwgbGVuZ3RoID0gZWxlbWVudC5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xyXG5cdFx0XHRub2RlID0gZWxlbWVudFtpXTtcclxuXHRcdFx0aWYoIG5vZGVbZm5dICkge1xyXG5cdFx0XHRcdGZvcihqID0gMDsgaiA8IGxuOyBqKyspIHtcclxuXHRcdFx0XHRcdG5vZGVbZm5dKG5hbWVbal0sIGNhbGxiYWNrLCBmYWxzZSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBBZGQoZWxlbWVudCwgbmFtZSwgY2FsbGJhY2spXHJcbntcclxuXHRtYWtlRXZlbnQoZWxlbWVudCwgbmFtZSwgY2FsbGJhY2ssICdhZGRFdmVudExpc3RlbmVyJylcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFJlbW92ZShlbGVtZW50LCBuYW1lLCBjYWxsYmFjaylcclxue1xyXG5cdG1ha2VFdmVudChlbGVtZW50LCBuYW1lLCBjYWxsYmFjaywgJ3JlbW92ZUV2ZW50TGlzdGVuZXInKVxyXG59XHJcbiJdfQ==
},{"./collection":17}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyleSheets = exports.Element = exports.Ready = exports.Page = exports.Offset = exports.ClassName = exports.Event = undefined;

var _className = require("./class-name");

var _className2 = _interopRequireDefault(_className);

var _offset = require("./offset");

var _offset2 = _interopRequireDefault(_offset);

var _page = require("./page");

var _page2 = _interopRequireDefault(_page);

var _ready = require("./ready");

var _ready2 = _interopRequireDefault(_ready);

var _element = require("./element");

var _element2 = _interopRequireDefault(_element);

var _event = require("./event");

var Event = _interopRequireWildcard(_event);

var _styleSheets = require("./style-sheets");

var _styleSheets2 = _interopRequireDefault(_styleSheets);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Event = Event;
exports.ClassName = _className2.default;
exports.Offset = _offset2.default;
exports.Page = _page2.default;
exports.Ready = _ready2.default;
exports.Element = _element2.default;
exports.StyleSheets = _styleSheets2.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkV2ZW50IiwiQ2xhc3NOYW1lIiwiT2Zmc2V0IiwiUGFnZSIsIlJlYWR5IiwiRWxlbWVudCIsIlN0eWxlU2hlZXRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOztJQUFZQSxLOztBQUNaOzs7Ozs7OztRQUVTQSxLLEdBQUFBLEs7UUFBT0MsUztRQUFXQyxNO1FBQVFDLEk7UUFBTUMsSztRQUFPQyxPO1FBQVNDLFciLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2xhc3NOYW1lIGZyb20gXCIuL2NsYXNzLW5hbWVcIjtcclxuaW1wb3J0IE9mZnNldCBmcm9tIFwiLi9vZmZzZXRcIjtcclxuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiO1xyXG5pbXBvcnQgUmVhZHkgZnJvbSBcIi4vcmVhZHlcIjtcclxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4vZWxlbWVudFwiO1xyXG5pbXBvcnQgKiBhcyBFdmVudCBmcm9tIFwiLi9ldmVudFwiO1xyXG5pbXBvcnQgU3R5bGVTaGVldHMgZnJvbSBcIi4vc3R5bGUtc2hlZXRzXCI7XHJcblxyXG5leHBvcnQgeyBFdmVudCwgQ2xhc3NOYW1lLCBPZmZzZXQsIFBhZ2UsIFJlYWR5LCBFbGVtZW50LCBTdHlsZVNoZWV0cyB9Il19
},{"./class-name":16,"./element":18,"./event":19,"./offset":22,"./page":23,"./ready":24,"./style-sheets":25}],21:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _isBrowser = require('../tools/is-browser');

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tof = typeof Node === 'undefined' ? 'undefined' : _typeof(Node),
    IsNode = function IsNode() {
	return false;
};

if ((0, _isBrowser2.default)()) {

	var isNodeNative = tof === 'object';
	if (!isNodeNative && tof === 'function' && typeof document !== "undefined") {
		isNodeNative = document.createElement("span") instanceof Node;
	}

	IsNode = isNodeNative ? function (object) {
		return object instanceof Node;
	} : function (object) {
		return object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string";
	};
}

exports.default = IsNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLW5vZGUuanMiXSwibmFtZXMiOlsidG9mIiwiTm9kZSIsIklzTm9kZSIsImlzTm9kZU5hdGl2ZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIm9iamVjdCIsIm5vZGVUeXBlIiwibm9kZU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQUlBLGFBQWFDLElBQWIseUNBQWFBLElBQWIsQ0FBSjtBQUFBLElBQXVCQyxTQUFTO0FBQUEsUUFBTSxLQUFOO0FBQUEsQ0FBaEM7O0FBRUEsSUFBSSwwQkFBSixFQUFrQjs7QUFFakIsS0FBSUMsZUFBZUgsUUFBUSxRQUEzQjtBQUNBLEtBQUksQ0FBRUcsWUFBRixJQUFrQkgsUUFBUSxVQUExQixJQUF3QyxPQUFPSSxRQUFQLEtBQW9CLFdBQWhFLEVBQThFO0FBQzdFRCxpQkFBZUMsU0FBU0MsYUFBVCxDQUF1QixNQUF2QixhQUEwQ0osSUFBekQ7QUFDQTs7QUFFREMsVUFBU0MsZUFDTjtBQUFBLFNBQVVHLGtCQUFrQkwsSUFBNUI7QUFBQSxFQURNLEdBRU47QUFBQSxTQUFVSyxVQUFVLFFBQU9BLE1BQVAseUNBQU9BLE1BQVAsT0FBa0IsUUFBNUIsSUFBd0MsT0FBT0EsT0FBT0MsUUFBZCxLQUEyQixRQUFuRSxJQUErRSxPQUFPRCxPQUFPRSxRQUFkLEtBQTJCLFFBQXBIO0FBQUEsRUFGSDtBQUdBOztrQkFFY04sTSIsImZpbGUiOiJpcy1ub2RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IElzQnJvd3NlciBmcm9tIFwiLi4vdG9vbHMvaXMtYnJvd3NlclwiO1xyXG5cclxubGV0IHRvZiA9IHR5cGVvZiBOb2RlLCBJc05vZGUgPSAoKSA9PiBmYWxzZTtcclxuXHJcbmlmKCBJc0Jyb3dzZXIoKSApIHtcclxuXHJcblx0bGV0IGlzTm9kZU5hdGl2ZSA9IHRvZiA9PT0gJ29iamVjdCc7XHJcblx0aWYoICEgaXNOb2RlTmF0aXZlICYmIHRvZiA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgKSB7XHJcblx0XHRpc05vZGVOYXRpdmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKSBpbnN0YW5jZW9mIE5vZGU7XHJcblx0fVxyXG5cclxuXHRJc05vZGUgPSBpc05vZGVOYXRpdmVcclxuXHRcdD8gb2JqZWN0ID0+IG9iamVjdCBpbnN0YW5jZW9mIE5vZGVcclxuXHRcdDogb2JqZWN0ID0+IG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmplY3Qubm9kZVR5cGUgPT09IFwibnVtYmVyXCIgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gXCJzdHJpbmdcIjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSXNOb2RlIl19
},{"../tools/is-browser":36}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (element) {
	var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	if (element && element.nodeType == 1) {
		return offset(element, fixed);
	} else {
		return {
			width: 0, height: 0, top: 0, left: 0
		};
	}
};

var _page = require("./page");

var _page2 = _interopRequireDefault(_page);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var offset = void 0;

if (typeof document !== "undefined" && document.createElement("span").getBoundingClientRect) {

	offset = function offset(element) {
		var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		var box = element.getBoundingClientRect(),
		    ref = {
			top: Math.round(box.top),
			left: Math.round(box.left),
			width: box.right - box.left,
			height: box.bottom - box.top
		};

		if (!fixed) {
			ref.top += _page2.default.top;
			ref.left += _page2.default.left;
		}

		return ref;
	};
} else {

	offset = function offset(element) {
		var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		var top = 0,
		    left = 0;

		while (element) {
			top += element.offsetTop;
			left += element.offsetLeft;
			element = element.offsetParent;
		}

		if (fixed) {
			top -= _page2.default.top;
			left -= _page2.default.left;
		}

		return {
			top: Math.round(top),
			left: Math.round(left),
			width: element.offsetWidth,
			height: element.offsetHeight
		};
	};
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZnNldC5qcyJdLCJuYW1lcyI6WyJlbGVtZW50IiwiZml4ZWQiLCJub2RlVHlwZSIsIm9mZnNldCIsIndpZHRoIiwiaGVpZ2h0IiwidG9wIiwibGVmdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJveCIsInJlZiIsIk1hdGgiLCJyb3VuZCIsInJpZ2h0IiwiYm90dG9tIiwib2Zmc2V0VG9wIiwib2Zmc2V0TGVmdCIsIm9mZnNldFBhcmVudCIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBa0RlLFVBQVVBLE9BQVYsRUFBa0M7QUFBQSxLQUFmQyxLQUFlLHVFQUFQLEtBQU87O0FBQ2hELEtBQUlELFdBQVdBLFFBQVFFLFFBQVIsSUFBb0IsQ0FBbkMsRUFBdUM7QUFDdEMsU0FBT0MsT0FBT0gsT0FBUCxFQUFnQkMsS0FBaEIsQ0FBUDtBQUNBLEVBRkQsTUFHSztBQUNKLFNBQU87QUFDTkcsVUFBTyxDQURELEVBQ0lDLFFBQVEsQ0FEWixFQUNlQyxLQUFLLENBRHBCLEVBQ3VCQyxNQUFNO0FBRDdCLEdBQVA7QUFHQTtBQUNELEM7O0FBM0REOzs7Ozs7QUFFQSxJQUFJSixlQUFKOztBQUVBLElBQUksT0FBT0ssUUFBUCxLQUFvQixXQUFwQixJQUFtQ0EsU0FBU0MsYUFBVCxDQUF1QixNQUF2QixFQUErQkMscUJBQXRFLEVBQThGOztBQUU3RlAsVUFBUyxnQkFBU0gsT0FBVCxFQUNUO0FBQUEsTUFEMkJDLEtBQzNCLHVFQURtQyxLQUNuQzs7QUFDQyxNQUFJVSxNQUFNWCxRQUFRVSxxQkFBUixFQUFWO0FBQUEsTUFDQ0UsTUFBTTtBQUNMTixRQUFRTyxLQUFLQyxLQUFMLENBQVlILElBQUlMLEdBQWhCLENBREg7QUFFTEMsU0FBUU0sS0FBS0MsS0FBTCxDQUFZSCxJQUFJSixJQUFoQixDQUZIO0FBR0xILFVBQVFPLElBQUlJLEtBQUosR0FBYUosSUFBSUosSUFIcEI7QUFJTEYsV0FBUU0sSUFBSUssTUFBSixHQUFhTCxJQUFJTDtBQUpwQixHQURQOztBQVFBLE1BQUksQ0FBQ0wsS0FBTCxFQUFhO0FBQ1pXLE9BQUlOLEdBQUosSUFBWSxlQUFLQSxHQUFqQjtBQUNBTSxPQUFJTCxJQUFKLElBQVksZUFBS0EsSUFBakI7QUFDQTs7QUFFRCxTQUFPSyxHQUFQO0FBQ0EsRUFoQkQ7QUFpQkEsQ0FuQkQsTUFvQks7O0FBRUpULFVBQVMsZ0JBQVNILE9BQVQsRUFDVDtBQUFBLE1BRDJCQyxLQUMzQix1RUFEbUMsS0FDbkM7O0FBQ0MsTUFBSUssTUFBTSxDQUFWO0FBQUEsTUFBYUMsT0FBTyxDQUFwQjs7QUFFQSxTQUFNUCxPQUFOLEVBQWU7QUFDZE0sVUFBUU4sUUFBUWlCLFNBQWhCO0FBQ0FWLFdBQVFQLFFBQVFrQixVQUFoQjtBQUNBbEIsYUFBVUEsUUFBUW1CLFlBQWxCO0FBQ0E7O0FBRUQsTUFBSWxCLEtBQUosRUFBWTtBQUNYSyxVQUFRLGVBQUtBLEdBQWI7QUFDQUMsV0FBUSxlQUFLQSxJQUFiO0FBQ0E7O0FBRUQsU0FBTztBQUNORCxRQUFRTyxLQUFLQyxLQUFMLENBQVdSLEdBQVgsQ0FERjtBQUVOQyxTQUFRTSxLQUFLQyxLQUFMLENBQVdQLElBQVgsQ0FGRjtBQUdOSCxVQUFRSixRQUFRb0IsV0FIVjtBQUlOZixXQUFRTCxRQUFRcUI7QUFKVixHQUFQO0FBTUEsRUFyQkQ7QUFzQkEiLCJmaWxlIjoib2Zmc2V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZVwiO1xyXG5cclxubGV0IG9mZnNldDtcclxuXHJcbmlmKCB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIikuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ICkge1xyXG5cclxuXHRvZmZzZXQgPSBmdW5jdGlvbihlbGVtZW50LCBmaXhlZCA9IGZhbHNlKVxyXG5cdHtcclxuXHRcdGxldCBib3ggPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxyXG5cdFx0XHRyZWYgPSB7XHJcblx0XHRcdFx0dG9wOiAgICBNYXRoLnJvdW5kKCBib3gudG9wICksXHJcblx0XHRcdFx0bGVmdDogICBNYXRoLnJvdW5kKCBib3gubGVmdCApLFxyXG5cdFx0XHRcdHdpZHRoOiAgYm94LnJpZ2h0ICAtIGJveC5sZWZ0LFxyXG5cdFx0XHRcdGhlaWdodDogYm94LmJvdHRvbSAtIGJveC50b3BcclxuXHRcdFx0fTtcclxuXHJcblx0XHRpZiggIWZpeGVkICkge1xyXG5cdFx0XHRyZWYudG9wICArPSBQYWdlLnRvcDtcclxuXHRcdFx0cmVmLmxlZnQgKz0gUGFnZS5sZWZ0O1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiByZWZcclxuXHR9XHJcbn1cclxuZWxzZSB7XHJcblxyXG5cdG9mZnNldCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGZpeGVkID0gZmFsc2UpXHJcblx0e1xyXG5cdFx0dmFyIHRvcCA9IDAsIGxlZnQgPSAwO1xyXG5cclxuXHRcdHdoaWxlKGVsZW1lbnQpIHtcclxuXHRcdFx0dG9wICArPSBlbGVtZW50Lm9mZnNldFRvcDtcclxuXHRcdFx0bGVmdCArPSBlbGVtZW50Lm9mZnNldExlZnQ7XHJcblx0XHRcdGVsZW1lbnQgPSBlbGVtZW50Lm9mZnNldFBhcmVudFxyXG5cdFx0fVxyXG5cclxuXHRcdGlmKCBmaXhlZCApIHtcclxuXHRcdFx0dG9wICAtPSBQYWdlLnRvcDtcclxuXHRcdFx0bGVmdCAtPSBQYWdlLmxlZnQ7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dG9wOiAgICBNYXRoLnJvdW5kKHRvcCksXHJcblx0XHRcdGxlZnQ6ICAgTWF0aC5yb3VuZChsZWZ0KSxcclxuXHRcdFx0d2lkdGg6ICBlbGVtZW50Lm9mZnNldFdpZHRoLFxyXG5cdFx0XHRoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoZWxlbWVudCwgZml4ZWQgPSBmYWxzZSkge1xyXG5cdGlmKCBlbGVtZW50ICYmIGVsZW1lbnQubm9kZVR5cGUgPT0gMSApIHtcclxuXHRcdHJldHVybiBvZmZzZXQoZWxlbWVudCwgZml4ZWQpXHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0d2lkdGg6IDAsIGhlaWdodDogMCwgdG9wOiAwLCBsZWZ0OiAwXHJcblx0XHR9XHJcblx0fVxyXG59Il19
},{"./page":23}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _ready = require("./ready");

var _ready2 = _interopRequireDefault(_ready);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Page = {};

if (typeof window !== "undefined" && window.document && window.navigator) {
	var getViewportWidth = function getViewportWidth() {
		return (document.compatMode || isIE) && !isOpera ? document.compatMode == 'CSS1Compat' ? DocElem.clientWidth : Body.clientWidth : (document.parentWindow || document.defaultView).innerWidth;
	};

	var getViewportHeight = function getViewportHeight() {
		return (document.compatMode || isIE) && !isOpera ? document.compatMode == 'CSS1Compat' ? DocElem.clientHeight : Body.clientHeight : (document.parentWindow || document.defaultView).innerHeight;
	};

	var Body = {};
	var DocElem = document.documentElement;
	var GetBody = function GetBody() {
		return document.body;
	};

	var ua = navigator.userAgent.toLowerCase();
	var isOpera = ua.indexOf('opera') > -1;
	var isIE = !isOpera && ua.indexOf('msie') > -1;

	if (GetBody()) {
		Body = GetBody();
	} else {
		(0, _ready2.default)(function () {
			Body = GetBody();
		});
	}

	Page = {
		get width() {
			return window.innerWidth || Body.clientWidth;
		},

		get height() {
			return window.innerHeight || Body.clientHeight;
		},

		get top() {
			return (window.pageYOffset || DocElem.scrollTop || Body.scrollTop) - (DocElem.clientTop || Body.clientTop || 0);
		},

		get left() {
			return (window.pageXOffset || DocElem.scrollLeft || Body.scrollLeft) - (DocElem.clientLeft || Body.clientLeft || 0);
		},

		get viewportWidth() {
			return Math.max(document.compatMode != 'CSS1Compat' ? Body.scrollWidth : DocElem.scrollWidth, getViewportWidth());
		},

		get viewportHeight() {
			return Math.max(document.compatMode != 'CSS1Compat' ? Body.scrollHeight : DocElem.scrollHeight, getViewportHeight());
		},

		all: function all() {
			var self = this;
			return {
				width: self.width,
				height: self.height,
				viewportWidth: self.viewportWidth,
				viewportHeight: self.viewportHeight,
				left: self.left,
				top: self.top
			};
		}
	};
}

exports.default = Page;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwibmFtZXMiOlsiUGFnZSIsIndpbmRvdyIsImRvY3VtZW50IiwibmF2aWdhdG9yIiwiZ2V0Vmlld3BvcnRXaWR0aCIsImNvbXBhdE1vZGUiLCJpc0lFIiwiaXNPcGVyYSIsIkRvY0VsZW0iLCJjbGllbnRXaWR0aCIsIkJvZHkiLCJwYXJlbnRXaW5kb3ciLCJkZWZhdWx0VmlldyIsImlubmVyV2lkdGgiLCJnZXRWaWV3cG9ydEhlaWdodCIsImNsaWVudEhlaWdodCIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiR2V0Qm9keSIsImJvZHkiLCJ1YSIsInVzZXJBZ2VudCIsInRvTG93ZXJDYXNlIiwiaW5kZXhPZiIsIndpZHRoIiwiaGVpZ2h0IiwidG9wIiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUb3AiLCJjbGllbnRUb3AiLCJsZWZ0IiwicGFnZVhPZmZzZXQiLCJzY3JvbGxMZWZ0IiwiY2xpZW50TGVmdCIsInZpZXdwb3J0V2lkdGgiLCJNYXRoIiwibWF4Iiwic2Nyb2xsV2lkdGgiLCJ2aWV3cG9ydEhlaWdodCIsInNjcm9sbEhlaWdodCIsImFsbCIsInNlbGYiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7QUFFQSxJQUFJQSxPQUFPLEVBQVg7O0FBRUEsSUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLElBQWlDQSxPQUFPQyxRQUF4QyxJQUFvREQsT0FBT0UsU0FBL0QsRUFDQTtBQUFBLEtBa0JVQyxnQkFsQlYsR0FrQkMsU0FBU0EsZ0JBQVQsR0FDQTtBQUNDLFNBQVEsQ0FBQ0YsU0FBU0csVUFBVCxJQUF1QkMsSUFBeEIsS0FBaUMsQ0FBQ0MsT0FBbkMsR0FBK0NMLFNBQVNHLFVBQVQsSUFBdUIsWUFBeEIsR0FBd0NHLFFBQVFDLFdBQWhELEdBQThEQyxLQUFLRCxXQUFqSCxHQUErSCxDQUFDUCxTQUFTUyxZQUFULElBQXlCVCxTQUFTVSxXQUFuQyxFQUFnREMsVUFBdEw7QUFDQSxFQXJCRjs7QUFBQSxLQXVCVUMsaUJBdkJWLEdBdUJDLFNBQVNBLGlCQUFULEdBQ0E7QUFDQyxTQUFRLENBQUNaLFNBQVNHLFVBQVQsSUFBdUJDLElBQXhCLEtBQWlDLENBQUNDLE9BQW5DLEdBQStDTCxTQUFTRyxVQUFULElBQXVCLFlBQXhCLEdBQXdDRyxRQUFRTyxZQUFoRCxHQUErREwsS0FBS0ssWUFBbEgsR0FBaUksQ0FBQ2IsU0FBU1MsWUFBVCxJQUF5QlQsU0FBU1UsV0FBbkMsRUFBZ0RJLFdBQXhMO0FBQ0EsRUExQkY7O0FBQ0MsS0FBSU4sT0FBTyxFQUFYO0FBQ0EsS0FBTUYsVUFBVU4sU0FBU2UsZUFBekI7QUFDQSxLQUFNQyxVQUFVLFNBQVZBLE9BQVU7QUFBQSxTQUFNaEIsU0FBU2lCLElBQWY7QUFBQSxFQUFoQjs7QUFFQSxLQUFNQyxLQUFLakIsVUFBVWtCLFNBQVYsQ0FBb0JDLFdBQXBCLEVBQVg7QUFDQSxLQUFNZixVQUFXYSxHQUFHRyxPQUFILENBQVcsT0FBWCxJQUF1QixDQUFDLENBQXpDO0FBQ0EsS0FBTWpCLE9BQVEsQ0FBQ0MsT0FBRCxJQUFZYSxHQUFHRyxPQUFILENBQVcsTUFBWCxJQUFxQixDQUFDLENBQWhEOztBQUVBLEtBQUlMLFNBQUosRUFBZ0I7QUFDZlIsU0FBT1EsU0FBUDtBQUNBLEVBRkQsTUFHSztBQUNKLHVCQUFNLFlBQU07QUFDWFIsVUFBT1EsU0FBUDtBQUNBLEdBRkQ7QUFHQTs7QUFZRGxCLFFBQ0E7QUFDQyxNQUFJd0IsS0FBSixHQUNBO0FBQ0MsVUFBT3ZCLE9BQU9ZLFVBQVAsSUFBcUJILEtBQUtELFdBQWpDO0FBQ0EsR0FKRjs7QUFNQyxNQUFJZ0IsTUFBSixHQUNBO0FBQ0MsVUFBT3hCLE9BQU9lLFdBQVAsSUFBc0JOLEtBQUtLLFlBQWxDO0FBQ0EsR0FURjs7QUFXQyxNQUFJVyxHQUFKLEdBQ0E7QUFDQyxVQUFPLENBQUN6QixPQUFPMEIsV0FBUCxJQUFzQm5CLFFBQVFvQixTQUE5QixJQUEyQ2xCLEtBQUtrQixTQUFqRCxLQUErRHBCLFFBQVFxQixTQUFSLElBQXFCbkIsS0FBS21CLFNBQTFCLElBQXVDLENBQXRHLENBQVA7QUFDQSxHQWRGOztBQWdCQyxNQUFJQyxJQUFKLEdBQ0E7QUFDQyxVQUFPLENBQUM3QixPQUFPOEIsV0FBUCxJQUFzQnZCLFFBQVF3QixVQUE5QixJQUE0Q3RCLEtBQUtzQixVQUFsRCxLQUFpRXhCLFFBQVF5QixVQUFSLElBQXNCdkIsS0FBS3VCLFVBQTNCLElBQXlDLENBQTFHLENBQVA7QUFDQSxHQW5CRjs7QUFxQkMsTUFBSUMsYUFBSixHQUNBO0FBQ0MsVUFBT0MsS0FBS0MsR0FBTCxDQUFTbEMsU0FBU0csVUFBVCxJQUF1QixZQUF2QixHQUFzQ0ssS0FBSzJCLFdBQTNDLEdBQXlEN0IsUUFBUTZCLFdBQTFFLEVBQXVGakMsa0JBQXZGLENBQVA7QUFDQSxHQXhCRjs7QUEwQkMsTUFBSWtDLGNBQUosR0FDQTtBQUNDLFVBQU9ILEtBQUtDLEdBQUwsQ0FBU2xDLFNBQVNHLFVBQVQsSUFBdUIsWUFBdkIsR0FBc0NLLEtBQUs2QixZQUEzQyxHQUEwRC9CLFFBQVErQixZQUEzRSxFQUF5RnpCLG1CQUF6RixDQUFQO0FBQ0EsR0E3QkY7O0FBK0JDMEIsS0EvQkQsaUJBZ0NDO0FBQ0MsT0FBSUMsT0FBTyxJQUFYO0FBQ0EsVUFBTztBQUNOakIsV0FBT2lCLEtBQUtqQixLQUROO0FBRU5DLFlBQVFnQixLQUFLaEIsTUFGUDtBQUdOUyxtQkFBZU8sS0FBS1AsYUFIZDtBQUlOSSxvQkFBZ0JHLEtBQUtILGNBSmY7QUFLTlIsVUFBTVcsS0FBS1gsSUFMTDtBQU1OSixTQUFLZSxLQUFLZjtBQU5KLElBQVA7QUFRQTtBQTFDRixFQURBO0FBNkNBOztrQkFFYzFCLEkiLCJmaWxlIjoicGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFkeSBmcm9tIFwiLi9yZWFkeVwiO1xyXG5cclxubGV0IFBhZ2UgPSB7fTtcclxuXHJcbmlmKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cubmF2aWdhdG9yIClcclxue1xyXG5cdGxldCBCb2R5ID0ge307XHJcblx0Y29uc3QgRG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHRjb25zdCBHZXRCb2R5ID0gKCkgPT4gZG9jdW1lbnQuYm9keTtcclxuXHJcblx0Y29uc3QgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7XHJcblx0Y29uc3QgaXNPcGVyYSA9ICh1YS5pbmRleE9mKCdvcGVyYScpICA+IC0xKTtcclxuXHRjb25zdCBpc0lFID0gKCFpc09wZXJhICYmIHVhLmluZGV4T2YoJ21zaWUnKSA+IC0xKTtcclxuXHJcblx0aWYoIEdldEJvZHkoKSApIHtcclxuXHRcdEJvZHkgPSBHZXRCb2R5KClcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRSZWFkeSgoKSA9PiB7XHJcblx0XHRcdEJvZHkgPSBHZXRCb2R5KClcclxuXHRcdH0pXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBnZXRWaWV3cG9ydFdpZHRoKClcclxuXHR7XHJcblx0XHRyZXR1cm4gKChkb2N1bWVudC5jb21wYXRNb2RlIHx8IGlzSUUpICYmICFpc09wZXJhKSA/IChkb2N1bWVudC5jb21wYXRNb2RlID09ICdDU1MxQ29tcGF0JykgPyBEb2NFbGVtLmNsaWVudFdpZHRoIDogQm9keS5jbGllbnRXaWR0aCA6IChkb2N1bWVudC5wYXJlbnRXaW5kb3cgfHwgZG9jdW1lbnQuZGVmYXVsdFZpZXcpLmlubmVyV2lkdGg7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBnZXRWaWV3cG9ydEhlaWdodCgpXHJcblx0e1xyXG5cdFx0cmV0dXJuICgoZG9jdW1lbnQuY29tcGF0TW9kZSB8fCBpc0lFKSAmJiAhaXNPcGVyYSkgPyAoZG9jdW1lbnQuY29tcGF0TW9kZSA9PSAnQ1NTMUNvbXBhdCcpID8gRG9jRWxlbS5jbGllbnRIZWlnaHQgOiBCb2R5LmNsaWVudEhlaWdodCA6IChkb2N1bWVudC5wYXJlbnRXaW5kb3cgfHwgZG9jdW1lbnQuZGVmYXVsdFZpZXcpLmlubmVySGVpZ2h0O1xyXG5cdH1cclxuXHJcblx0UGFnZSA9XHJcblx0e1xyXG5cdFx0Z2V0IHdpZHRoKClcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoIHx8IEJvZHkuY2xpZW50V2lkdGhcclxuXHRcdH0sXHJcblxyXG5cdFx0Z2V0IGhlaWdodCgpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgQm9keS5jbGllbnRIZWlnaHRcclxuXHRcdH0sXHJcblxyXG5cdFx0Z2V0IHRvcCgpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybiAod2luZG93LnBhZ2VZT2Zmc2V0IHx8IERvY0VsZW0uc2Nyb2xsVG9wIHx8IEJvZHkuc2Nyb2xsVG9wKSAtIChEb2NFbGVtLmNsaWVudFRvcCB8fCBCb2R5LmNsaWVudFRvcCB8fCAwKVxyXG5cdFx0fSxcclxuXHJcblx0XHRnZXQgbGVmdCgpXHJcblx0XHR7XHJcblx0XHRcdHJldHVybiAod2luZG93LnBhZ2VYT2Zmc2V0IHx8IERvY0VsZW0uc2Nyb2xsTGVmdCB8fCBCb2R5LnNjcm9sbExlZnQpIC0gKERvY0VsZW0uY2xpZW50TGVmdCB8fCBCb2R5LmNsaWVudExlZnQgfHwgMClcclxuXHRcdH0sXHJcblxyXG5cdFx0Z2V0IHZpZXdwb3J0V2lkdGgoKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gTWF0aC5tYXgoZG9jdW1lbnQuY29tcGF0TW9kZSAhPSAnQ1NTMUNvbXBhdCcgPyBCb2R5LnNjcm9sbFdpZHRoIDogRG9jRWxlbS5zY3JvbGxXaWR0aCwgZ2V0Vmlld3BvcnRXaWR0aCgpKVxyXG5cdFx0fSxcclxuXHJcblx0XHRnZXQgdmlld3BvcnRIZWlnaHQoKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gTWF0aC5tYXgoZG9jdW1lbnQuY29tcGF0TW9kZSAhPSAnQ1NTMUNvbXBhdCcgPyBCb2R5LnNjcm9sbEhlaWdodCA6IERvY0VsZW0uc2Nyb2xsSGVpZ2h0LCBnZXRWaWV3cG9ydEhlaWdodCgpKVxyXG5cdFx0fSxcclxuXHJcblx0XHRhbGwoKVxyXG5cdFx0e1xyXG5cdFx0XHRsZXQgc2VsZiA9IHRoaXM7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0d2lkdGg6IHNlbGYud2lkdGgsXHJcblx0XHRcdFx0aGVpZ2h0OiBzZWxmLmhlaWdodCxcclxuXHRcdFx0XHR2aWV3cG9ydFdpZHRoOiBzZWxmLnZpZXdwb3J0V2lkdGgsXHJcblx0XHRcdFx0dmlld3BvcnRIZWlnaHQ6IHNlbGYudmlld3BvcnRIZWlnaHQsXHJcblx0XHRcdFx0bGVmdDogc2VsZi5sZWZ0LFxyXG5cdFx0XHRcdHRvcDogc2VsZi50b3BcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBhZ2U7Il19
},{"./ready":24}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function (callback) {
	if (docIsReady) setTimeout(callback, 0);else docCall.push(callback);
};

var docIsReady = false;
var docCall = [];

function docLoad() {
	if (!docIsReady) {
		detach();
		docIsReady = true;
	}

	for (var i = 0, len = docCall.length; i < len; i++) {
		try {
			docCall[i]();
		} catch (e) {
			console.log("Fatal ready callback error", e);
		}
	}

	docCall = [];
}

function detach() {
	if (document.addEventListener) {
		document.removeEventListener("DOMContentLoaded", docLoad);
		window.removeEventListener("load", docLoad);
	} else {
		document.detachEvent("onreadystatechange", docLoad);
		window.detachEvent("onload", docLoad);
	}
}

if (typeof window !== "undefined" && typeof document !== "undefined") {
	if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
		setTimeout(docLoad, 0);
	} else if (document.addEventListener) {
		document.addEventListener("DOMContentLoaded", docLoad);
		window.addEventListener("load", docLoad);
	} else {
		document.attachEvent("onreadystatechange", docLoad);
		window.attachEvent("onload", docLoad);

		// If IE and not a frame
		// continually check to see if the document is ready
		var top = false;

		try {
			top = window.frameElement == null && document.documentElement;
		} catch (e) {}

		if (top && top.doScroll) {
			(function doScrollCheck() {
				if (!docIsReady) {

					try {
						top.doScroll("left");
					} catch (e) {
						return window.setTimeout(doScrollCheck, 50);
					}

					docLoad();
				}
			})();
		}
	}
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWR5LmpzIl0sIm5hbWVzIjpbImNhbGxiYWNrIiwiZG9jSXNSZWFkeSIsInNldFRpbWVvdXQiLCJkb2NDYWxsIiwicHVzaCIsImRvY0xvYWQiLCJkZXRhY2giLCJpIiwibGVuIiwibGVuZ3RoIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwid2luZG93IiwiZGV0YWNoRXZlbnQiLCJyZWFkeVN0YXRlIiwiZG9jdW1lbnRFbGVtZW50IiwiZG9TY3JvbGwiLCJhdHRhY2hFdmVudCIsInRvcCIsImZyYW1lRWxlbWVudCIsImRvU2Nyb2xsQ2hlY2siXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFzRWUsVUFBVUEsUUFBVixFQUNmO0FBQ0MsS0FBSUMsVUFBSixFQUFpQkMsV0FBWUYsUUFBWixFQUFzQixDQUF0QixFQUFqQixLQUNLRyxRQUFRQyxJQUFSLENBQWNKLFFBQWQ7QUFDTCxDOztBQXpFRCxJQUFJQyxhQUFhLEtBQWpCO0FBQ0EsSUFBSUUsVUFBVSxFQUFkOztBQUVBLFNBQVNFLE9BQVQsR0FDQTtBQUNDLEtBQUksQ0FBQ0osVUFBTCxFQUFrQjtBQUNqQks7QUFDQUwsZUFBYSxJQUFiO0FBQ0E7O0FBRUQsTUFBSyxJQUFJTSxJQUFJLENBQVIsRUFBV0MsTUFBTUwsUUFBUU0sTUFBOUIsRUFBc0NGLElBQUlDLEdBQTFDLEVBQStDRCxHQUEvQyxFQUFxRDtBQUNwRCxNQUFJO0FBQ0hKLFdBQVFJLENBQVI7QUFDQSxHQUZELENBR0EsT0FBTUcsQ0FBTixFQUFTO0FBQUVDLFdBQVFDLEdBQVIsQ0FBWSw0QkFBWixFQUEwQ0YsQ0FBMUM7QUFBOEM7QUFDekQ7O0FBRURQLFdBQVUsRUFBVjtBQUNBOztBQUVELFNBQVNHLE1BQVQsR0FDQTtBQUNDLEtBQUtPLFNBQVNDLGdCQUFkLEVBQWlDO0FBQ2hDRCxXQUFTRSxtQkFBVCxDQUE4QixrQkFBOUIsRUFBa0RWLE9BQWxEO0FBQ0FXLFNBQU9ELG1CQUFQLENBQTRCLE1BQTVCLEVBQW9DVixPQUFwQztBQUNBLEVBSEQsTUFJSztBQUNKUSxXQUFTSSxXQUFULENBQXNCLG9CQUF0QixFQUE0Q1osT0FBNUM7QUFDQVcsU0FBT0MsV0FBUCxDQUFvQixRQUFwQixFQUE4QlosT0FBOUI7QUFDQTtBQUNEOztBQUVELElBQUksT0FBT1csTUFBUCxLQUFrQixXQUFsQixJQUFpQyxPQUFPSCxRQUFQLEtBQW9CLFdBQXpELEVBQ0E7QUFDQyxLQUFJQSxTQUFTSyxVQUFULEtBQXdCLFVBQXhCLElBQXdDTCxTQUFTSyxVQUFULEtBQXdCLFNBQXhCLElBQXFDLENBQUVMLFNBQVNNLGVBQVQsQ0FBeUJDLFFBQTVHLEVBQXlIO0FBQ3hIbEIsYUFBWUcsT0FBWixFQUFxQixDQUFyQjtBQUNBLEVBRkQsTUFJSyxJQUFLUSxTQUFTQyxnQkFBZCxFQUFpQztBQUNyQ0QsV0FBU0MsZ0JBQVQsQ0FBMkIsa0JBQTNCLEVBQStDVCxPQUEvQztBQUNBVyxTQUFPRixnQkFBUCxDQUF5QixNQUF6QixFQUFpQ1QsT0FBakM7QUFDQSxFQUhJLE1BS0E7QUFDSlEsV0FBU1EsV0FBVCxDQUFzQixvQkFBdEIsRUFBNENoQixPQUE1QztBQUNBVyxTQUFPSyxXQUFQLENBQW9CLFFBQXBCLEVBQThCaEIsT0FBOUI7O0FBRUE7QUFDQTtBQUNBLE1BQUlpQixNQUFNLEtBQVY7O0FBRUEsTUFBSTtBQUNIQSxTQUFNTixPQUFPTyxZQUFQLElBQXVCLElBQXZCLElBQStCVixTQUFTTSxlQUE5QztBQUNBLEdBRkQsQ0FFRSxPQUFRVCxDQUFSLEVBQVksQ0FBRTs7QUFFaEIsTUFBS1ksT0FBT0EsSUFBSUYsUUFBaEIsRUFBMkI7QUFDMUIsSUFBRSxTQUFTSSxhQUFULEdBQXlCO0FBQzFCLFFBQUssQ0FBQ3ZCLFVBQU4sRUFBbUI7O0FBRWxCLFNBQUk7QUFBRXFCLFVBQUlGLFFBQUosQ0FBYyxNQUFkO0FBQXlCLE1BQS9CLENBQ0EsT0FBUVYsQ0FBUixFQUFZO0FBQUUsYUFBT00sT0FBT2QsVUFBUCxDQUFtQnNCLGFBQW5CLEVBQWtDLEVBQWxDLENBQVA7QUFBK0M7O0FBRTdEbkI7QUFDQTtBQUNELElBUkQ7QUFTQTtBQUNEO0FBQ0QiLCJmaWxlIjoicmVhZHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubGV0IGRvY0lzUmVhZHkgPSBmYWxzZTtcclxubGV0IGRvY0NhbGwgPSBbXTtcclxuXHJcbmZ1bmN0aW9uIGRvY0xvYWQoKVxyXG57XHJcblx0aWYoICFkb2NJc1JlYWR5ICkge1xyXG5cdFx0ZGV0YWNoKCk7XHJcblx0XHRkb2NJc1JlYWR5ID0gdHJ1ZVxyXG5cdH1cclxuXHJcblx0Zm9yKCBsZXQgaSA9IDAsIGxlbiA9IGRvY0NhbGwubGVuZ3RoOyBpIDwgbGVuOyBpKysgKSB7XHJcblx0XHR0cnkge1xyXG5cdFx0XHRkb2NDYWxsW2ldKClcclxuXHRcdH1cclxuXHRcdGNhdGNoKGUpIHsgY29uc29sZS5sb2coXCJGYXRhbCByZWFkeSBjYWxsYmFjayBlcnJvclwiLCBlKSB9XHJcblx0fVxyXG5cclxuXHRkb2NDYWxsID0gW11cclxufVxyXG5cclxuZnVuY3Rpb24gZGV0YWNoKClcclxue1xyXG5cdGlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciApIHtcclxuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBkb2NMb2FkICk7XHJcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGRvY0xvYWQgKTtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRkb2N1bWVudC5kZXRhY2hFdmVudCggXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiwgZG9jTG9hZCApO1xyXG5cdFx0d2luZG93LmRldGFjaEV2ZW50KCBcIm9ubG9hZFwiLCBkb2NMb2FkICk7XHJcblx0fVxyXG59XHJcblxyXG5pZiggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgKVxyXG57XHJcblx0aWYoIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiB8fCAoIGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiICYmICEgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XHJcblx0XHRzZXRUaW1lb3V0KCBkb2NMb2FkLCAwIClcclxuXHR9XHJcblxyXG5cdGVsc2UgaWYgKCBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICkge1xyXG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGRvY0xvYWQgKTtcclxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgZG9jTG9hZCApXHJcblx0fVxyXG5cclxuXHRlbHNlIHtcclxuXHRcdGRvY3VtZW50LmF0dGFjaEV2ZW50KCBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLCBkb2NMb2FkICk7XHJcblx0XHR3aW5kb3cuYXR0YWNoRXZlbnQoIFwib25sb2FkXCIsIGRvY0xvYWQgKTtcclxuXHJcblx0XHQvLyBJZiBJRSBhbmQgbm90IGEgZnJhbWVcclxuXHRcdC8vIGNvbnRpbnVhbGx5IGNoZWNrIHRvIHNlZSBpZiB0aGUgZG9jdW1lbnQgaXMgcmVhZHlcclxuXHRcdGxldCB0b3AgPSBmYWxzZTtcclxuXHJcblx0XHR0cnkge1xyXG5cdFx0XHR0b3AgPSB3aW5kb3cuZnJhbWVFbGVtZW50ID09IG51bGwgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xyXG5cdFx0fSBjYXRjaCAoIGUgKSB7fVxyXG5cclxuXHRcdGlmICggdG9wICYmIHRvcC5kb1Njcm9sbCApIHtcclxuXHRcdFx0KCBmdW5jdGlvbiBkb1Njcm9sbENoZWNrKCkge1xyXG5cdFx0XHRcdGlmICggIWRvY0lzUmVhZHkgKSB7XHJcblxyXG5cdFx0XHRcdFx0dHJ5IHsgdG9wLmRvU2Nyb2xsKCBcImxlZnRcIiApOyB9XHJcblx0XHRcdFx0XHRjYXRjaCAoIGUgKSB7IHJldHVybiB3aW5kb3cuc2V0VGltZW91dCggZG9TY3JvbGxDaGVjaywgNTAgKSB9XHJcblxyXG5cdFx0XHRcdFx0ZG9jTG9hZCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSApKCk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiggY2FsbGJhY2sgKVxyXG57XHJcblx0aWYoIGRvY0lzUmVhZHkgKSBzZXRUaW1lb3V0KCBjYWxsYmFjaywgMCApO1xyXG5cdGVsc2UgZG9jQ2FsbC5wdXNoKCBjYWxsYmFjayApXHJcbn0iXX0=
},{}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; // style-sheet.js


exports.default = function (selector) {
	var rules = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

	if ((typeof selector === "undefined" ? "undefined" : _typeof(selector)) === 'object') {
		Object.keys(selector).forEach(function (name) {
			addCSSRule(name, selector[name]);
		});
	} else {
		addCSSRule(selector, rules);
	}
};

var _isBrowser = require("../tools/is-browser");

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DOM_SHEET = void 0,
    index = 0,
    addCSSRule = function addCSSRule(selector, rules) {};

if ((0, _isBrowser2.default)()) {

	// add stylesheets
	DOM_SHEET = function (style) {
		style.appendChild(document.createTextNode("")); // WebKit hack :(
		document.head.appendChild(style);
		return style.sheet;
	}(document.createElement("style"));

	if ("insertRule" in DOM_SHEET) {
		addCSSRule = function addCSSRule(selector, rules) {
			DOM_SHEET.insertRule(selector + "{" + rules + "}", index++);
		};
	} else if ("addRule" in DOM_SHEET) {
		addCSSRule = function addCSSRule(selector, rules) {
			DOM_SHEET.addRule(selector, rules, index++);
		};
	}
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLXNoZWV0cy5qcyJdLCJuYW1lcyI6WyJzZWxlY3RvciIsInJ1bGVzIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJhZGRDU1NSdWxlIiwibmFtZSIsIkRPTV9TSEVFVCIsImluZGV4Iiwic3R5bGUiLCJhcHBlbmRDaGlsZCIsImRvY3VtZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJoZWFkIiwic2hlZXQiLCJjcmVhdGVFbGVtZW50IiwiaW5zZXJ0UnVsZSIsImFkZFJ1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs4UUFBQTs7O2tCQTBCZSxVQUFVQSxRQUFWLEVBQ2Y7QUFBQSxLQURtQ0MsS0FDbkMsdUVBRDJDLElBQzNDOztBQUNDLEtBQUcsUUFBT0QsUUFBUCx5Q0FBT0EsUUFBUCxPQUFvQixRQUF2QixFQUFpQztBQUNoQ0UsU0FBT0MsSUFBUCxDQUFZSCxRQUFaLEVBQXNCSSxPQUF0QixDQUE4QixnQkFBUTtBQUNyQ0MsY0FBV0MsSUFBWCxFQUFpQk4sU0FBU00sSUFBVCxDQUFqQjtBQUNBLEdBRkQ7QUFHQSxFQUpELE1BS0s7QUFDSkQsYUFBV0wsUUFBWCxFQUFxQkMsS0FBckI7QUFDQTtBQUNELEM7O0FBbkNEOzs7Ozs7QUFFQSxJQUFJTSxrQkFBSjtBQUFBLElBQWVDLFFBQVEsQ0FBdkI7QUFBQSxJQUEwQkgsYUFBYSxvQkFBQ0wsUUFBRCxFQUFXQyxLQUFYLEVBQXFCLENBQUUsQ0FBOUQ7O0FBRUEsSUFBSSwwQkFBSixFQUFrQjs7QUFFakI7QUFDQU0sYUFBYSxpQkFBUztBQUNyQkUsUUFBTUMsV0FBTixDQUFrQkMsU0FBU0MsY0FBVCxDQUF3QixFQUF4QixDQUFsQixFQURxQixDQUMyQjtBQUNoREQsV0FBU0UsSUFBVCxDQUFjSCxXQUFkLENBQTBCRCxLQUExQjtBQUNBLFNBQU9BLE1BQU1LLEtBQWI7QUFDQSxFQUpXLENBSVJILFNBQVNJLGFBQVQsQ0FBdUIsT0FBdkIsQ0FKUSxDQUFaOztBQU1BLEtBQUcsZ0JBQWdCUixTQUFuQixFQUE4QjtBQUM3QkYsZUFBYSxvQkFBQ0wsUUFBRCxFQUFXQyxLQUFYLEVBQXFCO0FBQ2pDTSxhQUFVUyxVQUFWLENBQXFCaEIsV0FBVyxHQUFYLEdBQWlCQyxLQUFqQixHQUF5QixHQUE5QyxFQUFtRE8sT0FBbkQ7QUFDQSxHQUZEO0FBR0EsRUFKRCxNQUtLLElBQUcsYUFBYUQsU0FBaEIsRUFBMkI7QUFDL0JGLGVBQWEsb0JBQUNMLFFBQUQsRUFBV0MsS0FBWCxFQUFxQjtBQUNqQ00sYUFBVVUsT0FBVixDQUFrQmpCLFFBQWxCLEVBQTRCQyxLQUE1QixFQUFtQ08sT0FBbkM7QUFDQSxHQUZEO0FBR0E7QUFDRCIsImZpbGUiOiJzdHlsZS1zaGVldHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1zaGVldC5qc1xyXG5pbXBvcnQgSXNCcm93c2VyIGZyb20gXCIuLi90b29scy9pcy1icm93c2VyXCI7XHJcblxyXG5sZXQgRE9NX1NIRUVULCBpbmRleCA9IDAsIGFkZENTU1J1bGUgPSAoc2VsZWN0b3IsIHJ1bGVzKSA9PiB7fTtcclxuXHJcbmlmKCBJc0Jyb3dzZXIoKSApIHtcclxuXHJcblx0Ly8gYWRkIHN0eWxlc2hlZXRzXHJcblx0RE9NX1NIRUVUID0gKHN0eWxlID0+IHtcclxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpKTsgLy8gV2ViS2l0IGhhY2sgOihcclxuXHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xyXG5cdFx0cmV0dXJuIHN0eWxlLnNoZWV0O1xyXG5cdH0pKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIikgKTtcclxuXHJcblx0aWYoXCJpbnNlcnRSdWxlXCIgaW4gRE9NX1NIRUVUKSB7XHJcblx0XHRhZGRDU1NSdWxlID0gKHNlbGVjdG9yLCBydWxlcykgPT4ge1xyXG5cdFx0XHRET01fU0hFRVQuaW5zZXJ0UnVsZShzZWxlY3RvciArIFwie1wiICsgcnVsZXMgKyBcIn1cIiwgaW5kZXggKyspXHJcblx0XHR9O1xyXG5cdH1cclxuXHRlbHNlIGlmKFwiYWRkUnVsZVwiIGluIERPTV9TSEVFVCkge1xyXG5cdFx0YWRkQ1NTUnVsZSA9IChzZWxlY3RvciwgcnVsZXMpID0+IHtcclxuXHRcdFx0RE9NX1NIRUVULmFkZFJ1bGUoc2VsZWN0b3IsIHJ1bGVzLCBpbmRleCArKylcclxuXHRcdH07XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoc2VsZWN0b3IsIHJ1bGVzID0gbnVsbClcclxue1xyXG5cdGlmKHR5cGVvZiBzZWxlY3RvciA9PT0gJ29iamVjdCcpIHtcclxuXHRcdE9iamVjdC5rZXlzKHNlbGVjdG9yKS5mb3JFYWNoKG5hbWUgPT4ge1xyXG5cdFx0XHRhZGRDU1NSdWxlKG5hbWUsIHNlbGVjdG9yW25hbWVdKVxyXG5cdFx0fSlcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRhZGRDU1NSdWxlKHNlbGVjdG9yLCBydWxlcylcclxuXHR9XHJcbn0iXX0=
},{"../tools/is-browser":36}],26:[function(require,module,exports){
(function (global){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require("./index");

var ElsJs = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

ElsJs.Extend(ElsJs);

var ElsObject = ElsJs.ElsJs();

if (ElsJs.Tools.IsBrowser()) window.ElsJs = ElsObject;else if (ElsJs.Tools.IsNode()) global.ElsJs = ElsObject;

exports.default = ElsObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfOGRiMmU0NmUuanMiXSwibmFtZXMiOlsiRWxzSnMiLCJFeHRlbmQiLCJFbHNPYmplY3QiLCJUb29scyIsIklzQnJvd3NlciIsIndpbmRvdyIsIklzTm9kZSIsImdsb2JhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0lBQVlBLEs7Ozs7QUFFWkEsTUFBTUMsTUFBTixDQUFhRCxLQUFiOztBQUVBLElBQU1FLFlBQVlGLE1BQU1BLEtBQU4sRUFBbEI7O0FBRUEsSUFBSUEsTUFBTUcsS0FBTixDQUFZQyxTQUFaLEVBQUosRUFBOEJDLE9BQU9MLEtBQVAsR0FBZUUsU0FBZixDQUE5QixLQUNLLElBQUlGLE1BQU1HLEtBQU4sQ0FBWUcsTUFBWixFQUFKLEVBQTJCQyxPQUFPUCxLQUFQLEdBQWVFLFNBQWY7O2tCQUVqQkEsUyIsImZpbGUiOiJmYWtlXzhkYjJlNDZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRWxzSnMgZnJvbSBcIi4vaW5kZXhcIjtcclxuXHJcbkVsc0pzLkV4dGVuZChFbHNKcyk7XHJcblxyXG5jb25zdCBFbHNPYmplY3QgPSBFbHNKcy5FbHNKcygpO1xyXG5cclxuaWYoIEVsc0pzLlRvb2xzLklzQnJvd3NlcigpICkgd2luZG93LkVsc0pzID0gRWxzT2JqZWN0O1xyXG5lbHNlIGlmKCBFbHNKcy5Ub29scy5Jc05vZGUoKSApIGdsb2JhbC5FbHNKcyA9IEVsc09iamVjdDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVsc09iamVjdDsiXX0=
}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./index":29}],27:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var isSupport = !!(typeof window != "undefined" && "onpopstate" in window);

var fn = [];
var LocationPath = isSupport ? location.pathname + location.search : "";

function change(e) {
	var url = e && e.state && e.state.path;
	if (url !== LocationPath) {
		LocationPath = url;
		for (var i = 0; i < fn.length; i++) {
			fn[i]({ path: url, native: true });
		}
	}
}

if (isSupport) {
	window.addEventListener('popstate', change, false);
}

exports.default = {
	get support() {
		return isSupport;
	},

	get path() {
		return LocationPath;
	},

	on: function on(callback) {
		if (isSupport) {
			fn.push(callback);
		}
	},
	change: function change(path, title) {
		if (isSupport) {
			LocationPath = path;
			history.pushState({ path: LocationPath }, title, path);
		}
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhpc3RvcnkuanMiXSwibmFtZXMiOlsiaXNTdXBwb3J0Iiwid2luZG93IiwiZm4iLCJMb2NhdGlvblBhdGgiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic2VhcmNoIiwiY2hhbmdlIiwiZSIsInVybCIsInN0YXRlIiwicGF0aCIsImkiLCJsZW5ndGgiLCJuYXRpdmUiLCJhZGRFdmVudExpc3RlbmVyIiwic3VwcG9ydCIsIm9uIiwiY2FsbGJhY2siLCJwdXNoIiwidGl0bGUiLCJoaXN0b3J5IiwicHVzaFN0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFNQSxZQUFZLENBQUMsRUFBRyxPQUFPQyxNQUFQLElBQWlCLFdBQWpCLElBQWdDLGdCQUFnQkEsTUFBbkQsQ0FBbkI7O0FBRUEsSUFBSUMsS0FBSyxFQUFUO0FBQ0EsSUFBSUMsZUFBZUgsWUFBWUksU0FBU0MsUUFBVCxHQUFvQkQsU0FBU0UsTUFBekMsR0FBa0QsRUFBckU7O0FBRUEsU0FBU0MsTUFBVCxDQUFnQkMsQ0FBaEIsRUFDQTtBQUNDLEtBQUlDLE1BQU1ELEtBQUtBLEVBQUVFLEtBQVAsSUFBZ0JGLEVBQUVFLEtBQUYsQ0FBUUMsSUFBbEM7QUFDQSxLQUFJRixRQUFRTixZQUFaLEVBQTJCO0FBQzFCQSxpQkFBZU0sR0FBZjtBQUNBLE9BQUssSUFBSUcsSUFBSSxDQUFiLEVBQWdCQSxJQUFJVixHQUFHVyxNQUF2QixFQUErQkQsR0FBL0I7QUFBcUNWLE1BQUdVLENBQUgsRUFBTSxFQUFFRCxNQUFNRixHQUFSLEVBQWFLLFFBQVEsSUFBckIsRUFBTjtBQUFyQztBQUNBO0FBQ0Q7O0FBRUQsSUFBSWQsU0FBSixFQUNBO0FBQ0NDLFFBQU9jLGdCQUFQLENBQXdCLFVBQXhCLEVBQW9DUixNQUFwQyxFQUE0QyxLQUE1QztBQUNBOztrQkFHRDtBQUNDLEtBQUlTLE9BQUosR0FDQTtBQUNDLFNBQU9oQixTQUFQO0FBQ0EsRUFKRjs7QUFNQyxLQUFJVyxJQUFKLEdBQ0E7QUFDQyxTQUFPUixZQUFQO0FBQ0EsRUFURjs7QUFXQ2MsR0FYRCxjQVdLQyxRQVhMLEVBWUM7QUFDQyxNQUFJbEIsU0FBSixFQUNBO0FBQ0NFLE1BQUdpQixJQUFILENBQVFELFFBQVI7QUFDQTtBQUNELEVBakJGO0FBbUJDWCxPQW5CRCxrQkFtQlNJLElBbkJULEVBbUJlUyxLQW5CZixFQW9CQztBQUNDLE1BQUlwQixTQUFKLEVBQWdCO0FBQ2ZHLGtCQUFlUSxJQUFmO0FBQ0FVLFdBQVFDLFNBQVIsQ0FBa0IsRUFBQ1gsTUFBTVIsWUFBUCxFQUFsQixFQUF3Q2lCLEtBQXhDLEVBQStDVCxJQUEvQztBQUNBO0FBQ0Q7QUF6QkYsQyIsImZpbGUiOiJoaXN0b3J5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IGlzU3VwcG9ydCA9ICEhICh0eXBlb2Ygd2luZG93ICE9IFwidW5kZWZpbmVkXCIgJiYgXCJvbnBvcHN0YXRlXCIgaW4gd2luZG93KTtcclxuXHJcbmxldCBmbiA9IFtdO1xyXG5sZXQgTG9jYXRpb25QYXRoID0gaXNTdXBwb3J0ID8gbG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2ggOiBcIlwiO1xyXG5cclxuZnVuY3Rpb24gY2hhbmdlKGUpXHJcbntcclxuXHRsZXQgdXJsID0gZSAmJiBlLnN0YXRlICYmIGUuc3RhdGUucGF0aDtcclxuXHRpZiggdXJsICE9PSBMb2NhdGlvblBhdGggKSB7XHJcblx0XHRMb2NhdGlvblBhdGggPSB1cmw7XHJcblx0XHRmb3IoIHZhciBpID0gMDsgaSA8IGZuLmxlbmd0aDsgaSsrICkgZm5baV0oeyBwYXRoOiB1cmwsIG5hdGl2ZTogdHJ1ZSB9KVxyXG5cdH1cclxufVxyXG5cclxuaWYoIGlzU3VwcG9ydCApXHJcbntcclxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBjaGFuZ2UsIGZhbHNlKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdFxyXG57XHJcblx0Z2V0IHN1cHBvcnQoKVxyXG5cdHtcclxuXHRcdHJldHVybiBpc1N1cHBvcnRcclxuXHR9LFxyXG5cclxuXHRnZXQgcGF0aCgpXHJcblx0e1xyXG5cdFx0cmV0dXJuIExvY2F0aW9uUGF0aFxyXG5cdH0sXHJcblxyXG5cdG9uKCBjYWxsYmFjayApXHJcblx0e1xyXG5cdFx0aWYoIGlzU3VwcG9ydCApXHJcblx0XHR7XHJcblx0XHRcdGZuLnB1c2goY2FsbGJhY2spO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdGNoYW5nZSggcGF0aCwgdGl0bGUgKVxyXG5cdHtcclxuXHRcdGlmKCBpc1N1cHBvcnQgKSB7XHJcblx0XHRcdExvY2F0aW9uUGF0aCA9IHBhdGg7XHJcblx0XHRcdGhpc3RvcnkucHVzaFN0YXRlKHtwYXRoOiBMb2NhdGlvblBhdGh9LCB0aXRsZSwgcGF0aClcclxuXHRcdH1cclxuXHR9XHJcbn07Il19
},{}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
// hot-keys

if (typeof window !== "undefined") {
	window.addEventListener('keydown', keyDown, false);
}

var codes = { 8: "back_space", 9: "tab", 12: "clear", 13: "enter", 14: "enter_special", 16: "shift", 17: "control", 18: "alt", 19: "pause", 20: "caps_lock", 21: "kana", 22: "eisu", 23: "junja", 24: "final", 25: "hanja", 27: "escape", 28: "convert", 29: "nonconvert", 30: "accept", 31: "modechange", 32: "space", 33: "page_up", 34: "page_down", 35: "end", 36: "home", 37: "left", 38: "up", 39: "right", 40: "down", 41: "select", 42: "print", 43: "execute", 44: "printscreen", 45: "insert", 46: "delete", 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 58: "colon", 59: "semicolon", 60: "less_than", 61: "equals", 62: "greater_than", 63: "question_mark", 64: "at", 65: "a", 66: "b", 67: "c", 68: "d", 69: "e", 70: "f", 71: "g", 72: "h", 73: "i", 74: "j", 75: "k", 76: "l", 77: "m", 78: "n", 79: "o", 80: "p", 81: "q", 82: "r", 83: "s", 84: "t", 85: "u", 86: "v", 87: "w", 88: "x", 89: "y", 90: "z", 91: "os_key", 93: "context_menu", 95: "sleep", 96: "num0", 97: "num1", 98: "num2", 99: "num3", 100: "num4", 101: "num5", 102: "num6", 103: "num7", 104: "num8", 105: "num9", 106: "multiply", 107: "add", 108: "separator", 109: "subtract", 110: "decimal", 111: "divide", 112: "f1", 113: "f2", 114: "f3", 115: "f4", 116: "f5", 117: "f6", 118: "f7", 119: "f8", 120: "f9", 121: "f10", 122: "f11", 123: "f12", 124: "f13", 125: "f14", 126: "f15", 127: "f16", 128: "f17", 129: "f18", 130: "f19", 131: "f20", 132: "f21", 133: "f22", 134: "f23", 135: "f24", 144: "num_lock", 145: "scroll_lock", 160: "circumflex", 161: "exclamation", 162: "double_quote", 163: "hash", 164: "dollar", 165: "percent", 166: "ampersand", 167: "underscore", 168: "open_paren", 169: "close_paren", 170: "asterisk", 171: "plus", 172: "pipe", 173: "hyphen_minus", 174: "open_curly_bracket", 175: "close_curly_bracket", 176: "tilde", 186: "semicolon", 187: "equals", 188: "comma", 189: "minus", 190: "period", 191: "slash", 192: "back_quote", 219: "open_bracket", 220: "back_slash", 221: "close_bracket", 222: "quote", 224: "meta", 225: "altgr" };
var standart = { 'save': 'control+s', 'apply': 'shift+control+s', 'back': 'escape', 'esc': 'escape', 'search': 'control+f', 'help': 'control+h' };
var register = {};
var names = {};
var index = 1;

function keyDown(e) {
	var code = e.which || e.keyCode,
	    key = void 0;
	if (code && codes[code]) {
		key = codes[code];
		if (e.altKey) key = 'alt+' + key;
		if (e.shiftKey) key = 'shift+' + key;
		if (e.ctrlKey) key = 'control+' + key;

		if (register[key]) {
			register[key][0].event();
			e.preventDefault();
			e.stopPropagation();
			return false;
		}
	}
}

exports.default = {
	bind: function bind(key, event) {
		key = String(key).toLowerCase();
		if (standart[key]) key = standart[key];
		if (!register[key]) register[key] = [];
		names[index] = key;
		register[key].unshift({ index: index, event: event });
		return index++;
	},
	remove: function remove(key) {
		key = String(key).toLowerCase();
		if (standart[key]) key = standart[key];
		if (register[key]) {
			register[key].forEach(function (e) {
				delete names[e.index];
			});
			delete register[key];
		}
	},
	unbind: function unbind(index) {
		var key = names[index] || null;
		if (key) {
			if (register[key]) {
				for (var i = 0; i < register[key].length; i++) {
					if (register[key][i].index == index) {
						register[key].splice(i, 1);break;
					}
				}
				if (!register[key].length) {
					delete register[key];
				}
			}
			delete names[index];
		}
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Toast = exports.Components = exports.Dom = exports.Tools = exports.Trigger = exports.Storage = exports.Load = exports.HotKeys = exports.History = exports.Data = exports.Cookie = exports.Component = exports.Caller = exports.AjaxJson = exports.Version = exports.Extend = exports.ElsJs = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// services


var _index = require("./dom/index");

var Dom = _interopRequireWildcard(_index);

var _ajaxJson = require("./ajax-json");

var _ajaxJson2 = _interopRequireDefault(_ajaxJson);

var _caller = require("./caller");

var _caller2 = _interopRequireDefault(_caller);

var _component = require("./component");

var Component = _interopRequireWildcard(_component);

var _index2 = require("./components/index");

var Components = _interopRequireWildcard(_index2);

var _cookie = require("./cookie");

var _cookie2 = _interopRequireDefault(_cookie);

var _data = require("./data");

var _data2 = _interopRequireDefault(_data);

var _history = require("./history");

var _history2 = _interopRequireDefault(_history);

var _hotKeys = require("./hot-keys");

var _hotKeys2 = _interopRequireDefault(_hotKeys);

var _load = require("./load");

var _load2 = _interopRequireDefault(_load);

var _storage = require("./storage");

var _storage2 = _interopRequireDefault(_storage);

var _trigger = require("./trigger");

var _trigger2 = _interopRequireDefault(_trigger);

var _index3 = require("./tools/index");

var _index4 = _interopRequireDefault(_index3);

var _toast = require("./toast");

var _toast2 = _interopRequireDefault(_toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Version = 1.01;

var ElsObject = {};

function ElsJs() {
	return ElsObject;
}

function Extend(name) {
	var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

	var type = typeof name === "undefined" ? "undefined" : _typeof(name);

	if (type === 'object' && name !== null) {
		Object.keys(name).forEach(function (n) {
			Extend(n, name[n]);
		});
	} else if (type == 'string' && !ElsObject.hasOwnProperty(name) && !ElsObject[name]) {
		Object.defineProperty(ElsObject, name, {
			value: value,
			configurable: false,
			writable: false
		});
	}
}

Extend({ Extend: Extend, Version: Version });

Component.Add(Components);

exports.ElsJs = ElsJs;
exports.Extend = Extend;
exports.Version = Version;
exports.AjaxJson = _ajaxJson2.default;
exports.Caller = _caller2.default;
exports.Component = Component;
exports.Cookie = _cookie2.default;
exports.Data = _data2.default;
exports.History = _history2.default;
exports.HotKeys = _hotKeys2.default;
exports.Load = _load2.default;
exports.Storage = _storage2.default;
exports.Trigger = _trigger2.default;
exports.Tools = _index4.default;
exports.Dom = Dom;
exports.Components = Components;
exports.Toast = _toast2.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkRvbSIsIkNvbXBvbmVudCIsIkNvbXBvbmVudHMiLCJWZXJzaW9uIiwiRWxzT2JqZWN0IiwiRWxzSnMiLCJFeHRlbmQiLCJuYW1lIiwidmFsdWUiLCJ0eXBlIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJuIiwiaGFzT3duUHJvcGVydHkiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQWRkIiwiQWpheEpzb24iLCJDYWxsZXIiLCJDb29raWUiLCJEYXRhIiwiSGlzdG9yeSIsIkhvdEtleXMiLCJMb2FkIiwiU3RvcmFnZSIsIlRyaWdnZXIiLCJUb29scyIsIlRvYXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFjQTs7O0FBZEE7O0lBQVlBLEc7O0FBQ1o7Ozs7QUFDQTs7OztBQUNBOztJQUFZQyxTOztBQUNaOztJQUFZQyxVOztBQUNaOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFHQTs7Ozs7Ozs7QUFFQSxJQUFNQyxVQUFVLElBQWhCOztBQUVBLElBQUlDLFlBQVksRUFBaEI7O0FBRUEsU0FBU0MsS0FBVCxHQUNBO0FBQ0MsUUFBT0QsU0FBUDtBQUNBOztBQUVELFNBQVNFLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQ0E7QUFBQSxLQURzQkMsS0FDdEIsdUVBRDhCLElBQzlCOztBQUNDLEtBQUlDLGNBQWNGLElBQWQseUNBQWNBLElBQWQsQ0FBSjs7QUFFQSxLQUFJRSxTQUFTLFFBQVQsSUFBcUJGLFNBQVMsSUFBbEMsRUFBeUM7QUFDeENHLFNBQU9DLElBQVAsQ0FBWUosSUFBWixFQUFrQkssT0FBbEIsQ0FBMEIsYUFBSztBQUM5Qk4sVUFBT08sQ0FBUCxFQUFVTixLQUFLTSxDQUFMLENBQVY7QUFDQSxHQUZEO0FBR0EsRUFKRCxNQUtLLElBQUlKLFFBQVEsUUFBUixJQUFvQixDQUFFTCxVQUFVVSxjQUFWLENBQXlCUCxJQUF6QixDQUF0QixJQUF3RCxDQUFFSCxVQUFVRyxJQUFWLENBQTlELEVBQWdGO0FBQ3BGRyxTQUFPSyxjQUFQLENBQXNCWCxTQUF0QixFQUFpQ0csSUFBakMsRUFBdUM7QUFDdENDLFVBQU9BLEtBRCtCO0FBRXRDUSxpQkFBYyxLQUZ3QjtBQUd0Q0MsYUFBVTtBQUg0QixHQUF2QztBQUtBO0FBQ0Q7O0FBRURYLE9BQU8sRUFBRUEsY0FBRixFQUFVSCxnQkFBVixFQUFQOztBQUVBRixVQUFVaUIsR0FBVixDQUFlaEIsVUFBZjs7UUFHQ0csSyxHQUFBQSxLO1FBQU9DLE0sR0FBQUEsTTtRQUFRSCxPLEdBQUFBLE87UUFDZmdCLFE7UUFBVUMsTTtRQUFRbkIsUyxHQUFBQSxTO1FBQVdvQixNO1FBQVFDLEk7UUFBTUMsTztRQUFTQyxPO1FBQVNDLEk7UUFBTUMsTztRQUFTQyxPO1FBQVNDLEs7UUFDckY1QixHLEdBQUFBLEc7UUFBS0UsVSxHQUFBQSxVO1FBQ0wyQixLIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRG9tIGZyb20gXCIuL2RvbS9pbmRleFwiO1xyXG5pbXBvcnQgQWpheEpzb24gZnJvbSBcIi4vYWpheC1qc29uXCI7XHJcbmltcG9ydCBDYWxsZXIgZnJvbSBcIi4vY2FsbGVyXCI7XHJcbmltcG9ydCAqIGFzIENvbXBvbmVudCBmcm9tIFwiLi9jb21wb25lbnRcIjtcclxuaW1wb3J0ICogYXMgQ29tcG9uZW50cyBmcm9tIFwiLi9jb21wb25lbnRzL2luZGV4XCI7XHJcbmltcG9ydCBDb29raWUgZnJvbSBcIi4vY29va2llXCI7XHJcbmltcG9ydCBEYXRhIGZyb20gXCIuL2RhdGFcIjtcclxuaW1wb3J0IEhpc3RvcnkgZnJvbSBcIi4vaGlzdG9yeVwiO1xyXG5pbXBvcnQgSG90S2V5cyBmcm9tIFwiLi9ob3Qta2V5c1wiO1xyXG5pbXBvcnQgTG9hZCBmcm9tIFwiLi9sb2FkXCI7XHJcbmltcG9ydCBTdG9yYWdlIGZyb20gXCIuL3N0b3JhZ2VcIjtcclxuaW1wb3J0IFRyaWdnZXIgZnJvbSBcIi4vdHJpZ2dlclwiO1xyXG5pbXBvcnQgVG9vbHMgZnJvbSBcIi4vdG9vbHMvaW5kZXhcIjtcclxuXHJcbi8vIHNlcnZpY2VzXHJcbmltcG9ydCBUb2FzdCBmcm9tIFwiLi90b2FzdFwiO1xyXG5cclxuY29uc3QgVmVyc2lvbiA9IDEuMDE7XHJcblxyXG5sZXQgRWxzT2JqZWN0ID0ge307XHJcblxyXG5mdW5jdGlvbiBFbHNKcygpXHJcbntcclxuXHRyZXR1cm4gRWxzT2JqZWN0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBFeHRlbmQobmFtZSwgdmFsdWUgPSBudWxsKVxyXG57XHJcblx0bGV0IHR5cGUgPSB0eXBlb2YgbmFtZTtcclxuXHJcblx0aWYoIHR5cGUgPT09ICdvYmplY3QnICYmIG5hbWUgIT09IG51bGwgKSB7XHJcblx0XHRPYmplY3Qua2V5cyhuYW1lKS5mb3JFYWNoKG4gPT4ge1xyXG5cdFx0XHRFeHRlbmQobiwgbmFtZVtuXSlcclxuXHRcdH0pXHJcblx0fVxyXG5cdGVsc2UgaWYoIHR5cGUgPT0gJ3N0cmluZycgJiYgISBFbHNPYmplY3QuaGFzT3duUHJvcGVydHkobmFtZSkgJiYgISBFbHNPYmplY3RbbmFtZV0gKSB7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoRWxzT2JqZWN0LCBuYW1lLCB7XHJcblx0XHRcdHZhbHVlOiB2YWx1ZSxcclxuXHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcclxuXHRcdFx0d3JpdGFibGU6IGZhbHNlXHJcblx0XHR9KVxyXG5cdH1cclxufVxyXG5cclxuRXh0ZW5kKHsgRXh0ZW5kLCBWZXJzaW9uIH0pO1xyXG5cclxuQ29tcG9uZW50LkFkZCggQ29tcG9uZW50cyApO1xyXG5cclxuZXhwb3J0IHtcclxuXHRFbHNKcywgRXh0ZW5kLCBWZXJzaW9uLFxyXG5cdEFqYXhKc29uLCBDYWxsZXIsIENvbXBvbmVudCwgQ29va2llLCBEYXRhLCBIaXN0b3J5LCBIb3RLZXlzLCBMb2FkLCBTdG9yYWdlLCBUcmlnZ2VyLCBUb29scyxcclxuXHREb20sIENvbXBvbmVudHMsXHJcblx0VG9hc3RcclxufSJdfQ==
},{"./ajax-json":1,"./caller":2,"./component":3,"./components/index":6,"./cookie":14,"./data":15,"./dom/index":20,"./history":27,"./hot-keys":28,"./load":30,"./storage":31,"./toast":32,"./tools/index":35,"./trigger":41}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = Load;

// loader

var regCss = /\.css(\?|$)/i;

var loader = {};
var timeout = {};

function createLoaderPromise(file) {
	timeout[file] = new Date().getTime() / 1000;

	var success = [],
	    errors = [],
	    load = 0;
	var css = regCss.test(file);
	var script = document.createElement(css ? "link" : "script");

	script.onload = function () {
		load = 1;
		success.forEach(function (call) {
			return call();
		});
		success = [];
	};

	script.onerror = function () {
		load = 2;
		console.log("can't upload file " + file);
		errors.forEach(function (call) {
			return call();
		});
		errors = [];
	};

	document.getElementsByTagName("head")[0].appendChild(script);

	if (css) {
		script.setAttribute("rel", "stylesheet");
		script.setAttribute("href", file);
	} else {
		script.src = file;
	}

	return {
		then: function then(callback) {
			if (load < 1) {
				success.push(callback);
			} else if (load === 1) {
				callback();
			}

			return this;
		},
		catch: function _catch(callback) {
			if (load < 1) {
				errors.push(callback);
			} else if (load === 2) {
				callback();
				var time = new Date().getTime() / 1000;

				if (time - timeout[file] > 10) {
					setTimeout(function () {
						delete loader[file];delete timeout[file];
					}, 1);
				}
			}

			return this;
		}
	};
}

// state

function Load(src, success) {
	var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	if (typeof src == "string") {
		src = [src];
	}

	if (!error) {
		error = function error() {
			throw new Error("Can't upload all files");
		};
	}

	if (typeof document == "undefined") {
		return error();
	}

	var wait = src.length,
	    err = false,
	    test = function test(upload) {
		wait--;
		if (!upload) {
			err = true;
		}

		if (wait < 1) {
			err ? error() : success();
		}
	};

	if (!wait) {
		error();
	} else {
		src.forEach(function (file) {
			if (!loader[file]) {
				loader[file] = createLoaderPromise(file);
			}
			loader[file].then(function () {
				return test(true);
			}).catch(function () {
				return test(false);
			});
		});
	}
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWQuanMiXSwibmFtZXMiOlsiTG9hZCIsInJlZ0NzcyIsImxvYWRlciIsInRpbWVvdXQiLCJjcmVhdGVMb2FkZXJQcm9taXNlIiwiZmlsZSIsIkRhdGUiLCJnZXRUaW1lIiwic3VjY2VzcyIsImVycm9ycyIsImxvYWQiLCJjc3MiLCJ0ZXN0Iiwic2NyaXB0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwib25sb2FkIiwiZm9yRWFjaCIsImNhbGwiLCJvbmVycm9yIiwiY29uc29sZSIsImxvZyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYXBwZW5kQ2hpbGQiLCJzZXRBdHRyaWJ1dGUiLCJzcmMiLCJ0aGVuIiwiY2FsbGJhY2siLCJwdXNoIiwiY2F0Y2giLCJ0aW1lIiwic2V0VGltZW91dCIsImVycm9yIiwiRXJyb3IiLCJ3YWl0IiwibGVuZ3RoIiwiZXJyIiwidXBsb2FkIl0sIm1hcHBpbmdzIjoiOzs7OztrQkE0RXdCQSxJOztBQTNFeEI7O0FBRUEsSUFBTUMsU0FBUyxjQUFmOztBQUVBLElBQUlDLFNBQVUsRUFBZDtBQUNBLElBQUlDLFVBQVUsRUFBZDs7QUFFQSxTQUFTQyxtQkFBVCxDQUE4QkMsSUFBOUIsRUFDQTtBQUNDRixTQUFRRSxJQUFSLElBQWlCLElBQUlDLElBQUosRUFBRCxDQUFhQyxPQUFiLEtBQXVCLElBQXZDOztBQUVBLEtBQUlDLFVBQVUsRUFBZDtBQUFBLEtBQWtCQyxTQUFTLEVBQTNCO0FBQUEsS0FBK0JDLE9BQU8sQ0FBdEM7QUFDQSxLQUFJQyxNQUFNVixPQUFPVyxJQUFQLENBQWFQLElBQWIsQ0FBVjtBQUNBLEtBQUlRLFNBQVNDLFNBQVNDLGFBQVQsQ0FBd0JKLE1BQU0sTUFBTixHQUFlLFFBQXZDLENBQWI7O0FBRUFFLFFBQU9HLE1BQVAsR0FBZ0IsWUFBWTtBQUMzQk4sU0FBTyxDQUFQO0FBQ0FGLFVBQVFTLE9BQVIsQ0FBZ0IsVUFBQ0MsSUFBRDtBQUFBLFVBQVVBLE1BQVY7QUFBQSxHQUFoQjtBQUNBVixZQUFVLEVBQVY7QUFDQSxFQUpEOztBQU1BSyxRQUFPTSxPQUFQLEdBQWlCLFlBQVk7QUFDNUJULFNBQU8sQ0FBUDtBQUNBVSxVQUFRQyxHQUFSLENBQVksdUJBQXVCaEIsSUFBbkM7QUFDQUksU0FBT1EsT0FBUCxDQUFlLFVBQUNDLElBQUQ7QUFBQSxVQUFVQSxNQUFWO0FBQUEsR0FBZjtBQUNBVCxXQUFTLEVBQVQ7QUFDQSxFQUxEOztBQU9BSyxVQUFTUSxvQkFBVCxDQUE4QixNQUE5QixFQUFzQyxDQUF0QyxFQUF5Q0MsV0FBekMsQ0FBcURWLE1BQXJEOztBQUVBLEtBQUlGLEdBQUosRUFBVTtBQUNURSxTQUFPVyxZQUFQLENBQXFCLEtBQXJCLEVBQTRCLFlBQTVCO0FBQ0FYLFNBQU9XLFlBQVAsQ0FBcUIsTUFBckIsRUFBNkJuQixJQUE3QjtBQUNBLEVBSEQsTUFJSztBQUNKUSxTQUFPWSxHQUFQLEdBQWFwQixJQUFiO0FBQ0E7O0FBRUQsUUFBTztBQUVOcUIsTUFGTSxnQkFFQUMsUUFGQSxFQUdOO0FBQ0MsT0FBSWpCLE9BQU8sQ0FBWCxFQUFlO0FBQ2RGLFlBQVFvQixJQUFSLENBQWNELFFBQWQ7QUFDQSxJQUZELE1BR0ssSUFBSWpCLFNBQVMsQ0FBYixFQUFpQjtBQUNyQmlCO0FBQ0E7O0FBRUQsVUFBTyxJQUFQO0FBQ0EsR0FaSztBQWNORSxPQWRNLGtCQWNDRixRQWRELEVBZU47QUFDQyxPQUFJakIsT0FBTyxDQUFYLEVBQWU7QUFDZEQsV0FBT21CLElBQVAsQ0FBYUQsUUFBYjtBQUNBLElBRkQsTUFHSyxJQUFJakIsU0FBUyxDQUFiLEVBQWlCO0FBQ3JCaUI7QUFDQSxRQUFJRyxPQUFRLElBQUl4QixJQUFKLEVBQUQsQ0FBYUMsT0FBYixLQUF1QixJQUFsQzs7QUFFQSxRQUFJdUIsT0FBTzNCLFFBQVFFLElBQVIsQ0FBUCxHQUF1QixFQUEzQixFQUFnQztBQUMvQjBCLGdCQUFXLFlBQVk7QUFDdEIsYUFBTzdCLE9BQU9HLElBQVAsQ0FBUCxDQUFxQixPQUFPRixRQUFRRSxJQUFSLENBQVA7QUFDckIsTUFGRCxFQUVHLENBRkg7QUFHQTtBQUNEOztBQUVELFVBQU8sSUFBUDtBQUNBO0FBL0JLLEVBQVA7QUFpQ0E7O0FBRUQ7O0FBRWUsU0FBU0wsSUFBVCxDQUFleUIsR0FBZixFQUFvQmpCLE9BQXBCLEVBQ2Y7QUFBQSxLQUQ0Q3dCLEtBQzVDLHVFQURvRCxLQUNwRDs7QUFDQyxLQUFJLE9BQU9QLEdBQVAsSUFBYyxRQUFsQixFQUE2QjtBQUM1QkEsUUFBTSxDQUFDQSxHQUFELENBQU47QUFDQTs7QUFFRCxLQUFJLENBQUNPLEtBQUwsRUFBYTtBQUNaQSxVQUFRLGlCQUFXO0FBQ2xCLFNBQU0sSUFBSUMsS0FBSixDQUFVLHdCQUFWLENBQU47QUFDQSxHQUZEO0FBR0E7O0FBRUQsS0FBSSxPQUFPbkIsUUFBUCxJQUFtQixXQUF2QixFQUFxQztBQUNwQyxTQUFPa0IsT0FBUDtBQUNBOztBQUVELEtBQUlFLE9BQU9ULElBQUlVLE1BQWY7QUFBQSxLQUNDQyxNQUFPLEtBRFI7QUFBQSxLQUVDeEIsT0FBTyxTQUFQQSxJQUFPLENBQVN5QixNQUFULEVBQ1A7QUFDQ0g7QUFDQSxNQUFJLENBQUNHLE1BQUwsRUFBYztBQUNiRCxTQUFNLElBQU47QUFDQTs7QUFFRCxNQUFJRixPQUFPLENBQVgsRUFBZTtBQUNkRSxTQUFNSixPQUFOLEdBQWdCeEIsU0FBaEI7QUFDQTtBQUNELEVBWkY7O0FBY0EsS0FBSSxDQUFDMEIsSUFBTCxFQUFZO0FBQ1hGO0FBQ0EsRUFGRCxNQUdLO0FBQ0pQLE1BQUlSLE9BQUosQ0FBWSxVQUFDWixJQUFELEVBQVU7QUFDckIsT0FBSSxDQUFFSCxPQUFPRyxJQUFQLENBQU4sRUFBcUI7QUFDcEJILFdBQU9HLElBQVAsSUFBZUQsb0JBQW9CQyxJQUFwQixDQUFmO0FBQ0E7QUFDREgsVUFBT0csSUFBUCxFQUFhcUIsSUFBYixDQUFrQjtBQUFBLFdBQU1kLEtBQUssSUFBTCxDQUFOO0FBQUEsSUFBbEIsRUFBb0NpQixLQUFwQyxDQUEwQztBQUFBLFdBQU1qQixLQUFLLEtBQUwsQ0FBTjtBQUFBLElBQTFDO0FBQ0EsR0FMRDtBQU1BO0FBQ0QiLCJmaWxlIjoibG9hZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBsb2FkZXJcclxuXHJcbmNvbnN0IHJlZ0NzcyA9IC9cXC5jc3MoXFw/fCQpL2k7XHJcblxyXG5sZXQgbG9hZGVyICA9IHt9O1xyXG5sZXQgdGltZW91dCA9IHt9O1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlTG9hZGVyUHJvbWlzZSggZmlsZSApXHJcbntcclxuXHR0aW1lb3V0W2ZpbGVdID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKS8xMDAwO1xyXG5cclxuXHRsZXQgc3VjY2VzcyA9IFtdLCBlcnJvcnMgPSBbXSwgbG9hZCA9IDA7XHJcblx0bGV0IGNzcyA9IHJlZ0Nzcy50ZXN0KCBmaWxlICk7XHJcblx0bGV0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIGNzcyA/IFwibGlua1wiIDogXCJzY3JpcHRcIiApO1xyXG5cclxuXHRzY3JpcHQub25sb2FkID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0bG9hZCA9IDE7XHJcblx0XHRzdWNjZXNzLmZvckVhY2goKGNhbGwpID0+IGNhbGwoKSk7XHJcblx0XHRzdWNjZXNzID0gW11cclxuXHR9O1xyXG5cclxuXHRzY3JpcHQub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdGxvYWQgPSAyO1xyXG5cdFx0Y29uc29sZS5sb2coXCJjYW4ndCB1cGxvYWQgZmlsZSBcIiArIGZpbGUpO1xyXG5cdFx0ZXJyb3JzLmZvckVhY2goKGNhbGwpID0+IGNhbGwoKSk7XHJcblx0XHRlcnJvcnMgPSBbXVxyXG5cdH07XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG5cclxuXHRpZiggY3NzICkge1xyXG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZSggXCJyZWxcIiwgXCJzdHlsZXNoZWV0XCIgKTtcclxuXHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoIFwiaHJlZlwiLCBmaWxlIClcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRzY3JpcHQuc3JjID0gZmlsZVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIHtcclxuXHJcblx0XHR0aGVuKCBjYWxsYmFjayApXHJcblx0XHR7XHJcblx0XHRcdGlmKCBsb2FkIDwgMSApIHtcclxuXHRcdFx0XHRzdWNjZXNzLnB1c2goIGNhbGxiYWNrIClcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmKCBsb2FkID09PSAxICkge1xyXG5cdFx0XHRcdGNhbGxiYWNrKClcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIHRoaXNcclxuXHRcdH0sXHJcblxyXG5cdFx0Y2F0Y2goIGNhbGxiYWNrIClcclxuXHRcdHtcclxuXHRcdFx0aWYoIGxvYWQgPCAxICkge1xyXG5cdFx0XHRcdGVycm9ycy5wdXNoKCBjYWxsYmFjayApXHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiggbG9hZCA9PT0gMiApIHtcclxuXHRcdFx0XHRjYWxsYmFjaygpO1xyXG5cdFx0XHRcdGxldCB0aW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKS8xMDAwO1xyXG5cclxuXHRcdFx0XHRpZiggdGltZSAtIHRpbWVvdXRbZmlsZV0gPiAxMCApIHtcclxuXHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRkZWxldGUgbG9hZGVyW2ZpbGVdOyBkZWxldGUgdGltZW91dFtmaWxlXVxyXG5cdFx0XHRcdFx0fSwgMSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB0aGlzXHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLyBzdGF0ZVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9hZCggc3JjLCBzdWNjZXNzLCBlcnJvciA9IGZhbHNlIClcclxue1xyXG5cdGlmKCB0eXBlb2Ygc3JjID09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRzcmMgPSBbc3JjXTtcclxuXHR9XHJcblxyXG5cdGlmKCAhZXJyb3IgKSB7XHJcblx0XHRlcnJvciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCB1cGxvYWQgYWxsIGZpbGVzXCIpXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpZiggdHlwZW9mIGRvY3VtZW50ID09IFwidW5kZWZpbmVkXCIgKSB7XHJcblx0XHRyZXR1cm4gZXJyb3IoKVxyXG5cdH1cclxuXHJcblx0bGV0IHdhaXQgPSBzcmMubGVuZ3RoLFxyXG5cdFx0ZXJyICA9IGZhbHNlLFxyXG5cdFx0dGVzdCA9IGZ1bmN0aW9uKHVwbG9hZClcclxuXHRcdHtcclxuXHRcdFx0d2FpdCAtLTtcclxuXHRcdFx0aWYoICF1cGxvYWQgKSB7XHJcblx0XHRcdFx0ZXJyID0gdHJ1ZVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiggd2FpdCA8IDEgKSB7XHJcblx0XHRcdFx0ZXJyID8gZXJyb3IoKSA6IHN1Y2Nlc3MoKVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRpZiggIXdhaXQgKSB7XHJcblx0XHRlcnJvcigpXHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0c3JjLmZvckVhY2goKGZpbGUpID0+IHtcclxuXHRcdFx0aWYoICEgbG9hZGVyW2ZpbGVdICkge1xyXG5cdFx0XHRcdGxvYWRlcltmaWxlXSA9IGNyZWF0ZUxvYWRlclByb21pc2UoZmlsZSlcclxuXHRcdFx0fVxyXG5cdFx0XHRsb2FkZXJbZmlsZV0udGhlbigoKSA9PiB0ZXN0KHRydWUpKS5jYXRjaCgoKSA9PiB0ZXN0KGZhbHNlKSlcclxuXHRcdH0pXHJcblx0fVxyXG59Il19
},{}],31:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var re = /^>>>@(b|d|n|s|o):/;

var support = false;
var Dump = {};

if (typeof window !== "undefined") {
	try {
		var storage = window.localStorage,
		    x = '__storage_test__';
		storage.setItem(x, x);
		if (storage.getItem(x) === x && JSON.parse('{"a":true}').a === true) {
			storage.removeItem(x);
			support = true;
		}
	} catch (e) {}
}

function parse(value) {
	var m = typeof value === 'string' && value.match(re);
	if (m) {
		var key = m[1],
		    _parse = value.substr(6);
		if (key === 'o') {
			try {
				return JSON.parse(_parse);
			} catch (e) {
				return value;
			}
		}
		return key === 'b' ? _parse === 'true' : key === 'd' ? parseFloat(_parse) : key === 'n' ? null : _parse;
	}

	return value === undefined ? null : value;
}

exports.default = {

	get support() {
		return support;
	},

	set: function set(name, value) {
		if (support) {
			var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
			localStorage.setItem(name, '>>>@' + (type === 'string' ? 's:' + value : type === 'boolean' ? 'b:' + String(value) : value === null ? 'n:null' : type === 'number' ? 'd:' + String(value) : 'o:' + JSON.stringify(value)));
		} else {
			Dump[name] = value;
		}
		return this;
	},
	get: function get(name) {
		if (support) {
			return parse(localStorage.getItem(name));
		} else {
			return Dump[name] === undefined ? null : Dump[name];
		}
	},
	clear: function clear() {
		if (support) {
			localStorage.clear();
		} else {
			Dump = {};
		}
		return this;
	},
	remove: function remove(name) {
		if (support) {
			localStorage.removeItem(name);
		} else {
			delete Dump[name];
		}
		return this;
	},
	on: function on(callBack) {
		if (support) {
			window.addEventListener('storage', function (e) {
				callBack(e.key, parse(e.newValue), e);
			});
		}
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsicmUiLCJzdXBwb3J0IiwiRHVtcCIsIndpbmRvdyIsInN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJ4Iiwic2V0SXRlbSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJhIiwicmVtb3ZlSXRlbSIsImUiLCJ2YWx1ZSIsIm0iLCJtYXRjaCIsImtleSIsInN1YnN0ciIsInBhcnNlRmxvYXQiLCJ1bmRlZmluZWQiLCJzZXQiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInN0cmluZ2lmeSIsImdldCIsImNsZWFyIiwicmVtb3ZlIiwib24iLCJjYWxsQmFjayIsImFkZEV2ZW50TGlzdGVuZXIiLCJuZXdWYWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQSxJQUFNQSxLQUFLLG1CQUFYOztBQUVBLElBQUlDLFVBQVUsS0FBZDtBQUNBLElBQUlDLE9BQU8sRUFBWDs7QUFFQSxJQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBb0M7QUFDbkMsS0FBSTtBQUNILE1BQUlDLFVBQVVELE9BQU9FLFlBQXJCO0FBQUEsTUFBbUNDLElBQUksa0JBQXZDO0FBQ0FGLFVBQVFHLE9BQVIsQ0FBZ0JELENBQWhCLEVBQW1CQSxDQUFuQjtBQUNBLE1BQUlGLFFBQVFJLE9BQVIsQ0FBZ0JGLENBQWhCLE1BQXVCQSxDQUF2QixJQUE0QkcsS0FBS0MsS0FBTCxDQUFXLFlBQVgsRUFBeUJDLENBQXpCLEtBQStCLElBQS9ELEVBQXNFO0FBQ3JFUCxXQUFRUSxVQUFSLENBQW1CTixDQUFuQjtBQUNBTCxhQUFVLElBQVY7QUFDQTtBQUNELEVBUEQsQ0FRQSxPQUFNWSxDQUFOLEVBQVMsQ0FBRTtBQUNYOztBQUVELFNBQVNILEtBQVQsQ0FBZUksS0FBZixFQUNBO0FBQ0MsS0FBSUMsSUFBSSxPQUFPRCxLQUFQLEtBQWlCLFFBQWpCLElBQTZCQSxNQUFNRSxLQUFOLENBQVloQixFQUFaLENBQXJDO0FBQ0EsS0FBSWUsQ0FBSixFQUFRO0FBQ1AsTUFBSUUsTUFBTUYsRUFBRSxDQUFGLENBQVY7QUFBQSxNQUFnQkwsU0FBUUksTUFBTUksTUFBTixDQUFhLENBQWIsQ0FBeEI7QUFDQSxNQUFJRCxRQUFRLEdBQVosRUFBa0I7QUFDakIsT0FBSTtBQUNILFdBQU9SLEtBQUtDLEtBQUwsQ0FBV0EsTUFBWCxDQUFQO0FBQ0EsSUFGRCxDQUVFLE9BQU9HLENBQVAsRUFBVTtBQUNYLFdBQU9DLEtBQVA7QUFDQTtBQUNEO0FBQ0QsU0FBT0csUUFBUSxHQUFSLEdBQWNQLFdBQVUsTUFBeEIsR0FBa0NPLFFBQVEsR0FBUixHQUFjRSxXQUFXVCxNQUFYLENBQWQsR0FBbUNPLFFBQVEsR0FBUixHQUFjLElBQWQsR0FBcUJQLE1BQWpHO0FBQ0E7O0FBRUQsUUFBT0ksVUFBVU0sU0FBVixHQUFzQixJQUF0QixHQUE2Qk4sS0FBcEM7QUFDQTs7a0JBRWM7O0FBRWQsS0FBSWIsT0FBSixHQUNBO0FBQ0MsU0FBT0EsT0FBUDtBQUNBLEVBTGE7O0FBT2RvQixJQVBjLGVBT1RDLElBUFMsRUFPSFIsS0FQRyxFQVFkO0FBQ0MsTUFBSWIsT0FBSixFQUFjO0FBQ2IsT0FBSXNCLGNBQWNULEtBQWQseUNBQWNBLEtBQWQsQ0FBSjtBQUNBVCxnQkFBYUUsT0FBYixDQUFzQmUsSUFBdEIsRUFBNEIsVUFDM0JDLFNBQVMsUUFBVCxHQUFvQixPQUFPVCxLQUEzQixHQUNDUyxTQUFTLFNBQVQsR0FBcUIsT0FBT0MsT0FBT1YsS0FBUCxDQUE1QixHQUNFQSxVQUFVLElBQVYsR0FBaUIsUUFBakIsR0FDQ1MsU0FBUyxRQUFULEdBQW9CLE9BQU9DLE9BQU9WLEtBQVAsQ0FBM0IsR0FBMkMsT0FBT0wsS0FBS2dCLFNBQUwsQ0FBZVgsS0FBZixDQUozQixDQUE1QjtBQUtBLEdBUEQsTUFRSztBQUNKWixRQUFLb0IsSUFBTCxJQUFhUixLQUFiO0FBQ0E7QUFDRCxTQUFPLElBQVA7QUFDQSxFQXJCYTtBQXVCZFksSUF2QmMsZUF1QlRKLElBdkJTLEVBd0JkO0FBQ0MsTUFBSXJCLE9BQUosRUFBYztBQUNiLFVBQU9TLE1BQU1MLGFBQWFHLE9BQWIsQ0FBc0JjLElBQXRCLENBQU4sQ0FBUDtBQUNBLEdBRkQsTUFHSztBQUNKLFVBQU9wQixLQUFLb0IsSUFBTCxNQUFlRixTQUFmLEdBQTJCLElBQTNCLEdBQWtDbEIsS0FBS29CLElBQUwsQ0FBekM7QUFDQTtBQUNELEVBL0JhO0FBaUNkSyxNQWpDYyxtQkFrQ2Q7QUFDQyxNQUFJMUIsT0FBSixFQUFjO0FBQ2JJLGdCQUFhc0IsS0FBYjtBQUNBLEdBRkQsTUFHSztBQUNKekIsVUFBTyxFQUFQO0FBQ0E7QUFDRCxTQUFPLElBQVA7QUFDQSxFQTFDYTtBQTRDZDBCLE9BNUNjLGtCQTRDTk4sSUE1Q00sRUE2Q2Q7QUFDQyxNQUFJckIsT0FBSixFQUFjO0FBQ2JJLGdCQUFhTyxVQUFiLENBQXlCVSxJQUF6QjtBQUNBLEdBRkQsTUFHSztBQUNKLFVBQU9wQixLQUFLb0IsSUFBTCxDQUFQO0FBQ0E7QUFDRCxTQUFPLElBQVA7QUFDQSxFQXJEYTtBQXVEZE8sR0F2RGMsY0F1RFZDLFFBdkRVLEVBd0RkO0FBQ0MsTUFBSTdCLE9BQUosRUFBYztBQUNiRSxVQUFPNEIsZ0JBQVAsQ0FBd0IsU0FBeEIsRUFBbUMsVUFBQ2xCLENBQUQsRUFBTztBQUN6Q2lCLGFBQVNqQixFQUFFSSxHQUFYLEVBQWdCUCxNQUFNRyxFQUFFbUIsUUFBUixDQUFoQixFQUFtQ25CLENBQW5DO0FBQ0EsSUFGRDtBQUdBO0FBQ0Q7QUE5RGEsQyIsImZpbGUiOiJzdG9yYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHJlID0gL14+Pj5AKGJ8ZHxufHN8byk6LztcclxuXHJcbmxldCBzdXBwb3J0ID0gZmFsc2U7XHJcbmxldCBEdW1wID0ge307XHJcblxyXG5pZiggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHR0cnkge1xyXG5cdFx0dmFyIHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlLCB4ID0gJ19fc3RvcmFnZV90ZXN0X18nO1xyXG5cdFx0c3RvcmFnZS5zZXRJdGVtKHgsIHgpO1xyXG5cdFx0aWYoIHN0b3JhZ2UuZ2V0SXRlbSh4KSA9PT0geCAmJiBKU09OLnBhcnNlKCd7XCJhXCI6dHJ1ZX0nKS5hID09PSB0cnVlICkge1xyXG5cdFx0XHRzdG9yYWdlLnJlbW92ZUl0ZW0oeCk7XHJcblx0XHRcdHN1cHBvcnQgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRjYXRjaChlKSB7fVxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZSh2YWx1ZSlcclxue1xyXG5cdGxldCBtID0gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5tYXRjaChyZSk7XHJcblx0aWYoIG0gKSB7XHJcblx0XHRsZXQga2V5ID0gbVsxXSwgcGFyc2UgPSB2YWx1ZS5zdWJzdHIoNik7XHJcblx0XHRpZigga2V5ID09PSAnbycgKSB7XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0cmV0dXJuIEpTT04ucGFyc2UocGFyc2UpXHJcblx0XHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0XHRyZXR1cm4gdmFsdWVcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGtleSA9PT0gJ2InID8gcGFyc2UgPT09ICd0cnVlJyA6IChrZXkgPT09ICdkJyA/IHBhcnNlRmxvYXQocGFyc2UpIDogKGtleSA9PT0gJ24nID8gbnVsbCA6IHBhcnNlKSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IG51bGwgOiB2YWx1ZTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cclxuXHRnZXQgc3VwcG9ydCgpXHJcblx0e1xyXG5cdFx0cmV0dXJuIHN1cHBvcnRcclxuXHR9LFxyXG5cclxuXHRzZXQoIG5hbWUsIHZhbHVlIClcclxuXHR7XHJcblx0XHRpZiggc3VwcG9ydCApIHtcclxuXHRcdFx0bGV0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XHJcblx0XHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKCBuYW1lLCAnPj4+QCcgKyAoXHJcblx0XHRcdFx0dHlwZSA9PT0gJ3N0cmluZycgPyAnczonICsgdmFsdWUgOlxyXG5cdFx0XHRcdFx0dHlwZSA9PT0gJ2Jvb2xlYW4nID8gJ2I6JyArIFN0cmluZyh2YWx1ZSkgOlxyXG5cdFx0XHRcdFx0XHQodmFsdWUgPT09IG51bGwgPyAnbjpudWxsJyA6XHJcblx0XHRcdFx0XHRcdFx0KHR5cGUgPT09ICdudW1iZXInID8gJ2Q6JyArIFN0cmluZyh2YWx1ZSkgOiAnbzonICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpKSkpKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdER1bXBbbmFtZV0gPSB2YWx1ZVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9LFxyXG5cclxuXHRnZXQoIG5hbWUgKVxyXG5cdHtcclxuXHRcdGlmKCBzdXBwb3J0ICkge1xyXG5cdFx0XHRyZXR1cm4gcGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oIG5hbWUgKSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0cmV0dXJuIER1bXBbbmFtZV0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBEdW1wW25hbWVdXHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Y2xlYXIoKVxyXG5cdHtcclxuXHRcdGlmKCBzdXBwb3J0ICkge1xyXG5cdFx0XHRsb2NhbFN0b3JhZ2UuY2xlYXIoKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdER1bXAgPSB7fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9LFxyXG5cclxuXHRyZW1vdmUoIG5hbWUgKVxyXG5cdHtcclxuXHRcdGlmKCBzdXBwb3J0ICkge1xyXG5cdFx0XHRsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSggbmFtZSApXHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0ZGVsZXRlIER1bXBbbmFtZV1cclxuXHRcdH1cclxuXHRcdHJldHVybiB0aGlzXHJcblx0fSxcclxuXHJcblx0b24oIGNhbGxCYWNrIClcclxuXHR7XHJcblx0XHRpZiggc3VwcG9ydCApIHtcclxuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCAoZSkgPT4ge1xyXG5cdFx0XHRcdGNhbGxCYWNrKGUua2V5LCBwYXJzZShlLm5ld1ZhbHVlKSwgZSlcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG59OyJdfQ==
},{}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactDom = require("react-dom");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _index = require("./dom/index");

var _toastElement = require("./components/services/toast-element");

var _toastElement2 = _interopRequireDefault(_toastElement);

var _isBrowser = require("./tools/is-browser");

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _init = false;

var NODE_TERM = null,
    NODE_WRAP = null,
    autoID = 0;

var logs = {},
    timeout = {},
    react = {},
    stateData = {},
    opened = false;

var termTop = 10;
var termDir = "TR";
var prevDir = null;
var centerCalc = false;

function toastInit() {
	if (!_init && (0, _isBrowser2.default)() && document.body) {

		// create elements

		NODE_TERM = _index.Element.create({ id: "toast-console", className: "toast-console", style: { display: "none" }, parent: document.body });
		NODE_WRAP = _index.Element.create({ className: "toast-wrap", parent: NODE_TERM });
		Toast.dir = termDir;

		// add stylesheets

		(0, _index.StyleSheets)({
			".toast-console": 'position: fixed; left: 0; right: 0; height: 0',
			".toast-console .toast-wrap, .toast-console .toast": 'position: relative',
			".toast-console .toast": 'padding: 10px; background-color: rgba(0,0,0,.92); color: white',
			".toast-console.dir-top": 'top: 0',
			".toast-console.dir-bottom": 'bottom: 0',
			".toast-element": 'position: absolute',
			".toast-console.dir-left .toast-element": 'left: 0',
			".toast-console.dir-right .toast-element": 'right: 0'
		});

		try {
			var a = _index.Element.create(),
			    b = "calc(100% - 1px)";
			a.style.left = b;
			centerCalc = a.style.left === b;
		} catch (e) {}

		if (!centerCalc) {
			(0, _index.StyleSheets)({
				".toast-console.dir-center .toast-element": 'left: 50%',
				".toast-console.dir-center .toast": 'left: -50%'
			});
		}

		_init = true;
	}

	return _init;
}

function toastOpen(props) {
	// open ...
	if (!toastInit()) {
		throw Error("Document page is not ready");
	}

	var state = typeof props === 'string' ? { message: props } : Object.assign({}, props);
	if (!state.id) {
		state.id = 'auto-' + ++autoID;
	}

	var id = state.id,
	    calculate = !logs[id];

	// create node element

	if (stateData[id]) {
		state = Object.assign(stateData[id], state);
	}

	if (calculate) {
		delete react[id];
		logs[id] = _index.Element.create({ id: "toast-" + id, className: 'toast-element fade', parent: NODE_WRAP, prepend: true });
	}

	// remove old timeout

	if (timeout[id]) {
		clearTimeout(timeout[id]);
		timeout[id] = 0;
		_index.ClassName.add(logs[id], "in");
	}

	state.level = (state.level || 'debug').toLowerCase();

	// create new timeout

	if (typeof state.progress == 'number') {
		state.timeout = false;
	}

	if (state.timeout !== false) {

		var time = typeof state.timeout === 'number' ? state.timeout : 10;

		if (time < 30) {
			time *= 1000;
		} else if (time < 1000) {
			time = 5000;
		}

		timeout[id] = setTimeout(function () {
			return toastClose(id);
		}, time);
	}

	if (state.hasOwnProperty('timeout')) {
		delete state.timeout;
	}

	state.closable = state.closable !== false;
	state.onClose = function () {
		toastClose(id);
	};

	if (!react[id]) {
		react[id] = _reactDom2.default.render(_react2.default.createElement(_toastElement2.default, state), logs[id]);
	} else {
		react[id].setState(state);
	}

	if (!opened) {
		opened = true;
		NODE_TERM.style.display = 'block';
		_index.Event.Add(window, "resize orientationchange", calc);
	}

	stateData[id] = state;
	if (calculate) {
		calc();
		setTimeout(function () {
			if (logs[id] && logs[id].parentNode) {
				_index.ClassName.add(logs[id], "in");
			}
		}, 10);
	}

	return id;
}

function toastClose(id) {
	if (logs[id]) {

		if (timeout[id]) {
			clearTimeout(timeout[id]);
		}

		_index.ClassName.remove(logs[id], "in");

		timeout[id] = setTimeout(function () {

			var element = logs[id];

			delete logs[id];
			delete timeout[id];
			delete stateData[id];

			if (element) {
				NODE_WRAP.removeChild(element);

				if (!NODE_WRAP.firstChild) {
					opened = false;
					NODE_TERM.style.display = 'none';
					_index.Event.Remove(window, "resize orientationchange", calc);
				} else {
					calc();
				}
			}
		}, 300);
	}
}

function calc() {
	var val = 0,
	    top = termDir[0] == "T",
	    key = top ? "top" : "bottom",
	    cnt = centerCalc && termDir[1] == "C",
	    changeVertical = (prevDir ? prevDir[0] == "T" ? "top" : "bottom" : null) === key ? false : top ? "bottom" : "top",
	    changeHorizontal = centerCalc && prevDir && !cnt && prevDir[1] == "C",
	    element = NODE_WRAP.firstChild,
	    fromValue = void 0,
	    toValue = void 0;

	prevDir = termDir;

	while (element) {

		val += termTop;
		fromValue = element.style[key];
		toValue = val + 'px';

		if (fromValue !== toValue) {
			element.style[key] = toValue;
		}

		if (changeVertical) {
			element.style[changeVertical] = "";
		}

		if (changeHorizontal) {
			element.style.left = "";
		} else if (cnt) {
			element.style.left = "calc(50% - " + element.offsetWidth / 2 + "px)";
		}

		val += element.offsetHeight;
		element = element.nextSibling;
	}
}

var ToastItem = function () {
	function ToastItem(id) {
		_classCallCheck(this, ToastItem);

		Object.defineProperty(this, "id", {
			value: id,
			configurable: false,
			writable: false
		});
	}

	_createClass(ToastItem, [{
		key: "close",
		value: function close() {
			toastClose(this.id);
		}
	}, {
		key: "progress",
		value: function progress(value) {
			var id = this.id;
			if (react[id]) {
				react[id].progress(value);
			}
		}
	}, {
		key: "update",
		value: function update() {
			var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			var id = this.id;
			if (this.isOpen) {
				if (typeof props === 'string') {
					props = { message: props };
				}
				props.id = id;
				toastOpen(props);
			}
		}
	}, {
		key: "isOpen",
		get: function get() {
			return logs.hasOwnProperty(this.id);
		}
	}]);

	return ToastItem;
}();

var Toast = {

	get divider() {
		return termTop;
	},

	set divider(value) {
		if (typeof value == "number" && value >= 0 && value <= 50) {
			termTop = value;
		}
	},

	get dir() {
		return termDir;
	},

	set dir(value) {
		if ((0, _isBrowser2.default)()) {
			var newVal = "",
			    className = "toast-console";
			value = String(value).toUpperCase();

			// bottom
			if (~value.indexOf("B")) {
				newVal += 'B';
				className += " dir-bottom";
			} else {
				newVal += 'T';
				className += " dir-top";
			}

			if (~value.indexOf("L")) {
				newVal += 'L';
				className += " dir-left";
			} else if (~value.indexOf("C")) {
				newVal += 'C';
				className += " dir-center";
			} else {
				newVal += 'R';
				className += " dir-right";
			}

			termDir = newVal;
			if (NODE_TERM) NODE_TERM.className = className;
			_init && calc();
		}
	},

	close: function close() {
		var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

		toastClose(id);
		return this;
	},
	closeAll: function closeAll() {
		Object.keys(logs).forEach(function (id) {
			return toastClose(id);
		});
		return this;
	},


	update: calc,

	progress: function progress(id, value) {
		if (react[id]) {
			react[id].progress(value);
		}
		return this;
	},
	opened: function opened() {
		var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

		if (id) {
			return logs.hasOwnProperty(id);
		} else {
			return NODE_WRAP.firstChild ? true : false;
		}
	},
	open: function open() {
		var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

		return new ToastItem(toastOpen(props));
	}
};

exports.default = Toast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{"./components/services/toast-element":11,"./dom/index":20,"./tools/is-browser":36,"react":230,"react-dom":42}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _isBrowser = require("./is-browser");

var _isBrowser2 = _interopRequireDefault(_isBrowser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// set default Polyphemus

if (!Array.isArray) {
	Array.isArray = function (arg) {
		return Object.prototype.toString.call(arg) === '[object Array]';
	};
}

// matches, closest

if ((0, _isBrowser2.default)() && window.Element) {
	var proto = Element.prototype;

	if (!proto.matches) {
		proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector || function (selector) {
			var matches = (this.document || this.ownerDocument).querySelectorAll(selector),
			    i = matches.length;
			while (--i >= 0 && matches.item(i) !== this) {}
			return i > -1;
		};
	}

	if (!proto.closest) {
		proto.closest = function (selector) {
			var node = this;
			while (node) {
				if (node.matches(selector)) return node;else node = node.parentElement;
			}
			return null;
		};
	}
}

exports.default = {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuanMiXSwibmFtZXMiOlsiQXJyYXkiLCJpc0FycmF5IiwiYXJnIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwid2luZG93IiwiRWxlbWVudCIsInByb3RvIiwibWF0Y2hlcyIsIm1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwib01hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsInNlbGVjdG9yIiwiZG9jdW1lbnQiLCJvd25lckRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImkiLCJsZW5ndGgiLCJpdGVtIiwiY2xvc2VzdCIsIm5vZGUiLCJwYXJlbnRFbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUE7O0FBRUEsSUFBRyxDQUFDQSxNQUFNQyxPQUFWLEVBQW1CO0FBQ2xCRCxPQUFNQyxPQUFOLEdBQWdCLFVBQVNDLEdBQVQsRUFBYztBQUM3QixTQUFPQyxPQUFPQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JKLEdBQS9CLE1BQXdDLGdCQUEvQztBQUNBLEVBRkQ7QUFHQTs7QUFFRDs7QUFFQSxJQUFHLDhCQUFlSyxPQUFPQyxPQUF6QixFQUFrQztBQUNqQyxLQUFJQyxRQUFRRCxRQUFRSixTQUFwQjs7QUFFQSxLQUFJLENBQUNLLE1BQU1DLE9BQVgsRUFBcUI7QUFDcEJELFFBQU1DLE9BQU4sR0FDQ0QsTUFBTUUsZUFBTixJQUNBRixNQUFNRyxrQkFETixJQUVBSCxNQUFNSSxpQkFGTixJQUdBSixNQUFNSyxnQkFITixJQUlBTCxNQUFNTSxxQkFKTixJQUtBLFVBQVNDLFFBQVQsRUFBbUI7QUFDbEIsT0FBSU4sVUFBVSxDQUFDLEtBQUtPLFFBQUwsSUFBaUIsS0FBS0MsYUFBdkIsRUFBc0NDLGdCQUF0QyxDQUF1REgsUUFBdkQsQ0FBZDtBQUFBLE9BQWdGSSxJQUFJVixRQUFRVyxNQUE1RjtBQUNBLFVBQU8sRUFBRUQsQ0FBRixJQUFPLENBQVAsSUFBWVYsUUFBUVksSUFBUixDQUFhRixDQUFiLE1BQW9CLElBQXZDLEVBQTZDLENBQUU7QUFDL0MsVUFBT0EsSUFBSSxDQUFDLENBQVo7QUFDQSxHQVZGO0FBV0E7O0FBRUQsS0FBSSxDQUFDWCxNQUFNYyxPQUFYLEVBQXFCO0FBQ3BCZCxRQUFNYyxPQUFOLEdBQ0MsVUFBU1AsUUFBVCxFQUFtQjtBQUNsQixPQUFJUSxPQUFPLElBQVg7QUFDQSxVQUFNQSxJQUFOLEVBQVk7QUFDWCxRQUFJQSxLQUFLZCxPQUFMLENBQWFNLFFBQWIsQ0FBSixFQUE0QixPQUFPUSxJQUFQLENBQTVCLEtBQ0tBLE9BQU9BLEtBQUtDLGFBQVo7QUFDTDtBQUNELFVBQU8sSUFBUDtBQUNBLEdBUkY7QUFTQTtBQUNEOztrQkFFYyxFIiwiZmlsZSI6ImJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSXNCcm93c2VyIGZyb20gXCIuL2lzLWJyb3dzZXJcIjtcclxuXHJcbi8vIHNldCBkZWZhdWx0IFBvbHlwaGVtdXNcclxuXHJcbmlmKCFBcnJheS5pc0FycmF5KSB7XHJcblx0QXJyYXkuaXNBcnJheSA9IGZ1bmN0aW9uKGFyZykge1xyXG5cdFx0cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmcpID09PSAnW29iamVjdCBBcnJheV0nO1xyXG5cdH07XHJcbn1cclxuXHJcbi8vIG1hdGNoZXMsIGNsb3Nlc3RcclxuXHJcbmlmKElzQnJvd3NlcigpICYmIHdpbmRvdy5FbGVtZW50KSB7XHJcblx0bGV0IHByb3RvID0gRWxlbWVudC5wcm90b3R5cGU7XHJcblxyXG5cdGlmKCAhcHJvdG8ubWF0Y2hlcyApIHtcclxuXHRcdHByb3RvLm1hdGNoZXMgPVxyXG5cdFx0XHRwcm90by5tYXRjaGVzU2VsZWN0b3IgfHxcclxuXHRcdFx0cHJvdG8ubW96TWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRcdHByb3RvLm1zTWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRcdHByb3RvLm9NYXRjaGVzU2VsZWN0b3IgfHxcclxuXHRcdFx0cHJvdG8ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRcdGZ1bmN0aW9uKHNlbGVjdG9yKSB7XHJcblx0XHRcdFx0dmFyIG1hdGNoZXMgPSAodGhpcy5kb2N1bWVudCB8fCB0aGlzLm93bmVyRG9jdW1lbnQpLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpLCBpID0gbWF0Y2hlcy5sZW5ndGg7XHJcblx0XHRcdFx0d2hpbGUgKC0taSA+PSAwICYmIG1hdGNoZXMuaXRlbShpKSAhPT0gdGhpcykge31cclxuXHRcdFx0XHRyZXR1cm4gaSA+IC0xO1xyXG5cdFx0XHR9O1xyXG5cdH1cclxuXHJcblx0aWYoICFwcm90by5jbG9zZXN0ICkge1xyXG5cdFx0cHJvdG8uY2xvc2VzdCA9XHJcblx0XHRcdGZ1bmN0aW9uKHNlbGVjdG9yKSB7XHJcblx0XHRcdFx0dmFyIG5vZGUgPSB0aGlzO1xyXG5cdFx0XHRcdHdoaWxlKG5vZGUpIHtcclxuXHRcdFx0XHRcdGlmIChub2RlLm1hdGNoZXMoc2VsZWN0b3IpKSByZXR1cm4gbm9kZTtcclxuXHRcdFx0XHRcdGVsc2Ugbm9kZSA9IG5vZGUucGFyZW50RWxlbWVudDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHRcdH07XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7fSJdfQ==
},{"./is-browser":36}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _isScalar = require("./is-scalar");

var _isScalar2 = _interopRequireDefault(_isScalar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Data = {};

var Emitter = function () {
	function Emitter() {
		var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

		_classCallCheck(this, Emitter);

		this.reload(props);
	}

	_createClass(Emitter, [{
		key: "get",
		value: function get(name) {
			return this.data[name];
		}
	}, {
		key: "set",
		value: function set(name, value) {
			var trigger = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

			var self = this,
			    data = self.data,
			    caller = self.caller,
			    triggers = self.triggers,
			    scalar = (0, _isScalar2.default)(value);

			if (!self.getIs(name) || !scalar || !self.scalar[name] || value !== data[name]) {
				data[name] = value;
				self.scalar[name] = scalar;

				if (trigger !== false && triggers.hasOwnProperty(name) && caller.indexOf(name) < 1) {
					caller.push(name);

					var evn = {
						get name() {
							return name;
						},
						get value() {
							return data[name];
						}
					};

					for (var i = 0, length = triggers[name].length; i < length; i++) {
						triggers[name][i](evn);
					}

					var index = caller.indexOf(name);
					if (~index) {
						caller.splice(index, 1);
					}
				}
			}

			return self;
		}
	}, {
		key: "getIs",
		value: function getIs(name) {
			return this.data.hasOwnProperty(name);
		}
	}, {
		key: "remove",
		value: function remove(name) {
			if (this.getIs(name)) {
				delete this.data[name];
			}
			return this;
		}
	}, {
		key: "trigger",
		value: function trigger(name, callback) {
			var triggers = this.triggers;
			if (!triggers.hasOwnProperty(name)) {
				Object.defineProperty(triggers, name, { value: [] });
			}
			triggers[name].push(callback);
			return this;
		}
	}, {
		key: "off",
		value: function off(name, callback) {
			var triggers = this.triggers;
			if (triggers.hasOwnProperty(name)) {
				for (var items = triggers[name], index;;) {
					index = items.indexOf(callback);
					if (index > -1) {
						items.splice(index, 1);
					} else {
						break;
					}
				}
				if (!triggers[name].length) {
					delete triggers[name];
				}
			}
			return this;
		}
	}, {
		key: "getData",
		value: function getData() {
			return this.data;
		}
	}, {
		key: "clear",
		value: function clear() {
			this.reload();
		}
	}, {
		key: "reload",
		value: function reload() {
			var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			this.data = props;
			this.triggers = {};
			this.scalar = {};
			this.caller = [];
		}

		/**
   *
   * @param name
   * @returns {Emitter}
   */

	}], [{
		key: "ready",
		value: function ready(name) {
			if (name instanceof Emitter) {
				return name;
			}
			if (!Data.hasOwnProperty(name)) {
				Object.defineProperty(Data, name, {
					value: new Emitter(),
					configurable: false,
					writable: false
				});
			}
			return Data[name];
		}
	}]);

	return Emitter;
}();

exports.default = Emitter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtaXR0ZXIuanMiXSwibmFtZXMiOlsiRGF0YSIsIkVtaXR0ZXIiLCJwcm9wcyIsInJlbG9hZCIsIm5hbWUiLCJkYXRhIiwidmFsdWUiLCJ0cmlnZ2VyIiwic2VsZiIsImNhbGxlciIsInRyaWdnZXJzIiwic2NhbGFyIiwiZ2V0SXMiLCJoYXNPd25Qcm9wZXJ0eSIsImluZGV4T2YiLCJwdXNoIiwiZXZuIiwiaSIsImxlbmd0aCIsImluZGV4Iiwic3BsaWNlIiwiY2FsbGJhY2siLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIml0ZW1zIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBSUEsT0FBTyxFQUFYOztJQUVNQyxPO0FBRUwsb0JBQ0E7QUFBQSxNQURZQyxLQUNaLHVFQURvQixFQUNwQjs7QUFBQTs7QUFDQyxPQUFLQyxNQUFMLENBQVlELEtBQVo7QUFDQTs7OztzQkFFR0UsSSxFQUNKO0FBQ0MsVUFBTyxLQUFLQyxJQUFMLENBQVVELElBQVYsQ0FBUDtBQUNBOzs7c0JBRUdBLEksRUFBTUUsSyxFQUNWO0FBQUEsT0FEaUJDLE9BQ2pCLHVFQUQyQixJQUMzQjs7QUFDQyxPQUFJQyxPQUFXLElBQWY7QUFBQSxPQUNDSCxPQUFXRyxLQUFLSCxJQURqQjtBQUFBLE9BRUNJLFNBQVdELEtBQUtDLE1BRmpCO0FBQUEsT0FHQ0MsV0FBV0YsS0FBS0UsUUFIakI7QUFBQSxPQUlDQyxTQUFXLHdCQUFTTCxLQUFULENBSlo7O0FBTUEsT0FBSSxDQUFDRSxLQUFLSSxLQUFMLENBQVdSLElBQVgsQ0FBRCxJQUFxQixDQUFDTyxNQUF0QixJQUFnQyxDQUFDSCxLQUFLRyxNQUFMLENBQVlQLElBQVosQ0FBakMsSUFBc0RFLFVBQVVELEtBQUtELElBQUwsQ0FBcEUsRUFBaUY7QUFDaEZDLFNBQUtELElBQUwsSUFBYUUsS0FBYjtBQUNBRSxTQUFLRyxNQUFMLENBQVlQLElBQVosSUFBb0JPLE1BQXBCOztBQUVBLFFBQUlKLFlBQVksS0FBWixJQUFxQkcsU0FBU0csY0FBVCxDQUF3QlQsSUFBeEIsQ0FBckIsSUFBc0RLLE9BQU9LLE9BQVAsQ0FBZVYsSUFBZixJQUF1QixDQUFqRixFQUFxRjtBQUNwRkssWUFBT00sSUFBUCxDQUFZWCxJQUFaOztBQUVBLFNBQUlZLE1BQU07QUFDVCxVQUFJWixJQUFKLEdBQVc7QUFBRSxjQUFPQSxJQUFQO0FBQWEsT0FEakI7QUFFVCxVQUFJRSxLQUFKLEdBQVk7QUFBRSxjQUFPRCxLQUFLRCxJQUFMLENBQVA7QUFBbUI7QUFGeEIsTUFBVjs7QUFLQSxVQUFLLElBQUlhLElBQUksQ0FBUixFQUFXQyxTQUFTUixTQUFTTixJQUFULEVBQWVjLE1BQXhDLEVBQWdERCxJQUFJQyxNQUFwRCxFQUE0REQsR0FBNUQsRUFBa0U7QUFDakVQLGVBQVNOLElBQVQsRUFBZWEsQ0FBZixFQUFrQkQsR0FBbEI7QUFDQTs7QUFFRCxTQUFJRyxRQUFRVixPQUFPSyxPQUFQLENBQWVWLElBQWYsQ0FBWjtBQUNBLFNBQUksQ0FBQ2UsS0FBTCxFQUFhO0FBQ1pWLGFBQU9XLE1BQVAsQ0FBY0QsS0FBZCxFQUFxQixDQUFyQjtBQUNBO0FBQ0Q7QUFDRDs7QUFFRCxVQUFPWCxJQUFQO0FBQ0E7Ozt3QkFFS0osSSxFQUNOO0FBQ0MsVUFBTyxLQUFLQyxJQUFMLENBQVVRLGNBQVYsQ0FBeUJULElBQXpCLENBQVA7QUFDQTs7O3lCQUVNQSxJLEVBQ1A7QUFDQyxPQUFJLEtBQUtRLEtBQUwsQ0FBV1IsSUFBWCxDQUFKLEVBQXVCO0FBQ3RCLFdBQU8sS0FBS0MsSUFBTCxDQUFVRCxJQUFWLENBQVA7QUFDQTtBQUNELFVBQU8sSUFBUDtBQUNBOzs7MEJBRU9BLEksRUFBTWlCLFEsRUFDZDtBQUNDLE9BQUlYLFdBQVcsS0FBS0EsUUFBcEI7QUFDQSxPQUFJLENBQUVBLFNBQVNHLGNBQVQsQ0FBd0JULElBQXhCLENBQU4sRUFBc0M7QUFDckNrQixXQUFPQyxjQUFQLENBQXNCYixRQUF0QixFQUFnQ04sSUFBaEMsRUFBc0MsRUFBRUUsT0FBTyxFQUFULEVBQXRDO0FBQ0E7QUFDREksWUFBU04sSUFBVCxFQUFlVyxJQUFmLENBQW9CTSxRQUFwQjtBQUNBLFVBQU8sSUFBUDtBQUNBOzs7c0JBRUdqQixJLEVBQU1pQixRLEVBQ1Y7QUFDQyxPQUFJWCxXQUFXLEtBQUtBLFFBQXBCO0FBQ0EsT0FBSUEsU0FBU0csY0FBVCxDQUF3QlQsSUFBeEIsQ0FBSixFQUFvQztBQUNuQyxTQUFJLElBQUlvQixRQUFRZCxTQUFTTixJQUFULENBQVosRUFBNEJlLEtBQWhDLElBQXlDO0FBQ3hDQSxhQUFRSyxNQUFNVixPQUFOLENBQWNPLFFBQWQsQ0FBUjtBQUNBLFNBQUlGLFFBQVEsQ0FBQyxDQUFiLEVBQWlCO0FBQ2hCSyxZQUFNSixNQUFOLENBQWFELEtBQWIsRUFBb0IsQ0FBcEI7QUFDQSxNQUZELE1BR0s7QUFDSjtBQUNBO0FBQ0Q7QUFDRCxRQUFJLENBQUNULFNBQVNOLElBQVQsRUFBZWMsTUFBcEIsRUFBNkI7QUFDNUIsWUFBT1IsU0FBU04sSUFBVCxDQUFQO0FBQ0E7QUFDRDtBQUNELFVBQU8sSUFBUDtBQUNBOzs7NEJBR0Q7QUFDQyxVQUFPLEtBQUtDLElBQVo7QUFDQTs7OzBCQUdEO0FBQ0MsUUFBS0YsTUFBTDtBQUNBOzs7MkJBR0Q7QUFBQSxPQURPRCxLQUNQLHVFQURlLEVBQ2Y7O0FBQ0MsUUFBS0csSUFBTCxHQUFZSCxLQUFaO0FBQ0EsUUFBS1EsUUFBTCxHQUFnQixFQUFoQjtBQUNBLFFBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0EsUUFBS0YsTUFBTCxHQUFjLEVBQWQ7QUFDQTs7QUFFRDs7Ozs7Ozs7d0JBS2FMLEksRUFDYjtBQUNDLE9BQUlBLGdCQUFnQkgsT0FBcEIsRUFBOEI7QUFDN0IsV0FBT0csSUFBUDtBQUNBO0FBQ0QsT0FBSSxDQUFFSixLQUFLYSxjQUFMLENBQW9CVCxJQUFwQixDQUFOLEVBQWtDO0FBQ2pDa0IsV0FBT0MsY0FBUCxDQUFzQnZCLElBQXRCLEVBQTRCSSxJQUE1QixFQUFrQztBQUNqQ0UsWUFBTyxJQUFJTCxPQUFKLEVBRDBCO0FBRWpDd0IsbUJBQWMsS0FGbUI7QUFHakNDLGVBQVU7QUFIdUIsS0FBbEM7QUFLQTtBQUNELFVBQU8xQixLQUFLSSxJQUFMLENBQVA7QUFDQTs7Ozs7O2tCQUdhSCxPIiwiZmlsZSI6ImVtaXR0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSXNTY2FsYXIgZnJvbSBcIi4vaXMtc2NhbGFyXCI7XHJcblxyXG5sZXQgRGF0YSA9IHt9O1xyXG5cclxuY2xhc3MgRW1pdHRlclxyXG57XHJcblx0Y29uc3RydWN0b3IocHJvcHMgPSB7fSlcclxuXHR7XHJcblx0XHR0aGlzLnJlbG9hZChwcm9wcylcclxuXHR9XHJcblxyXG5cdGdldChuYW1lKVxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLmRhdGFbbmFtZV1cclxuXHR9XHJcblxyXG5cdHNldChuYW1lLCB2YWx1ZSwgdHJpZ2dlciA9IHRydWUpXHJcblx0e1xyXG5cdFx0bGV0IHNlbGYgICAgID0gdGhpcyxcclxuXHRcdFx0ZGF0YSAgICAgPSBzZWxmLmRhdGEsXHJcblx0XHRcdGNhbGxlciAgID0gc2VsZi5jYWxsZXIsXHJcblx0XHRcdHRyaWdnZXJzID0gc2VsZi50cmlnZ2VycyxcclxuXHRcdFx0c2NhbGFyICAgPSBJc1NjYWxhcih2YWx1ZSk7XHJcblxyXG5cdFx0aWYoICFzZWxmLmdldElzKG5hbWUpIHx8ICFzY2FsYXIgfHwgIXNlbGYuc2NhbGFyW25hbWVdIHx8IHZhbHVlICE9PSBkYXRhW25hbWVdICkge1xyXG5cdFx0XHRkYXRhW25hbWVdID0gdmFsdWU7XHJcblx0XHRcdHNlbGYuc2NhbGFyW25hbWVdID0gc2NhbGFyO1xyXG5cclxuXHRcdFx0aWYoIHRyaWdnZXIgIT09IGZhbHNlICYmIHRyaWdnZXJzLmhhc093blByb3BlcnR5KG5hbWUpICYmIGNhbGxlci5pbmRleE9mKG5hbWUpIDwgMSApIHtcclxuXHRcdFx0XHRjYWxsZXIucHVzaChuYW1lKTtcclxuXHJcblx0XHRcdFx0bGV0IGV2biA9IHtcclxuXHRcdFx0XHRcdGdldCBuYW1lKCkgeyByZXR1cm4gbmFtZSB9LFxyXG5cdFx0XHRcdFx0Z2V0IHZhbHVlKCkgeyByZXR1cm4gZGF0YVtuYW1lXSB9XHJcblx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0Zm9yKCBsZXQgaSA9IDAsIGxlbmd0aCA9IHRyaWdnZXJzW25hbWVdLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrICkge1xyXG5cdFx0XHRcdFx0dHJpZ2dlcnNbbmFtZV1baV0oZXZuKVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0bGV0IGluZGV4ID0gY2FsbGVyLmluZGV4T2YobmFtZSk7XHJcblx0XHRcdFx0aWYoIH5pbmRleCApIHtcclxuXHRcdFx0XHRcdGNhbGxlci5zcGxpY2UoaW5kZXgsIDEpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHNlbGY7XHJcblx0fVxyXG5cclxuXHRnZXRJcyhuYW1lKVxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLmRhdGEuaGFzT3duUHJvcGVydHkobmFtZSlcclxuXHR9XHJcblxyXG5cdHJlbW92ZShuYW1lKVxyXG5cdHtcclxuXHRcdGlmKCB0aGlzLmdldElzKG5hbWUpICkge1xyXG5cdFx0XHRkZWxldGUgdGhpcy5kYXRhW25hbWVdXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9XHJcblxyXG5cdHRyaWdnZXIobmFtZSwgY2FsbGJhY2spXHJcblx0e1xyXG5cdFx0bGV0IHRyaWdnZXJzID0gdGhpcy50cmlnZ2VycztcclxuXHRcdGlmKCAhIHRyaWdnZXJzLmhhc093blByb3BlcnR5KG5hbWUpICkge1xyXG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkodHJpZ2dlcnMsIG5hbWUsIHsgdmFsdWU6IFtdIH0pXHJcblx0XHR9XHJcblx0XHR0cmlnZ2Vyc1tuYW1lXS5wdXNoKGNhbGxiYWNrKTtcclxuXHRcdHJldHVybiB0aGlzXHJcblx0fVxyXG5cclxuXHRvZmYobmFtZSwgY2FsbGJhY2spXHJcblx0e1xyXG5cdFx0bGV0IHRyaWdnZXJzID0gdGhpcy50cmlnZ2VycztcclxuXHRcdGlmKCB0cmlnZ2Vycy5oYXNPd25Qcm9wZXJ0eShuYW1lKSApIHtcclxuXHRcdFx0Zm9yKGxldCBpdGVtcyA9IHRyaWdnZXJzW25hbWVdLCBpbmRleDs7KSB7XHJcblx0XHRcdFx0aW5kZXggPSBpdGVtcy5pbmRleE9mKGNhbGxiYWNrKTtcclxuXHRcdFx0XHRpZiggaW5kZXggPiAtMSApIHtcclxuXHRcdFx0XHRcdGl0ZW1zLnNwbGljZShpbmRleCwgMSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZiggIXRyaWdnZXJzW25hbWVdLmxlbmd0aCApIHtcclxuXHRcdFx0XHRkZWxldGUgdHJpZ2dlcnNbbmFtZV1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9XHJcblxyXG5cdGdldERhdGEoKVxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLmRhdGFcclxuXHR9XHJcblxyXG5cdGNsZWFyKClcclxuXHR7XHJcblx0XHR0aGlzLnJlbG9hZCgpXHJcblx0fVxyXG5cclxuXHRyZWxvYWQocHJvcHMgPSB7fSlcclxuXHR7XHJcblx0XHR0aGlzLmRhdGEgPSBwcm9wcztcclxuXHRcdHRoaXMudHJpZ2dlcnMgPSB7fTtcclxuXHRcdHRoaXMuc2NhbGFyID0ge307XHJcblx0XHR0aGlzLmNhbGxlciA9IFtdO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICpcclxuXHQgKiBAcGFyYW0gbmFtZVxyXG5cdCAqIEByZXR1cm5zIHtFbWl0dGVyfVxyXG5cdCAqL1xyXG5cdHN0YXRpYyByZWFkeShuYW1lKVxyXG5cdHtcclxuXHRcdGlmKCBuYW1lIGluc3RhbmNlb2YgRW1pdHRlciApIHtcclxuXHRcdFx0cmV0dXJuIG5hbWVcclxuXHRcdH1cclxuXHRcdGlmKCAhIERhdGEuaGFzT3duUHJvcGVydHkobmFtZSkgKSB7XHJcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXRhLCBuYW1lLCB7XHJcblx0XHRcdFx0dmFsdWU6IG5ldyBFbWl0dGVyKCksXHJcblx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcclxuXHRcdFx0XHR3cml0YWJsZTogZmFsc2VcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdHJldHVybiBEYXRhW25hbWVdXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFbWl0dGVyOyJdfQ==
},{"./is-scalar":39}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

require("./base");

var _emitter = require("./emitter");

var _emitter2 = _interopRequireDefault(_emitter);

var _isBrowser = require("./is-browser");

var _isBrowser2 = _interopRequireDefault(_isBrowser);

var _isNode = require("./is-node");

var _isNode2 = _interopRequireDefault(_isNode);

var _isNumber = require("./is-number");

var _isNumber2 = _interopRequireDefault(_isNumber);

var _isScalar = require("./is-scalar");

var _isScalar2 = _interopRequireDefault(_isScalar);

var _measureScrollbar = require("./measure-scrollbar");

var _measureScrollbar2 = _interopRequireDefault(_measureScrollbar);

var _proto = require("../components/proto");

var Component = _interopRequireWildcard(_proto);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	Emitter: _emitter2.default, IsBrowser: _isBrowser2.default, IsNode: _isNode2.default, IsNumber: _isNumber2.default, IsScalar: _isScalar2.default, MeasureScrollbar: _measureScrollbar2.default, Component: Component
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkNvbXBvbmVudCIsIkVtaXR0ZXIiLCJJc0Jyb3dzZXIiLCJJc05vZGUiLCJJc051bWJlciIsIklzU2NhbGFyIiwiTWVhc3VyZVNjcm9sbGJhciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0lBQVlBLFM7Ozs7OztrQkFFRztBQUNkQywyQkFEYyxFQUNMQyw4QkFESyxFQUNNQyx3QkFETixFQUNjQyw0QkFEZCxFQUN3QkMsNEJBRHhCLEVBQ2tDQyw0Q0FEbEMsRUFDb0ROO0FBRHBELEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuL2Jhc2VcIjtcclxuaW1wb3J0IEVtaXR0ZXIgZnJvbSBcIi4vZW1pdHRlclwiO1xyXG5pbXBvcnQgSXNCcm93c2VyIGZyb20gXCIuL2lzLWJyb3dzZXJcIjtcclxuaW1wb3J0IElzTm9kZSBmcm9tIFwiLi9pcy1ub2RlXCI7XHJcbmltcG9ydCBJc051bWJlciBmcm9tIFwiLi9pcy1udW1iZXJcIjtcclxuaW1wb3J0IElzU2NhbGFyIGZyb20gXCIuL2lzLXNjYWxhclwiO1xyXG5pbXBvcnQgTWVhc3VyZVNjcm9sbGJhciBmcm9tIFwiLi9tZWFzdXJlLXNjcm9sbGJhclwiO1xyXG5pbXBvcnQgKiBhcyBDb21wb25lbnQgZnJvbSBcIi4uL2NvbXBvbmVudHMvcHJvdG9cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRFbWl0dGVyLCBJc0Jyb3dzZXIsIElzTm9kZSwgSXNOdW1iZXIsIElzU2NhbGFyLCBNZWFzdXJlU2Nyb2xsYmFyLCBDb21wb25lbnRcclxufSJdfQ==
},{"../components/proto":10,"./base":33,"./emitter":34,"./is-browser":36,"./is-node":37,"./is-number":38,"./is-scalar":39,"./measure-scrollbar":40}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	return isBrowser;
};

var isBrowser = new Function("try{return this===window}catch(e){return false}")();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWJyb3dzZXIuanMiXSwibmFtZXMiOlsiaXNCcm93c2VyIiwiRnVuY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFFZSxZQUFZO0FBQzFCLFFBQU9BLFNBQVA7QUFDQSxDOztBQUpELElBQUlBLFlBQWEsSUFBSUMsUUFBSixDQUFhLGlEQUFiLENBQUQsRUFBaEIiLCJmaWxlIjoiaXMtYnJvd3Nlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBpc0Jyb3dzZXIgPSAobmV3IEZ1bmN0aW9uKFwidHJ5e3JldHVybiB0aGlzPT09d2luZG93fWNhdGNoKGUpe3JldHVybiBmYWxzZX1cIikpKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XHJcblx0cmV0dXJuIGlzQnJvd3NlclxyXG59Il19
},{}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

exports.default = function () {
	return isNode;
};

var isNode = new Function("try{return this===global}catch(e){return false}")();

if (!isNode) {
	isNode = !!(typeof module !== 'undefined' && module.exports);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLW5vZGUuanMiXSwibmFtZXMiOlsiaXNOb2RlIiwiRnVuY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBTWUsWUFBWTtBQUMxQixRQUFPQSxNQUFQO0FBQ0EsQzs7QUFSRCxJQUFJQSxTQUFVLElBQUlDLFFBQUosQ0FBYSxpREFBYixDQUFELEVBQWI7O0FBRUEsSUFBSSxDQUFDRCxNQUFMLEVBQWM7QUFDYkEsVUFBUyxDQUFDLEVBQUcsT0FBT0UsTUFBUCxLQUFrQixXQUFsQixJQUFpQ0EsT0FBT0MsT0FBM0MsQ0FBVjtBQUNBIiwiZmlsZSI6ImlzLW5vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgaXNOb2RlID0gKG5ldyBGdW5jdGlvbihcInRyeXtyZXR1cm4gdGhpcz09PWdsb2JhbH1jYXRjaChlKXtyZXR1cm4gZmFsc2V9XCIpKSgpO1xyXG5cclxuaWYoICFpc05vZGUgKSB7XHJcblx0aXNOb2RlID0gISEgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XHJcblx0cmV0dXJuIGlzTm9kZVxyXG59Il19
},{}],38:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = IsNumber;
/**
 * @return {boolean}
 */
function IsNumber(value) {
	var tof = typeof value === 'undefined' ? 'undefined' : _typeof(value);

	if (tof != 'number') {
		if (tof == 'string') {
			value /= 1;
		} else {
			return false;
		}
	}

	return !isNaN(value) && isFinite(value);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLW51bWJlci5qcyJdLCJuYW1lcyI6WyJJc051bWJlciIsInZhbHVlIiwidG9mIiwiaXNOYU4iLCJpc0Zpbml0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBR3dCQSxRO0FBSHhCOzs7QUFHZSxTQUFTQSxRQUFULENBQWtCQyxLQUFsQixFQUNmO0FBQ0MsS0FBSUMsYUFBYUQsS0FBYix5Q0FBYUEsS0FBYixDQUFKOztBQUVBLEtBQUlDLE9BQU8sUUFBWCxFQUFzQjtBQUNyQixNQUFJQSxPQUFPLFFBQVgsRUFBc0I7QUFDckJELFlBQVMsQ0FBVDtBQUNBLEdBRkQsTUFHSztBQUNKLFVBQU8sS0FBUDtBQUNBO0FBQ0Q7O0FBRUQsUUFBTyxDQUFFRSxNQUFNRixLQUFOLENBQUYsSUFBa0JHLFNBQVNILEtBQVQsQ0FBekI7QUFDQSIsImZpbGUiOiJpcy1udW1iZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHJldHVybiB7Ym9vbGVhbn1cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIElzTnVtYmVyKHZhbHVlKVxyXG57XHJcblx0bGV0IHRvZiA9IHR5cGVvZiB2YWx1ZTtcclxuXHJcblx0aWYoIHRvZiAhPSAnbnVtYmVyJyApIHtcclxuXHRcdGlmKCB0b2YgPT0gJ3N0cmluZycgKSB7XHJcblx0XHRcdHZhbHVlIC89IDE7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gISBpc05hTih2YWx1ZSkgJiYgaXNGaW5pdGUodmFsdWUpXHJcbn0iXX0=
},{}],39:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = IsScalar;

/**
 * @return {boolean}
 */
function IsScalar(value) {
	if (value === null || value === undefined) {
		return true;
	}
	var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
	return type == 'string' || type == 'number' || type == 'boolean';
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLXNjYWxhci5qcyJdLCJuYW1lcyI6WyJJc1NjYWxhciIsInZhbHVlIiwidW5kZWZpbmVkIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBSXdCQSxROztBQUh4Qjs7O0FBR2UsU0FBU0EsUUFBVCxDQUFrQkMsS0FBbEIsRUFDZjtBQUNDLEtBQUlBLFVBQVUsSUFBVixJQUFrQkEsVUFBVUMsU0FBaEMsRUFBMkM7QUFDMUMsU0FBTyxJQUFQO0FBQ0E7QUFDRCxLQUFJQyxjQUFjRixLQUFkLHlDQUFjQSxLQUFkLENBQUo7QUFDQSxRQUFPRSxRQUFRLFFBQVIsSUFBb0JBLFFBQVEsUUFBNUIsSUFBd0NBLFFBQVEsU0FBdkQ7QUFDQSIsImZpbGUiOiJpcy1zY2FsYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyoqXHJcbiAqIEByZXR1cm4ge2Jvb2xlYW59XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJc1NjYWxhcih2YWx1ZSlcclxue1xyXG5cdGlmKCB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRyZXR1cm4gdHJ1ZVxyXG5cdH1cclxuXHRsZXQgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcclxuXHRyZXR1cm4gdHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nO1xyXG59XHJcbiJdfQ==
},{}],40:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = MeasureScrollbar;

var _element = require('../dom/element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var init = false,
    width = 0;

/**
 * @return {number}
 */
function MeasureScrollbar() {
	if (!init) {
		var body = document.body;
		if (body) {
			init = true;
			var div1 = _element2.default.create({ style: { width: 100, height: 100, overflow: 'auto', position: 'absolute', top: -500, left: 0 }, parent: body }),
			    div2 = _element2.default.create({ style: { height: 200, position: 'relative' }, parent: div1 });

			width = 100 - div2.offsetWidth;
			body.removeChild(div1);
		}
	}

	return width;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYXN1cmUtc2Nyb2xsYmFyLmpzIl0sIm5hbWVzIjpbIk1lYXN1cmVTY3JvbGxiYXIiLCJpbml0Iiwid2lkdGgiLCJib2R5IiwiZG9jdW1lbnQiLCJkaXYxIiwiY3JlYXRlIiwic3R5bGUiLCJoZWlnaHQiLCJvdmVyZmxvdyIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInBhcmVudCIsImRpdjIiLCJvZmZzZXRXaWR0aCIsInJlbW92ZUNoaWxkIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFRd0JBLGdCOztBQVB4Qjs7Ozs7O0FBRUEsSUFBSUMsT0FBTyxLQUFYO0FBQUEsSUFBa0JDLFFBQVEsQ0FBMUI7O0FBRUE7OztBQUdlLFNBQVNGLGdCQUFULEdBQ2Y7QUFDQyxLQUFJLENBQUNDLElBQUwsRUFDQTtBQUNDLE1BQUlFLE9BQU9DLFNBQVNELElBQXBCO0FBQ0EsTUFBSUEsSUFBSixFQUFXO0FBQ1ZGLFVBQU8sSUFBUDtBQUNBLE9BQUlJLE9BQU8sa0JBQVFDLE1BQVIsQ0FBZSxFQUFFQyxPQUFPLEVBQUNMLE9BQU8sR0FBUixFQUFhTSxRQUFRLEdBQXJCLEVBQTBCQyxVQUFVLE1BQXBDLEVBQTRDQyxVQUFVLFVBQXRELEVBQWtFQyxLQUFLLENBQUMsR0FBeEUsRUFBNkVDLE1BQU0sQ0FBbkYsRUFBVCxFQUFnR0MsUUFBUVYsSUFBeEcsRUFBZixDQUFYO0FBQUEsT0FDQ1csT0FBTyxrQkFBUVIsTUFBUixDQUFlLEVBQUVDLE9BQU8sRUFBQ0MsUUFBUSxHQUFULEVBQWNFLFVBQVUsVUFBeEIsRUFBVCxFQUE4Q0csUUFBUVIsSUFBdEQsRUFBZixDQURSOztBQUdBSCxXQUFRLE1BQU1ZLEtBQUtDLFdBQW5CO0FBQ0FaLFFBQUthLFdBQUwsQ0FBaUJYLElBQWpCO0FBQ0E7QUFDRDs7QUFFRCxRQUFPSCxLQUFQO0FBQ0EiLCJmaWxlIjoibWVhc3VyZS1zY3JvbGxiYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL2RvbS9lbGVtZW50XCI7XHJcblxyXG5sZXQgaW5pdCA9IGZhbHNlLCB3aWR0aCA9IDA7XHJcblxyXG4vKipcclxuICogQHJldHVybiB7bnVtYmVyfVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWVhc3VyZVNjcm9sbGJhcigpXHJcbntcclxuXHRpZiggIWluaXQgKVxyXG5cdHtcclxuXHRcdGxldCBib2R5ID0gZG9jdW1lbnQuYm9keTtcclxuXHRcdGlmKCBib2R5ICkge1xyXG5cdFx0XHRpbml0ID0gdHJ1ZTtcclxuXHRcdFx0bGV0IGRpdjEgPSBFbGVtZW50LmNyZWF0ZSh7IHN0eWxlOiB7d2lkdGg6IDEwMCwgaGVpZ2h0OiAxMDAsIG92ZXJmbG93OiAnYXV0bycsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6IC01MDAsIGxlZnQ6IDB9LCBwYXJlbnQ6IGJvZHkgfSksXHJcblx0XHRcdFx0ZGl2MiA9IEVsZW1lbnQuY3JlYXRlKHsgc3R5bGU6IHtoZWlnaHQ6IDIwMCwgcG9zaXRpb246ICdyZWxhdGl2ZSd9LCBwYXJlbnQ6IGRpdjEgfSk7XHJcblxyXG5cdFx0XHR3aWR0aCA9IDEwMCAtIGRpdjIub2Zmc2V0V2lkdGg7XHJcblx0XHRcdGJvZHkucmVtb3ZlQ2hpbGQoZGl2MSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gd2lkdGhcclxufTtcclxuIl19
},{"../dom/element":18}],41:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var nativeSupport = false;
var noMap = {};

var reg = /^els:/;

if (typeof document !== "undefined") {
	try {
		var f = function f(e) {
			nativeSupport = e.detail.support;
		};
		document.addEventListener("els:test", f, false);
		document.dispatchEvent(new CustomEvent({ detail: { support: true } }));
		document.removeEventListener("els:test", f, false);
	} catch (e) {
		nativeSupport = false;
	}
}

function UserEvent(name, props) {

	var propagation = false;
	var prevent = false;
	var stop = false;

	return {
		get __stop() {
			return stop;
		},
		get bubbles() {
			return false;
		},
		get defaultPrevented() {
			return prevent;
		},
		get cancelBubble() {
			return propagation;
		},
		get cancelable() {
			return false;
		},
		get composed() {
			return false;
		},
		currentTarget: document,
		target: document,
		stopPropagation: function stopPropagation() {
			propagation = true;
		},
		preventDefault: function preventDefault() {
			prevent = true;
		},
		stopImmediatePropagation: function stopImmediatePropagation() {
			stop = true;
		},

		detail: props,
		type: "els:" + name,
		get isTrusted() {
			return false;
		}
	};
}

/**
 * @return {string}
 */
function GetName(name) {
	return String(name).trim().replace(reg, '');
}

var Trigger = {

	get isNative() {
		return nativeSupport;
	},

	add: function add(name, callback) {
		name = GetName(name);
		if (nativeSupport) {
			document.removeEventListener("els:" + name, callback, false);
		} else if (noMap[name]) {
			noMap[name].push(callback);
		} else {
			noMap[name] = [callback];
		}
	},
	one: function one(name, callback) {
		name = GetName(name);
		var self = this,
		    _func = void 0;
		_func = function func(e) {
			self.remove(name, _func);return callback(e);
		};
		self.add(name, _func);
	},
	remove: function remove(name, callback) {
		name = GetName(name);
		if (nativeSupport) {
			document.removeEventListener("els:" + name, callback, false);
		} else if (noMap[name]) {
			var index = void 0,
			    obj = noMap[name];
			for (;;) {
				index = obj.indexOf(callback);
				if (index > -1) {
					obj.splice(index, 1);
				} else {
					break;
				}
			}
			if (!obj.length) {
				delete noMap[name];
			}
		}
	},
	fake: function fake(name, props, callback) {
		name = GetName(name);
		callback(nativeSupport ? new CustomEvent("els:" + name, { detail: props }) : UserEvent(name, props));
	},
	dispatch: function dispatch(name) {
		var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		name = GetName(name);
		if (nativeSupport) {
			document.dispatchEvent(new CustomEvent("els:" + name, { detail: props }));
		} else if (noMap[name]) {

			var e = UserEvent(name, props);

			for (var i = 0, obj = noMap[name], len = obj.length, c; i < len; i++) {
				if (c = obj[i]) {
					try {
						c(e);
					} catch (e) {}
				}
				if (e.__stop) {
					break;
				}
			}
		}
	}
};

exports.default = Trigger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}],42:[function(require,module,exports){
'use strict';

module.exports = require('./lib/ReactDOM');

},{"./lib/ReactDOM":72}],43:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;
},{}],44:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":75,"fbjs/lib/focusNode":177}],45:[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventPropagators":61,"./FallbackCompositionState":62,"./SyntheticCompositionEvent":126,"./SyntheticInputEvent":130,"fbjs/lib/ExecutionEnvironment":169}],46:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],47:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactInstrumentation = require('./ReactInstrumentation');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;
}).call(this,require("PqDAv+"))
},{"./CSSProperty":46,"./ReactInstrumentation":104,"./dangerousStyleValue":143,"PqDAv+":231,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/camelizeStyleName":171,"fbjs/lib/hyphenateStyleName":182,"fbjs/lib/memoizeStringOnly":186,"fbjs/lib/warning":190}],48:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
}).call(this,require("PqDAv+"))
},{"./PooledClass":66,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],49:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput') {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return targetInst;
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"./EventPluginHub":58,"./EventPropagators":61,"./ReactDOMComponentTree":75,"./ReactUpdates":119,"./SyntheticEvent":128,"./getEventTarget":151,"./isEventSupported":158,"./isTextInputElement":159,"fbjs/lib/ExecutionEnvironment":169}],50:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: { toIndex: update.toIndex, content: update.content.toString() }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;
}).call(this,require("PqDAv+"))
},{"./DOMLazyTree":51,"./Danger":55,"./ReactDOMComponentTree":75,"./ReactInstrumentation":104,"./createMicrosoftUnsafeLocalFunction":142,"./setInnerHTML":163,"./setTextContent":164,"PqDAv+":231}],51:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = require('./DOMNamespaces');
var setInnerHTML = require('./setInnerHTML');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./DOMNamespaces":52,"./createMicrosoftUnsafeLocalFunction":142,"./setInnerHTML":163,"./setTextContent":164}],52:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],53:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],54:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstrumentation = require('./ReactInstrumentation');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }

};

module.exports = DOMPropertyOperations;
}).call(this,require("PqDAv+"))
},{"./DOMProperty":53,"./ReactDOMComponentTree":75,"./ReactInstrumentation":104,"./quoteAttributeValueForBrowser":160,"PqDAv+":231,"fbjs/lib/warning":190}],55:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
}).call(this,require("PqDAv+"))
},{"./DOMLazyTree":51,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/createNodesFromMarkup":174,"fbjs/lib/emptyFunction":175,"fbjs/lib/invariant":183}],56:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;
},{}],57:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"./EventPropagators":61,"./ReactDOMComponentTree":75,"./SyntheticMouseEvent":132}],58:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
}).call(this,require("PqDAv+"))
},{"./EventPluginRegistry":59,"./EventPluginUtils":60,"./ReactErrorUtils":95,"./accumulateInto":139,"./forEachAccumulated":147,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],59:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],60:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}).call(this,require("PqDAv+"))
},{"./ReactErrorUtils":95,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190}],61:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}).call(this,require("PqDAv+"))
},{"./EventPluginHub":58,"./EventPluginUtils":60,"./accumulateInto":139,"./forEachAccumulated":147,"PqDAv+":231,"fbjs/lib/warning":190}],62:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":66,"./getTextContentAccessor":155,"object-assign":191}],63:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":53}],64:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],65:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypesSecret = require('./ReactPropTypesSecret');
var propTypesFactory = require('prop-types/factory');

var React = require('react/lib/React');
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
}).call(this,require("PqDAv+"))
},{"./ReactPropTypesSecret":112,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"prop-types/factory":193,"react/lib/React":198}],66:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],67:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"./EventPluginRegistry":59,"./ReactEventEmitterMixin":96,"./ViewportMetrics":138,"./getVendorPrefixedEventName":156,"./isEventSupported":158,"object-assign":191}],68:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
  ) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}).call(this,require("PqDAv+"))
},{"./KeyEscapeUtils":64,"./ReactReconciler":114,"./instantiateReactComponent":157,"./shouldUpdateReactComponent":165,"./traverseAllChildren":166,"PqDAv+":231,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],69:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

};

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":50,"./ReactDOMIDOperations":79}],70:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],71:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var React = require('react/lib/React');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactReconciler = require('./ReactReconciler');

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = require('./checkReactTypeSpec');
}

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shallowEqual = require('fbjs/lib/shallowEqual');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;
}).call(this,require("PqDAv+"))
},{"./ReactComponentEnvironment":70,"./ReactErrorUtils":95,"./ReactInstanceMap":103,"./ReactInstrumentation":104,"./ReactNodeTypes":109,"./ReactReconciler":114,"./checkReactTypeSpec":141,"./reactProdInvariant":161,"./shouldUpdateReactComponent":165,"PqDAv+":231,"fbjs/lib/emptyObject":176,"fbjs/lib/invariant":183,"fbjs/lib/shallowEqual":189,"fbjs/lib/warning":190,"object-assign":191,"react/lib/React":198,"react/lib/ReactCurrentOwner":203}],72:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = require('./ReactInstrumentation');
  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
}).call(this,require("PqDAv+"))
},{"./ReactDOMComponentTree":75,"./ReactDOMInvalidARIAHook":81,"./ReactDOMNullInputValuePropHook":82,"./ReactDOMUnknownPropertyHook":89,"./ReactDefaultInjection":92,"./ReactInstrumentation":104,"./ReactMount":107,"./ReactReconciler":114,"./ReactUpdates":119,"./ReactVersion":120,"./findDOMNode":145,"./getHostComponentFromComposite":152,"./renderSubtreeIntoContainer":162,"PqDAv+":231,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/warning":190}],73:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMultiChild = require('./ReactMultiChild');
var ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');

var emptyFunction = require('fbjs/lib/emptyFunction');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
}).call(this,require("PqDAv+"))
},{"./AutoFocusUtils":44,"./CSSPropertyOperations":47,"./DOMLazyTree":51,"./DOMNamespaces":52,"./DOMProperty":53,"./DOMPropertyOperations":54,"./EventPluginHub":58,"./EventPluginRegistry":59,"./ReactBrowserEventEmitter":67,"./ReactDOMComponentFlags":74,"./ReactDOMComponentTree":75,"./ReactDOMInput":80,"./ReactDOMOption":83,"./ReactDOMSelect":84,"./ReactDOMTextarea":87,"./ReactInstrumentation":104,"./ReactMultiChild":108,"./ReactServerRenderingTransaction":116,"./escapeTextContentForBrowser":144,"./isEventSupported":158,"./reactProdInvariant":161,"./validateDOMNesting":167,"PqDAv+":231,"fbjs/lib/emptyFunction":175,"fbjs/lib/invariant":183,"fbjs/lib/shallowEqual":189,"fbjs/lib/warning":190,"object-assign":191}],74:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],75:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
}).call(this,require("PqDAv+"))
},{"./DOMProperty":53,"./ReactDOMComponentFlags":74,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],76:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
}).call(this,require("PqDAv+"))
},{"./validateDOMNesting":167,"PqDAv+":231}],77:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":51,"./ReactDOMComponentTree":75,"object-assign":191}],78:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;
},{}],79:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":50,"./ReactDOMComponentTree":75}],80:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        // eslint-disable-next-line
        if (value != valueAsNumber) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
        // eslint-disable-next-line
      } else if (value != node.value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
}).call(this,require("PqDAv+"))
},{"./DOMPropertyOperations":54,"./LinkedValueUtils":65,"./ReactDOMComponentTree":75,"./ReactUpdates":119,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"object-assign":191}],81:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
}).call(this,require("PqDAv+"))
},{"./DOMProperty":53,"PqDAv+":231,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],82:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],83:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var React = require('react/lib/React');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;
}).call(this,require("PqDAv+"))
},{"./ReactDOMComponentTree":75,"./ReactDOMSelect":84,"PqDAv+":231,"fbjs/lib/warning":190,"object-assign":191,"react/lib/React":198}],84:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
}).call(this,require("PqDAv+"))
},{"./LinkedValueUtils":65,"./ReactDOMComponentTree":75,"./ReactUpdates":119,"PqDAv+":231,"fbjs/lib/warning":190,"object-assign":191}],85:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":154,"./getTextContentAccessor":155,"fbjs/lib/ExecutionEnvironment":169}],86:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;
}).call(this,require("PqDAv+"))
},{"./DOMChildrenOperations":50,"./DOMLazyTree":51,"./ReactDOMComponentTree":75,"./escapeTextContentForBrowser":144,"./reactProdInvariant":161,"./validateDOMNesting":167,"PqDAv+":231,"fbjs/lib/invariant":183,"object-assign":191}],87:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
}).call(this,require("PqDAv+"))
},{"./LinkedValueUtils":65,"./ReactDOMComponentTree":75,"./ReactUpdates":119,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"object-assign":191}],88:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],89:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
}).call(this,require("PqDAv+"))
},{"./DOMProperty":53,"./EventPluginRegistry":59,"PqDAv+":231,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],90:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');
var ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');
var ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
}).call(this,require("PqDAv+"))
},{"./ReactHostOperationHistoryHook":100,"./ReactInvalidSetStateWarningHook":105,"PqDAv+":231,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/performanceNow":188,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],91:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":119,"./Transaction":137,"fbjs/lib/emptyFunction":175,"object-assign":191}],92:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');
var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
},{"./ARIADOMPropertyConfig":43,"./BeforeInputEventPlugin":45,"./ChangeEventPlugin":49,"./DefaultEventPluginOrder":56,"./EnterLeaveEventPlugin":57,"./HTMLDOMPropertyConfig":63,"./ReactComponentBrowserEnvironment":69,"./ReactDOMComponent":73,"./ReactDOMComponentTree":75,"./ReactDOMEmptyComponent":77,"./ReactDOMTextComponent":86,"./ReactDOMTreeTraversal":88,"./ReactDefaultBatchingStrategy":91,"./ReactEventListener":97,"./ReactInjection":101,"./ReactReconcileTransaction":113,"./SVGDOMPropertyConfig":121,"./SelectEventPlugin":122,"./SimpleEventPlugin":123}],93:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],94:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],95:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231}],96:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":58}],97:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":66,"./ReactDOMComponentTree":75,"./ReactUpdates":119,"./getEventTarget":151,"fbjs/lib/EventListener":168,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/getUnboundedScrollPosition":180,"object-assign":191}],98:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],99:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],100:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
},{}],101:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactHostComponent = require('./ReactHostComponent');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":53,"./EventPluginHub":58,"./EventPluginUtils":60,"./ReactBrowserEventEmitter":67,"./ReactComponentEnvironment":70,"./ReactEmptyComponent":94,"./ReactHostComponent":99,"./ReactUpdates":119}],102:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":85,"fbjs/lib/containsNode":172,"fbjs/lib/focusNode":177,"fbjs/lib/getActiveElement":178}],103:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],104:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
}).call(this,require("PqDAv+"))
},{"./ReactDebugTool":90,"PqDAv+":231}],105:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231,"fbjs/lib/warning":190}],106:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":140}],107:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var React = require('react/lib/React');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
}).call(this,require("PqDAv+"))
},{"./DOMLazyTree":51,"./DOMProperty":53,"./ReactBrowserEventEmitter":67,"./ReactDOMComponentTree":75,"./ReactDOMContainerInfo":76,"./ReactDOMFeatureFlags":78,"./ReactFeatureFlags":98,"./ReactInstanceMap":103,"./ReactInstrumentation":104,"./ReactMarkupChecksum":106,"./ReactReconciler":114,"./ReactUpdateQueue":118,"./ReactUpdates":119,"./instantiateReactComponent":157,"./reactProdInvariant":161,"./setInnerHTML":163,"./shouldUpdateReactComponent":165,"PqDAv+":231,"fbjs/lib/emptyObject":176,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"react/lib/React":198,"react/lib/ReactCurrentOwner":203}],108:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var emptyFunction = require('fbjs/lib/emptyFunction');
var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
}).call(this,require("PqDAv+"))
},{"./ReactChildReconciler":68,"./ReactComponentEnvironment":70,"./ReactInstanceMap":103,"./ReactInstrumentation":104,"./ReactReconciler":114,"./flattenChildren":146,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/emptyFunction":175,"fbjs/lib/invariant":183,"react/lib/ReactCurrentOwner":203}],109:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var React = require('react/lib/React');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"react/lib/React":198}],110:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],111:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231}],112:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],113:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var ReactInstrumentation = require('./ReactInstrumentation');
var Transaction = require('./Transaction');
var ReactUpdateQueue = require('./ReactUpdateQueue');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
}).call(this,require("PqDAv+"))
},{"./CallbackQueue":48,"./PooledClass":66,"./ReactBrowserEventEmitter":67,"./ReactInputSelection":102,"./ReactInstrumentation":104,"./ReactUpdateQueue":118,"./Transaction":137,"PqDAv+":231,"object-assign":191}],114:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

var warning = require('fbjs/lib/warning');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
  ) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
}).call(this,require("PqDAv+"))
},{"./ReactInstrumentation":104,"./ReactRef":115,"PqDAv+":231,"fbjs/lib/warning":190}],115:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":110}],116:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');
var Transaction = require('./Transaction');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactServerUpdateQueue = require('./ReactServerUpdateQueue');

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
}).call(this,require("PqDAv+"))
},{"./PooledClass":66,"./ReactInstrumentation":104,"./ReactServerUpdateQueue":117,"./Transaction":137,"PqDAv+":231,"object-assign":191}],117:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = require('./ReactUpdateQueue');

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
}).call(this,require("PqDAv+"))
},{"./ReactUpdateQueue":118,"PqDAv+":231,"fbjs/lib/warning":190}],118:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;
}).call(this,require("PqDAv+"))
},{"./ReactInstanceMap":103,"./ReactInstrumentation":104,"./ReactUpdates":119,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"react/lib/ReactCurrentOwner":203}],119:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}).call(this,require("PqDAv+"))
},{"./CallbackQueue":48,"./PooledClass":66,"./ReactFeatureFlags":98,"./ReactReconciler":114,"./Transaction":137,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"object-assign":191}],120:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.5.4';
},{}],121:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],122:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var shallowEqual = require('fbjs/lib/shallowEqual');

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventPropagators":61,"./ReactDOMComponentTree":75,"./ReactInputSelection":102,"./SyntheticEvent":128,"./isTextInputElement":159,"fbjs/lib/ExecutionEnvironment":169,"fbjs/lib/getActiveElement":178,"fbjs/lib/shallowEqual":189}],123:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;
}).call(this,require("PqDAv+"))
},{"./EventPropagators":61,"./ReactDOMComponentTree":75,"./SyntheticAnimationEvent":124,"./SyntheticClipboardEvent":125,"./SyntheticDragEvent":127,"./SyntheticEvent":128,"./SyntheticFocusEvent":129,"./SyntheticKeyboardEvent":131,"./SyntheticMouseEvent":132,"./SyntheticTouchEvent":133,"./SyntheticTransitionEvent":134,"./SyntheticUIEvent":135,"./SyntheticWheelEvent":136,"./getEventCharCode":148,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/EventListener":168,"fbjs/lib/emptyFunction":175,"fbjs/lib/invariant":183}],124:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":128}],125:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":128}],126:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":128}],127:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":132}],128:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      // eslint-disable-line valid-typeof
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // eslint-disable-line valid-typeof
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
}).call(this,require("PqDAv+"))
},{"./PooledClass":66,"PqDAv+":231,"fbjs/lib/emptyFunction":175,"fbjs/lib/warning":190,"object-assign":191}],129:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":135}],130:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":128}],131:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":135,"./getEventCharCode":148,"./getEventKey":149,"./getEventModifierState":150}],132:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":135,"./ViewportMetrics":138,"./getEventModifierState":150}],133:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":135,"./getEventModifierState":150}],134:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":128}],135:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":128,"./getEventTarget":151}],136:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":132}],137:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],138:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],139:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var invariant = require('fbjs/lib/invariant');

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}).call(this,require("PqDAv+"))
},{"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183}],140:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],141:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require("PqDAv+"))
},{"./ReactPropTypeLocationNames":111,"./ReactPropTypesSecret":112,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],142:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],143:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
}).call(this,require("PqDAv+"))
},{"./CSSProperty":46,"PqDAv+":231,"fbjs/lib/warning":190}],144:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html


/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
},{}],145:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getHostComponentFromComposite = require('./getHostComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
}).call(this,require("PqDAv+"))
},{"./ReactDOMComponentTree":75,"./ReactInstanceMap":103,"./getHostComponentFromComposite":152,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"react/lib/ReactCurrentOwner":203}],146:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var KeyEscapeUtils = require('./KeyEscapeUtils');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}).call(this,require("PqDAv+"))
},{"./KeyEscapeUtils":64,"./traverseAllChildren":166,"PqDAv+":231,"fbjs/lib/warning":190,"react/lib/ReactComponentTreeHook":202}],147:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
},{}],148:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],149:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":148}],150:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],151:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],152:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
},{"./ReactNodeTypes":109}],153:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],154:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],155:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":169}],156:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":169}],157:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactHostComponent = require('./ReactHostComponent');

var getNextDebugID = require('react/lib/getNextDebugID');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
}).call(this,require("PqDAv+"))
},{"./ReactCompositeComponent":71,"./ReactEmptyComponent":94,"./ReactHostComponent":99,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"object-assign":191,"react/lib/getNextDebugID":217}],158:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":169}],159:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
},{}],160:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":144}],161:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],162:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":107}],163:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var DOMNamespaces = require('./DOMNamespaces');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./DOMNamespaces":52,"./createMicrosoftUnsafeLocalFunction":142,"fbjs/lib/ExecutionEnvironment":169}],164:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":144,"./setInnerHTML":163,"fbjs/lib/ExecutionEnvironment":169}],165:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],166:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('react/lib/ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require("PqDAv+"))
},{"./KeyEscapeUtils":64,"./ReactElementSymbol":93,"./getIteratorFn":153,"./reactProdInvariant":161,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190,"react/lib/ReactCurrentOwner":203}],167:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231,"fbjs/lib/emptyFunction":175,"fbjs/lib/warning":190,"object-assign":191}],168:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
}).call(this,require("PqDAv+"))
},{"./emptyFunction":175,"PqDAv+":231}],169:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],170:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],171:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":170}],172:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":185}],173:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
}).call(this,require("PqDAv+"))
},{"./invariant":183,"PqDAv+":231}],174:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
}).call(this,require("PqDAv+"))
},{"./ExecutionEnvironment":169,"./createArrayFromMixed":173,"./getMarkupWrap":179,"./invariant":183,"PqDAv+":231}],175:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],176:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231}],177:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],178:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;
},{}],179:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
}).call(this,require("PqDAv+"))
},{"./ExecutionEnvironment":169,"./invariant":183,"PqDAv+":231}],180:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],181:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],182:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":181}],183:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231}],184:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],185:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":184}],186:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],187:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":169}],188:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":187}],189:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],190:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
}).call(this,require("PqDAv+"))
},{"./emptyFunction":175,"PqDAv+":231}],191:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],192:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require('fbjs/lib/invariant');
  var warning = require('fbjs/lib/warning');
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

}).call(this,require("PqDAv+"))
},{"./lib/ReactPropTypesSecret":195,"PqDAv+":231,"fbjs/lib/invariant":183,"fbjs/lib/warning":190}],193:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = require('./factoryWithTypeCheckers');
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};

},{"./factoryWithTypeCheckers":194}],194:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var emptyFunction = require('fbjs/lib/emptyFunction');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

}).call(this,require("PqDAv+"))
},{"./checkPropTypes":192,"./lib/ReactPropTypesSecret":195,"PqDAv+":231,"fbjs/lib/emptyFunction":175,"fbjs/lib/invariant":183,"fbjs/lib/warning":190}],195:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],196:[function(require,module,exports){
module.exports=require(64)
},{}],197:[function(require,module,exports){
module.exports=require(66)
},{"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/invariant":223}],198:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactPureComponent = require('./ReactPureComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var canDefineProperty = require('./canDefineProperty');
  var ReactElementValidator = require('./ReactElementValidator');
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

// TODO: Fix tests so that this deprecation warning doesn't cause failures.
if (process.env.NODE_ENV !== 'production') {
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });
  }
}

module.exports = React;
}).call(this,require("PqDAv+"))
},{"./ReactChildren":199,"./ReactClass":200,"./ReactComponent":201,"./ReactDOMFactories":204,"./ReactElement":205,"./ReactElementValidator":207,"./ReactPropTypes":210,"./ReactPureComponent":212,"./ReactVersion":213,"./canDefineProperty":214,"./onlyChild":218,"PqDAv+":231,"fbjs/lib/warning":224,"object-assign":225}],199:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":197,"./ReactElement":205,"./traverseAllChildren":220,"fbjs/lib/emptyFunction":221}],200:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant'),
    _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (process.env.NODE_ENV !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

var didWarnDeprecated = false;

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;
      didWarnDeprecated = true;
    }

    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
}).call(this,require("PqDAv+"))
},{"./ReactComponent":201,"./ReactElement":205,"./ReactNoopUpdateQueue":208,"./ReactPropTypeLocationNames":209,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/emptyObject":222,"fbjs/lib/invariant":223,"fbjs/lib/warning":224,"object-assign":225}],201:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
}).call(this,require("PqDAv+"))
},{"./ReactNoopUpdateQueue":208,"./canDefineProperty":214,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/emptyObject":222,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],202:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
}).call(this,require("PqDAv+"))
},{"./ReactCurrentOwner":203,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],203:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],204:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = require('./ReactElement');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require('./ReactElementValidator');
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
}).call(this,require("PqDAv+"))
},{"./ReactElement":205,"./ReactElementValidator":207,"PqDAv+":231}],205:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}).call(this,require("PqDAv+"))
},{"./ReactCurrentOwner":203,"./ReactElementSymbol":206,"./canDefineProperty":214,"PqDAv+":231,"fbjs/lib/warning":224,"object-assign":225}],206:[function(require,module,exports){
module.exports=require(93)
},{}],207:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactComponentTreeHook = require('./ReactComponentTreeHook');
var ReactElement = require('./ReactElement');

var checkReactTypeSpec = require('./checkReactTypeSpec');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
}).call(this,require("PqDAv+"))
},{"./ReactComponentTreeHook":202,"./ReactCurrentOwner":203,"./ReactElement":205,"./canDefineProperty":214,"./checkReactTypeSpec":215,"./getIteratorFn":216,"PqDAv+":231,"fbjs/lib/warning":224}],208:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231,"fbjs/lib/warning":224}],209:[function(require,module,exports){
module.exports=require(111)
},{"PqDAv+":231}],210:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _require = require('./ReactElement'),
    isValidElement = _require.isValidElement;

var factory = require('prop-types/factory');

module.exports = factory(isValidElement);
},{"./ReactElement":205,"prop-types/factory":227}],211:[function(require,module,exports){
module.exports=require(112)
},{}],212:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;
},{"./ReactComponent":201,"./ReactNoopUpdateQueue":208,"fbjs/lib/emptyObject":222,"object-assign":225}],213:[function(require,module,exports){
module.exports=require(120)
},{}],214:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
}).call(this,require("PqDAv+"))
},{"PqDAv+":231}],215:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactPropTypesSecret = require('./ReactPropTypesSecret');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = require('./ReactComponentTreeHook');
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require('./ReactComponentTreeHook');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,require("PqDAv+"))
},{"./ReactComponentTreeHook":202,"./ReactPropTypeLocationNames":209,"./ReactPropTypesSecret":211,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],216:[function(require,module,exports){
module.exports=require(153)
},{}],217:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
},{}],218:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
}).call(this,require("PqDAv+"))
},{"./ReactElement":205,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/invariant":223}],219:[function(require,module,exports){
module.exports=require(161)
},{}],220:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = require('./reactProdInvariant');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var REACT_ELEMENT_TYPE = require('./ReactElementSymbol');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var KeyEscapeUtils = require('./KeyEscapeUtils');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require("PqDAv+"))
},{"./KeyEscapeUtils":196,"./ReactCurrentOwner":203,"./ReactElementSymbol":206,"./getIteratorFn":216,"./reactProdInvariant":219,"PqDAv+":231,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],221:[function(require,module,exports){
module.exports=require(175)
},{}],222:[function(require,module,exports){
module.exports=require(176)
},{"PqDAv+":231}],223:[function(require,module,exports){
module.exports=require(183)
},{"PqDAv+":231}],224:[function(require,module,exports){
module.exports=require(190)
},{"./emptyFunction":221,"PqDAv+":231}],225:[function(require,module,exports){
module.exports=require(191)
},{}],226:[function(require,module,exports){
module.exports=require(192)
},{"./lib/ReactPropTypesSecret":229,"PqDAv+":231,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],227:[function(require,module,exports){
module.exports=require(193)
},{"./factoryWithTypeCheckers":228}],228:[function(require,module,exports){
module.exports=require(194)
},{"./checkPropTypes":226,"./lib/ReactPropTypesSecret":229,"PqDAv+":231,"fbjs/lib/emptyFunction":221,"fbjs/lib/invariant":223,"fbjs/lib/warning":224}],229:[function(require,module,exports){
module.exports=require(195)
},{}],230:[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":198}],231:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}]},{},[26])